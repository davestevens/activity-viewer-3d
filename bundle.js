!function(t){var e={};function n(i){if(e[i])return e[i].exports;var r=e[i]={i:i,l:!1,exports:{}};return t[i].call(r.exports,r,r.exports,n),r.l=!0,r.exports}n.m=t,n.c=e,n.d=function(t,e,i){n.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:i})},n.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},n.t=function(t,e){if(1&e&&(t=n(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var i=Object.create(null);if(n.r(i),Object.defineProperty(i,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var r in t)n.d(i,r,function(e){return t[e]}.bind(null,r));return i},n.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return n.d(e,"a",e),e},n.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},n.p="",n(n.s=2)}([function(t){t.exports=JSON.parse('{"latlng":{"data":[[52.611507,-1.125872],[52.611504,-1.125841],[52.611501,-1.125801],[52.6115,-1.125753],[52.611494,-1.125699],[52.611486,-1.125638],[52.611479,-1.125573],[52.611465,-1.125506],[52.611453,-1.125432],[52.611444,-1.125353],[52.611437,-1.125272],[52.611429,-1.125187],[52.611421,-1.125102],[52.611411,-1.125014],[52.611402,-1.124927],[52.611398,-1.12484],[52.611391,-1.124753],[52.61138,-1.124664],[52.611369,-1.124571],[52.611358,-1.124481],[52.611349,-1.124387],[52.611341,-1.124297],[52.611331,-1.124209],[52.61132,-1.124123],[52.611308,-1.124035],[52.611299,-1.123948],[52.611289,-1.123865],[52.61128,-1.123786],[52.611273,-1.123711],[52.611262,-1.123642],[52.611253,-1.123582],[52.611252,-1.123534],[52.611249,-1.123492],[52.611245,-1.123451],[52.611235,-1.123403],[52.611224,-1.123349],[52.611212,-1.12329],[52.611201,-1.123225],[52.611193,-1.123158],[52.611182,-1.123087],[52.611173,-1.123017],[52.611166,-1.12295],[52.611155,-1.122882],[52.611147,-1.122817],[52.611136,-1.122749],[52.611128,-1.122684],[52.611117,-1.122618],[52.611106,-1.122552],[52.611094,-1.122485],[52.611089,-1.122418],[52.611082,-1.12235],[52.611077,-1.122282],[52.61107,-1.122213],[52.611066,-1.122145],[52.611065,-1.122073],[52.611062,-1.121999],[52.611058,-1.121923],[52.611054,-1.121847],[52.61105,-1.121768],[52.61105,-1.121687],[52.61105,-1.121602],[52.61105,-1.121518],[52.611047,-1.121438],[52.611043,-1.121359],[52.611042,-1.12128],[52.611042,-1.121198],[52.611042,-1.121116],[52.611042,-1.121033],[52.611039,-1.120947],[52.611038,-1.120862],[52.611038,-1.120777],[52.611038,-1.120692],[52.611035,-1.120608],[52.611034,-1.120522],[52.611034,-1.120437],[52.611037,-1.120352],[52.611035,-1.120269],[52.611034,-1.120185],[52.611031,-1.120101],[52.611031,-1.120015],[52.611031,-1.119933],[52.611031,-1.119852],[52.611031,-1.119777],[52.611034,-1.119709],[52.611037,-1.119652],[52.611041,-1.119602],[52.611045,-1.119546],[52.611043,-1.119486],[52.611039,-1.119414],[52.611038,-1.119335],[52.611032,-1.119252],[52.611028,-1.119168],[52.611027,-1.119083],[52.611024,-1.118995],[52.611023,-1.118906],[52.611023,-1.118818],[52.611023,-1.118729],[52.611026,-1.118642],[52.611027,-1.118552],[52.611027,-1.118462],[52.611027,-1.118373],[52.611024,-1.118285],[52.61102,-1.118194],[52.611019,-1.118102],[52.611022,-1.118009],[52.61102,-1.117915],[52.611016,-1.117823],[52.611012,-1.117733],[52.611011,-1.117635],[52.611011,-1.117541],[52.611011,-1.117446],[52.611011,-1.117351],[52.611009,-1.117259],[52.611008,-1.117167],[52.611005,-1.117069],[52.611007,-1.116974],[52.611008,-1.116879],[52.611008,-1.116785],[52.611005,-1.116691],[52.611001,-1.116596],[52.611,-1.116501],[52.611,-1.116408],[52.611,-1.116315],[52.611,-1.116226],[52.611,-1.116141],[52.611,-1.116066],[52.611,-1.116],[52.611,-1.115947],[52.611,-1.115912],[52.611003,-1.115878],[52.611004,-1.115835],[52.611007,-1.115782],[52.611008,-1.115721],[52.611011,-1.115652],[52.611011,-1.115578],[52.611011,-1.115497],[52.611011,-1.115411],[52.611009,-1.115322],[52.611008,-1.115233],[52.611011,-1.115145],[52.611014,-1.115057],[52.611021,-1.114968],[52.611026,-1.114881],[52.611027,-1.11479],[52.611033,-1.114702],[52.61104,-1.114612],[52.611051,-1.114524],[52.611062,-1.114436],[52.611077,-1.11435],[52.611092,-1.114264],[52.61111,-1.114177],[52.611126,-1.114092],[52.611139,-1.114002],[52.611153,-1.113911],[52.611168,-1.11382],[52.611181,-1.113732],[52.611195,-1.113645],[52.611207,-1.113554],[52.611216,-1.113468],[52.611223,-1.113378],[52.611231,-1.113287],[52.611236,-1.113198],[52.611242,-1.11311],[52.61125,-1.113024],[52.611255,-1.112938],[52.611259,-1.112857],[52.611262,-1.112777],[52.611272,-1.112699],[52.611287,-1.112621],[52.611308,-1.112541],[52.611331,-1.11246],[52.611357,-1.112378],[52.61138,-1.112297],[52.611403,-1.112212],[52.611429,-1.112126],[52.611453,-1.112038],[52.611476,-1.11195],[52.611504,-1.111861],[52.611535,-1.111776],[52.611565,-1.111688],[52.611596,-1.111596],[52.611626,-1.111504],[52.611657,-1.111413],[52.611687,-1.111322],[52.611718,-1.11123],[52.611749,-1.111139],[52.611779,-1.111049],[52.61181,-1.110958],[52.61184,-1.110869],[52.611877,-1.110781],[52.611915,-1.1107],[52.611955,-1.110628],[52.612001,-1.110556],[52.612046,-1.110483],[52.612092,-1.110411],[52.612138,-1.110336],[52.612187,-1.110264],[52.612233,-1.110192],[52.612282,-1.110119],[52.612329,-1.110045],[52.612375,-1.109967],[52.612423,-1.109891],[52.612473,-1.109814],[52.612522,-1.109738],[52.612575,-1.10966],[52.612628,-1.109581],[52.612679,-1.1095],[52.612731,-1.109416],[52.612785,-1.109331],[52.612838,-1.109248],[52.612888,-1.10917],[52.612944,-1.109092],[52.613001,-1.109018],[52.613056,-1.108941],[52.613103,-1.108859],[52.613152,-1.108775],[52.613198,-1.108692],[52.613244,-1.108605],[52.613284,-1.108519],[52.613325,-1.108429],[52.613364,-1.108339],[52.613402,-1.108251],[52.613439,-1.10817],[52.613478,-1.108083],[52.613514,-1.107996],[52.613548,-1.107907],[52.613579,-1.107819],[52.61361,-1.107731],[52.61364,-1.107641],[52.613671,-1.107551],[52.613698,-1.107463],[52.613725,-1.10737],[52.613752,-1.107277],[52.613776,-1.107186],[52.613801,-1.107093],[52.613825,-1.106992],[52.613848,-1.106897],[52.613871,-1.106804],[52.613891,-1.106706],[52.613916,-1.106609],[52.61394,-1.106512],[52.613966,-1.106416],[52.613989,-1.10632],[52.614009,-1.106223],[52.614031,-1.106125],[52.614054,-1.106025],[52.614074,-1.105927],[52.614093,-1.105832],[52.614112,-1.105737],[52.614131,-1.105647],[52.61415,-1.105556],[52.614167,-1.105464],[52.614179,-1.10537],[52.614184,-1.105275],[52.614188,-1.105178],[52.614192,-1.105084],[52.614196,-1.104995],[52.6142,-1.104905],[52.614206,-1.104822],[52.614211,-1.104743],[52.614218,-1.104668],[52.614229,-1.104604],[52.614237,-1.104556],[52.614242,-1.104518],[52.614245,-1.10449],[52.614249,-1.104468],[52.614253,-1.10445],[52.614257,-1.104436],[52.614258,-1.104426],[52.614262,-1.104413],[52.614273,-1.104361],[52.614286,-1.104308],[52.6143,-1.104247],[52.614315,-1.104175],[52.614331,-1.104094],[52.614349,-1.104009],[52.614371,-1.10392],[52.614391,-1.103823],[52.614413,-1.103725],[52.614439,-1.103624],[52.614466,-1.103521],[52.614492,-1.103419],[52.614519,-1.103314],[52.614543,-1.103209],[52.614571,-1.103101],[52.614605,-1.102994],[52.614648,-1.102893],[52.614706,-1.10281],[52.614769,-1.102736],[52.614837,-1.10266],[52.614905,-1.102585],[52.614973,-1.102509],[52.615046,-1.102428],[52.615119,-1.102345],[52.615192,-1.102264],[52.615264,-1.102182],[52.615339,-1.102095],[52.61541,-1.102009],[52.61549,-1.101903],[52.615568,-1.101789],[52.615641,-1.101676],[52.615705,-1.101557],[52.615769,-1.101428],[52.615834,-1.101298],[52.615899,-1.101156],[52.615958,-1.101006],[52.616003,-1.10085],[52.616048,-1.100702],[52.616088,-1.100557],[52.61612,-1.100405],[52.616154,-1.10024],[52.616176,-1.100067],[52.616198,-1.099893],[52.616221,-1.09972],[52.616241,-1.099546],[52.616263,-1.099373],[52.616286,-1.099204],[52.616303,-1.099034],[52.616321,-1.098864],[52.61634,-1.098698],[52.616353,-1.098537],[52.616365,-1.098376],[52.616376,-1.098214],[52.616388,-1.098055],[52.616405,-1.097896],[52.616415,-1.09774],[52.616426,-1.097582],[52.616431,-1.097419],[52.616435,-1.09726],[52.616436,-1.097109],[52.616439,-1.096958],[52.616443,-1.096811],[52.616441,-1.096677],[52.61644,-1.096527],[52.616437,-1.09638],[52.61643,-1.096232],[52.616428,-1.096086],[52.616423,-1.095939],[52.616415,-1.095796],[52.616413,-1.095656],[52.61641,-1.095518],[52.616409,-1.09538],[52.616409,-1.095244],[52.616409,-1.09511],[52.616409,-1.094977],[52.616412,-1.094847],[52.616413,-1.094714],[52.616413,-1.094582],[52.616419,-1.094454],[52.616427,-1.094327],[52.616434,-1.094199],[52.616448,-1.094074],[52.616466,-1.093952],[52.616494,-1.09384],[52.616527,-1.093731],[52.616565,-1.093624],[52.616606,-1.093521],[52.616651,-1.093424],[52.616702,-1.093331],[52.616756,-1.093244],[52.616812,-1.093163],[52.61687,-1.093087],[52.61693,-1.093017],[52.616994,-1.092954],[52.617062,-1.092899],[52.617133,-1.092849],[52.617206,-1.092803],[52.617275,-1.092761],[52.61735,-1.092722],[52.617423,-1.092685],[52.617495,-1.092647],[52.617568,-1.09261],[52.617638,-1.092575],[52.617711,-1.09254],[52.617782,-1.092505],[52.617857,-1.092467],[52.61793,-1.09243],[52.618003,-1.092395],[52.618074,-1.092359],[52.618147,-1.092323],[52.618219,-1.092288],[52.618289,-1.092256],[52.618361,-1.092222],[52.618431,-1.092185],[52.6185,-1.092149],[52.618564,-1.092117],[52.618632,-1.092079],[52.618702,-1.092039],[52.618767,-1.092002],[52.618835,-1.091966],[52.618901,-1.09193],[52.618963,-1.091895],[52.619026,-1.091859],[52.61909,-1.091822],[52.619153,-1.091784],[52.619214,-1.091748],[52.619276,-1.091713],[52.619334,-1.091678],[52.619396,-1.091645],[52.619458,-1.091611],[52.619519,-1.091577],[52.619577,-1.091544],[52.619637,-1.091512],[52.619699,-1.091476],[52.619756,-1.091441],[52.619811,-1.091404],[52.619868,-1.09137],[52.619925,-1.091339],[52.619982,-1.091306],[52.620036,-1.091273],[52.620093,-1.091239],[52.62015,-1.091207],[52.620204,-1.091177],[52.620256,-1.091149],[52.62031,-1.09112],[52.620364,-1.091091],[52.620411,-1.091055],[52.62046,-1.091017],[52.62051,-1.090981],[52.620557,-1.090949],[52.620606,-1.090918],[52.620652,-1.090891],[52.620698,-1.090866],[52.620741,-1.090841],[52.620786,-1.090818],[52.620826,-1.090797],[52.620864,-1.090776],[52.620899,-1.090759],[52.620933,-1.090742],[52.620964,-1.090727],[52.620995,-1.090713],[52.621023,-1.090702],[52.621047,-1.090692],[52.62107,-1.090682],[52.62109,-1.090671],[52.621109,-1.090659],[52.62113,-1.090649],[52.621153,-1.090636],[52.621176,-1.09062],[52.621196,-1.090606],[52.621212,-1.090594],[52.621231,-1.090584],[52.621256,-1.090574],[52.621288,-1.090561],[52.621326,-1.090538],[52.62137,-1.090503],[52.621412,-1.090457],[52.621448,-1.090395],[52.621474,-1.090322],[52.621494,-1.090244],[52.621504,-1.090158],[52.621506,-1.090071],[52.621506,-1.089978],[52.621506,-1.089887],[52.621503,-1.089794],[52.621499,-1.089702],[52.621498,-1.089607],[52.621492,-1.08951],[52.621488,-1.089413],[52.621478,-1.089311],[52.621469,-1.08921],[52.621462,-1.089105],[52.621451,-1.089],[52.621443,-1.088894],[52.621432,-1.088787],[52.621424,-1.088679],[52.621416,-1.088569],[52.621405,-1.08846],[52.621397,-1.088352],[52.621392,-1.088245],[52.621388,-1.088141],[52.621387,-1.088036],[52.62139,-1.087931],[52.621394,-1.087828],[52.621401,-1.087726],[52.621409,-1.087627],[52.621416,-1.087526],[52.621424,-1.087428],[52.621432,-1.087327],[52.621439,-1.087229],[52.62145,-1.087132],[52.621458,-1.087031],[52.621466,-1.086932],[52.621473,-1.086832],[52.621481,-1.08673],[52.621489,-1.086626],[52.621496,-1.086524],[52.621501,-1.08642],[52.621508,-1.086319],[52.621513,-1.086217],[52.621513,-1.086117],[52.621513,-1.086014],[52.621516,-1.085912],[52.621514,-1.085812],[52.621513,-1.085711],[52.621507,-1.08561],[52.621497,-1.085507],[52.621479,-1.085401],[52.621463,-1.085296],[52.621451,-1.08519],[52.62144,-1.085089],[52.621431,-1.084985],[52.621418,-1.084887],[52.621402,-1.084789],[52.621384,-1.084692],[52.621365,-1.084595],[52.621346,-1.0845],[52.621327,-1.084404],[52.621308,-1.084308],[52.621292,-1.084218],[52.621273,-1.084132],[52.621255,-1.084043],[52.62123,-1.083946],[52.621209,-1.08385],[52.62119,-1.083752],[52.62117,-1.083651],[52.621151,-1.083552],[52.621132,-1.083455],[52.621111,-1.08336],[52.62109,-1.083261],[52.621072,-1.083162],[52.621055,-1.08306],[52.62104,-1.082963],[52.621025,-1.082861],[52.621003,-1.082759],[52.620978,-1.082659],[52.620957,-1.082558],[52.620938,-1.082456],[52.620925,-1.082356],[52.620916,-1.082256],[52.620906,-1.082152],[52.620894,-1.082051],[52.620883,-1.081948],[52.620868,-1.081843],[52.620859,-1.081738],[52.620851,-1.081629],[52.620844,-1.081515],[52.620839,-1.081398],[52.620835,-1.081282],[52.620831,-1.081165],[52.620828,-1.08105],[52.620824,-1.080932],[52.62082,-1.080813],[52.620816,-1.080695],[52.620812,-1.080576],[52.620811,-1.080459],[52.620809,-1.080343],[52.620808,-1.080226],[52.620808,-1.080111],[52.620808,-1.079996],[52.620805,-1.079881],[52.620804,-1.079767],[52.620804,-1.079654],[52.620804,-1.079544],[52.620801,-1.079433],[52.620797,-1.079322],[52.620793,-1.079213],[52.620792,-1.079107],[52.620792,-1.078996],[52.620792,-1.078888],[52.620795,-1.07878],[52.620799,-1.078668],[52.620806,-1.078555],[52.620811,-1.078442],[52.62082,-1.078333],[52.620835,-1.078222],[52.62085,-1.078113],[52.620862,-1.078007],[52.62088,-1.0779],[52.620902,-1.077789],[52.620922,-1.07768],[52.620941,-1.077571],[52.620969,-1.077461],[52.620999,-1.077355],[52.62103,-1.077245],[52.621057,-1.077133],[52.621084,-1.077023],[52.621105,-1.076911],[52.621124,-1.076797],[52.621137,-1.07668],[52.621142,-1.076562],[52.621143,-1.076445],[52.621143,-1.076328],[52.621134,-1.076213],[52.621123,-1.076098],[52.621109,-1.075986],[52.621097,-1.075873],[52.621088,-1.075756],[52.62108,-1.075639],[52.621084,-1.075523],[52.621092,-1.075405],[52.621102,-1.075293],[52.621117,-1.075177],[52.621135,-1.075063],[52.621154,-1.074949],[52.621176,-1.074837],[52.621202,-1.074727],[52.621232,-1.074619],[52.621268,-1.074517],[52.621306,-1.074416],[52.621345,-1.074316],[52.621386,-1.074216],[52.621425,-1.074115],[52.62146,-1.074014],[52.621494,-1.07391],[52.621529,-1.073806],[52.62156,-1.073704],[52.621593,-1.073609],[52.62163,-1.073521],[52.621666,-1.073432],[52.621703,-1.073343],[52.621744,-1.073256],[52.621783,-1.073171],[52.621824,-1.073087],[52.621866,-1.073002],[52.621908,-1.072915],[52.621953,-1.072829],[52.621993,-1.072745],[52.622033,-1.072666],[52.622073,-1.072584],[52.622111,-1.072506],[52.622149,-1.07243],[52.622185,-1.072358],[52.622222,-1.07229],[52.622254,-1.072229],[52.622279,-1.072179],[52.622298,-1.072145],[52.622312,-1.072122],[52.62232,-1.072105],[52.622328,-1.072091],[52.622333,-1.072078],[52.622336,-1.072069],[52.622361,-1.072021],[52.62238,-1.071987],[52.622401,-1.071949],[52.622426,-1.071904],[52.622456,-1.07185],[52.622493,-1.071793],[52.622537,-1.071736],[52.622583,-1.071674],[52.622631,-1.071607],[52.622681,-1.07154],[52.622734,-1.071473],[52.622784,-1.071407],[52.622836,-1.071343],[52.622887,-1.071279],[52.62294,-1.071212],[52.622993,-1.071145],[52.623043,-1.071083],[52.623096,-1.071017],[52.623148,-1.07095],[52.623202,-1.070883],[52.623256,-1.07082],[52.623309,-1.070759],[52.623366,-1.070701],[52.623423,-1.070647],[52.623483,-1.070595],[52.623547,-1.070547],[52.623609,-1.0705],[52.623673,-1.070454],[52.623738,-1.07041],[52.623803,-1.070366],[52.623868,-1.070323],[52.62393,-1.07028],[52.623997,-1.070235],[52.624059,-1.070191],[52.624121,-1.070144],[52.624182,-1.070097],[52.624243,-1.070053],[52.624304,-1.070008],[52.624364,-1.069966],[52.624428,-1.069925],[52.624487,-1.069881],[52.624547,-1.069832],[52.624608,-1.069779],[52.624667,-1.069723],[52.624724,-1.069663],[52.624781,-1.069603],[52.624838,-1.069543],[52.624896,-1.069478],[52.624948,-1.069415],[52.625006,-1.069347],[52.625064,-1.069284],[52.625121,-1.069222],[52.625178,-1.069159],[52.625235,-1.069093],[52.625289,-1.069025],[52.625343,-1.068954],[52.625396,-1.068881],[52.625453,-1.068808],[52.625507,-1.068737],[52.625563,-1.06867],[52.62562,-1.068599],[52.625678,-1.068528],[52.625735,-1.068459],[52.625789,-1.06839],[52.625845,-1.068322],[52.6259,-1.068258],[52.625958,-1.068198],[52.626017,-1.068136],[52.626074,-1.068076],[52.626131,-1.068014],[52.626192,-1.067951],[52.62625,-1.067891],[52.626307,-1.067829],[52.626364,-1.067771],[52.626424,-1.067714],[52.626483,-1.067658],[52.626539,-1.0676],[52.626597,-1.06754],[52.626656,-1.067481],[52.626715,-1.06742],[52.626775,-1.067361],[52.626836,-1.067302],[52.626894,-1.067243],[52.626954,-1.067182],[52.627013,-1.067119],[52.627071,-1.067056],[52.62713,-1.06699],[52.627188,-1.066922],[52.627242,-1.066854],[52.627299,-1.066783],[52.627353,-1.066709],[52.627407,-1.066632],[52.627457,-1.066556],[52.627509,-1.066478],[52.627563,-1.066399],[52.627616,-1.066323],[52.627671,-1.066252],[52.627729,-1.06618],[52.627787,-1.066109],[52.627847,-1.066039],[52.627908,-1.065974],[52.627969,-1.065911],[52.628027,-1.065849],[52.628088,-1.065787],[52.628152,-1.065729],[52.628214,-1.065677],[52.628283,-1.065626],[52.628351,-1.065578],[52.628421,-1.065534],[52.628493,-1.065491],[52.628565,-1.065451],[52.628641,-1.065412],[52.628717,-1.065376],[52.628791,-1.065345],[52.628863,-1.065316],[52.628938,-1.065288],[52.629012,-1.065259],[52.629087,-1.065226],[52.62916,-1.065193],[52.629233,-1.065162],[52.629306,-1.065133],[52.629381,-1.065101],[52.629456,-1.065069],[52.629531,-1.065037],[52.629606,-1.065006],[52.629679,-1.064972],[52.629751,-1.064939],[52.629824,-1.064901],[52.629894,-1.064858],[52.629962,-1.064814],[52.630031,-1.06477],[52.6301,-1.064728],[52.630172,-1.064687],[52.630241,-1.064647],[52.63031,-1.064605],[52.630381,-1.064559],[52.630454,-1.064507],[52.630529,-1.064454],[52.630603,-1.064394],[52.630681,-1.064337],[52.630764,-1.064289],[52.630845,-1.064242],[52.630925,-1.064197],[52.631006,-1.064154],[52.631088,-1.064113],[52.63117,-1.06407],[52.631244,-1.064024],[52.631322,-1.063979],[52.631399,-1.063937],[52.631478,-1.063899],[52.631558,-1.063858],[52.631636,-1.063817],[52.631714,-1.06377],[52.631795,-1.063717],[52.631875,-1.06366],[52.631956,-1.063601],[52.632035,-1.063539],[52.632113,-1.063473],[52.632187,-1.063409],[52.632267,-1.063348],[52.632345,-1.063288],[52.632419,-1.063234],[52.632482,-1.063184],[52.632537,-1.063142],[52.632585,-1.063108],[52.632627,-1.063073],[52.632669,-1.063039],[52.632714,-1.063006],[52.632751,-1.062978],[52.632774,-1.06296],[52.63279,-1.062949],[52.632802,-1.062939],[52.632814,-1.062926],[52.632828,-1.062908],[52.63284,-1.062875],[52.632846,-1.062825],[52.632838,-1.062764],[52.632818,-1.062686],[52.632783,-1.062598],[52.632733,-1.062509],[52.632683,-1.062415],[52.632636,-1.062318],[52.63259,-1.062216],[52.632545,-1.062112],[52.632496,-1.062001],[52.632449,-1.061884],[52.632404,-1.061761],[52.632358,-1.061629],[52.632313,-1.061487],[52.632272,-1.061331],[52.632254,-1.061177],[52.632243,-1.061017],[52.632252,-1.06087],[52.632261,-1.060721],[52.632269,-1.060573],[52.632271,-1.060412],[52.632271,-1.060243],[52.632277,-1.060071],[52.632281,-1.059903],[52.632282,-1.059738],[52.632285,-1.059575],[52.632289,-1.059407],[52.632293,-1.05924],[52.632297,-1.059076],[52.6323,-1.058909],[52.632304,-1.058741],[52.632305,-1.058579],[52.632302,-1.058402],[52.632298,-1.058225],[52.632295,-1.058043],[52.632291,-1.05786],[52.632287,-1.057677],[52.632274,-1.057503],[52.632265,-1.057324],[52.63226,-1.057149],[52.632245,-1.056971],[52.63224,-1.056818],[52.632243,-1.056657],[52.632244,-1.056482],[52.632233,-1.056309],[52.632214,-1.056141],[52.632204,-1.055981],[52.632193,-1.055816],[52.632179,-1.05565],[52.632167,-1.05549],[52.632155,-1.055324],[52.632147,-1.055168],[52.632136,-1.055021],[52.632125,-1.054878],[52.632113,-1.054742],[52.632102,-1.054608],[52.63209,-1.054475],[52.632079,-1.054341],[52.632064,-1.054216],[52.632049,-1.054099],[52.632034,-1.053984],[52.632016,-1.053872],[52.631997,-1.053766],[52.631978,-1.053658],[52.631956,-1.05355],[52.631936,-1.053441],[52.631914,-1.053331],[52.631891,-1.053228],[52.631868,-1.053119],[52.631845,-1.053012],[52.631819,-1.052907],[52.631792,-1.052804],[52.631766,-1.052698],[52.631739,-1.052593],[52.631715,-1.052489],[52.631689,-1.052386],[52.631663,-1.052284],[52.631636,-1.052184],[52.631616,-1.052087],[52.631593,-1.051985],[52.63157,-1.051886],[52.631548,-1.051787],[52.631528,-1.051685],[52.631508,-1.051582],[52.631489,-1.05148],[52.631473,-1.051378],[52.631458,-1.051278],[52.631443,-1.051175],[52.631428,-1.051071],[52.631412,-1.050971],[52.631397,-1.050868],[52.631385,-1.050766],[52.631376,-1.050663],[52.631368,-1.05056],[52.631361,-1.050457],[52.631353,-1.050353],[52.631349,-1.05025],[52.631342,-1.050146],[52.63134,-1.050041],[52.631337,-1.049936],[52.631336,-1.049828],[52.631333,-1.049721],[52.631332,-1.049615],[52.631329,-1.049508],[52.631329,-1.049404],[52.631329,-1.0493],[52.631332,-1.049198],[52.631338,-1.049095],[52.63134,-1.048992],[52.631346,-1.048888],[52.631351,-1.048787],[52.631354,-1.048689],[52.631358,-1.048594],[52.631362,-1.048506],[52.631369,-1.048419],[52.631376,-1.048338],[52.631381,-1.048262],[52.631388,-1.048194],[52.631393,-1.048133],[52.631396,-1.048084],[52.631403,-1.048041],[52.631405,-1.047998],[52.631408,-1.047951],[52.631409,-1.047897],[52.631412,-1.047838],[52.631415,-1.047772],[52.631422,-1.047705],[52.631448,-1.047649],[52.631493,-1.047612],[52.631545,-1.047592],[52.631605,-1.047573],[52.631666,-1.047551],[52.631732,-1.047529],[52.631801,-1.047507],[52.631868,-1.047483],[52.631943,-1.047456],[52.632017,-1.047431],[52.632092,-1.047404],[52.632169,-1.047375],[52.632249,-1.047346],[52.632329,-1.047318],[52.632406,-1.047287],[52.632485,-1.047256],[52.632565,-1.047228],[52.632648,-1.0472],[52.632732,-1.04717],[52.632813,-1.04714],[52.632893,-1.047106],[52.632977,-1.047073],[52.633058,-1.047042],[52.63314,-1.047016],[52.633216,-1.046995],[52.633288,-1.046972],[52.633349,-1.046955],[52.633403,-1.046943],[52.633457,-1.046931],[52.633507,-1.046921],[52.633559,-1.046912],[52.633616,-1.046905],[52.633672,-1.046898],[52.633733,-1.046888],[52.633797,-1.046877],[52.633867,-1.04687],[52.63394,-1.046861],[52.634013,-1.046853],[52.634082,-1.046849],[52.634151,-1.046847],[52.634226,-1.046841],[52.634302,-1.046832],[52.634375,-1.046821],[52.634454,-1.046811],[52.634534,-1.046801],[52.634611,-1.046795],[52.63469,-1.046791],[52.634764,-1.046785],[52.634837,-1.046781],[52.634904,-1.046777],[52.634974,-1.04677],[52.635062,-1.04674],[52.635177,-1.046708],[52.635293,-1.046678],[52.6354,-1.046651],[52.635508,-1.046628],[52.635614,-1.046609],[52.635719,-1.046595],[52.635819,-1.046577],[52.635916,-1.04656],[52.636016,-1.046539],[52.636112,-1.046511],[52.636217,-1.04648],[52.636345,-1.046415],[52.636478,-1.046365],[52.636589,-1.046319],[52.636703,-1.046299],[52.636818,-1.046285],[52.636919,-1.046258],[52.637011,-1.046237],[52.637103,-1.046228],[52.637193,-1.046215],[52.637289,-1.046205],[52.63739,-1.046197],[52.637493,-1.046181],[52.637598,-1.04617],[52.637699,-1.046162],[52.637792,-1.046143],[52.637874,-1.046118],[52.637961,-1.046095],[52.638053,-1.046073],[52.638144,-1.046053],[52.63823,-1.046041],[52.63831,-1.046028],[52.638387,-1.046015],[52.63846,-1.045996],[52.638532,-1.04598],[52.638603,-1.045962],[52.638672,-1.045943],[52.638737,-1.045927],[52.638805,-1.045913],[52.638874,-1.045898],[52.638942,-1.045878],[52.639008,-1.04586],[52.639073,-1.045846],[52.639135,-1.04583],[52.639196,-1.045815],[52.63926,-1.045792],[52.639321,-1.045767],[52.639381,-1.045739],[52.639443,-1.045713],[52.639504,-1.04569],[52.639569,-1.045667],[52.639632,-1.045648],[52.639697,-1.045631],[52.639763,-1.045618],[52.639832,-1.045606],[52.639894,-1.045597],[52.639958,-1.045587],[52.640022,-1.045577],[52.640084,-1.045566],[52.640148,-1.045553],[52.64021,-1.045544],[52.640272,-1.045535],[52.640332,-1.045523],[52.640397,-1.045511],[52.640456,-1.045498],[52.640519,-1.045483],[52.640581,-1.04547],[52.640641,-1.045458],[52.640702,-1.045445],[52.640764,-1.045431],[52.640825,-1.045416],[52.640886,-1.045398],[52.640947,-1.045379],[52.641008,-1.04536],[52.641071,-1.045342],[52.641133,-1.045323],[52.641195,-1.045304],[52.641259,-1.045287],[52.641318,-1.045268],[52.641378,-1.045247],[52.641442,-1.045226],[52.641504,-1.045205],[52.641564,-1.045185],[52.641626,-1.045163],[52.641687,-1.04514],[52.641748,-1.04512],[52.641806,-1.0451],[52.641863,-1.045078],[52.641921,-1.045058],[52.641978,-1.045036],[52.642035,-1.045016],[52.642092,-1.044995],[52.642146,-1.044971],[52.642202,-1.044948],[52.642257,-1.044927],[52.642313,-1.044907],[52.642367,-1.044884],[52.642424,-1.044859],[52.642478,-1.044837],[52.642535,-1.044815],[52.642592,-1.044793],[52.642646,-1.044772],[52.642702,-1.044754],[52.642759,-1.044736],[52.642814,-1.044717],[52.642869,-1.044699],[52.642927,-1.044685],[52.642985,-1.044671],[52.643042,-1.044661],[52.643099,-1.044653],[52.643159,-1.04465],[52.643217,-1.044649],[52.643277,-1.044648],[52.643333,-1.044651],[52.643389,-1.044653],[52.643443,-1.044662],[52.643491,-1.044706],[52.643525,-1.044775],[52.643538,-1.044861],[52.643536,-1.044962],[52.643533,-1.045069],[52.643535,-1.045181],[52.643536,-1.045297],[52.643536,-1.045417],[52.643536,-1.045537],[52.643533,-1.045655],[52.643532,-1.045775],[52.643532,-1.045894],[52.643535,-1.046005],[52.643542,-1.046118],[52.643549,-1.046235],[52.64356,-1.046354],[52.643571,-1.046475],[52.643583,-1.046597],[52.643594,-1.046715],[52.643605,-1.046834],[52.643617,-1.046947],[52.643637,-1.047049],[52.643674,-1.047135],[52.643725,-1.047202],[52.643782,-1.047233],[52.643845,-1.047232],[52.643913,-1.047218],[52.643981,-1.047203],[52.644052,-1.047187],[52.644123,-1.047173],[52.644197,-1.04716],[52.644271,-1.047148],[52.644341,-1.047133],[52.644412,-1.047117],[52.644487,-1.047099],[52.644564,-1.047074],[52.644645,-1.047045],[52.644733,-1.047007],[52.644821,-1.04697],[52.644908,-1.046943],[52.645,-1.046933],[52.645094,-1.046937],[52.645183,-1.046949],[52.645267,-1.046963],[52.645344,-1.046982],[52.645415,-1.046998],[52.645481,-1.046987],[52.645538,-1.046933],[52.64557,-1.046841],[52.645585,-1.046728],[52.645594,-1.046607],[52.645601,-1.046483],[52.645612,-1.046359],[52.645618,-1.046237],[52.645624,-1.046115],[52.645632,-1.045993],[52.645643,-1.045874],[52.645648,-1.045756],[52.645658,-1.045642],[52.645675,-1.045529],[52.645697,-1.045421],[52.64572,-1.045316],[52.645749,-1.045214],[52.645782,-1.04512],[52.645818,-1.045034],[52.645857,-1.044944],[52.645893,-1.044853],[52.645924,-1.044757],[52.645952,-1.044657],[52.645976,-1.044553],[52.645995,-1.044449],[52.646014,-1.044342],[52.64603,-1.044239],[52.646043,-1.044128],[52.646052,-1.044018],[52.646059,-1.043909],[52.646064,-1.043804],[52.646065,-1.043693],[52.646065,-1.043587],[52.646062,-1.043478],[52.646055,-1.043371],[52.646047,-1.043264],[52.646043,-1.043156],[52.646036,-1.043048],[52.646028,-1.042943],[52.646021,-1.04284],[52.646016,-1.042736],[52.646009,-1.042635],[52.646002,-1.042534],[52.645994,-1.042435],[52.645989,-1.04234],[52.64598,-1.042245],[52.645968,-1.042152],[52.645957,-1.042058],[52.645942,-1.041966],[52.645927,-1.041878],[52.645912,-1.041791],[52.645894,-1.041705],[52.645872,-1.041619],[52.645852,-1.041537],[52.645836,-1.041455],[52.64582,-1.041374],[52.645805,-1.04129],[52.64579,-1.041208],[52.64578,-1.041126],[52.645776,-1.041045],[52.645781,-1.040967],[52.645794,-1.04089],[52.645809,-1.040817],[52.645831,-1.040749],[52.64586,-1.04069],[52.64589,-1.04064],[52.645926,-1.040598],[52.645968,-1.04056],[52.646012,-1.040528],[52.646061,-1.040505],[52.646117,-1.04049],[52.646174,-1.040475],[52.646228,-1.040459],[52.646295,-1.040437],[52.646366,-1.040412],[52.646431,-1.040387],[52.646502,-1.040362],[52.646575,-1.040335],[52.646647,-1.040305],[52.646723,-1.040275],[52.646801,-1.040248],[52.646882,-1.040222],[52.646965,-1.040199],[52.647047,-1.040173],[52.647132,-1.040144],[52.647217,-1.040112],[52.6473,-1.04008],[52.647388,-1.040046],[52.647475,-1.040013],[52.647562,-1.039976],[52.647643,-1.039929],[52.647719,-1.039872],[52.647789,-1.039815],[52.647857,-1.039755],[52.64792,-1.039693],[52.647978,-1.039628],[52.648032,-1.039558],[52.648083,-1.039485],[52.648132,-1.03941],[52.648182,-1.039335],[52.648232,-1.039263],[52.648284,-1.039194],[52.648338,-1.039128],[52.648394,-1.03907],[52.648457,-1.039022],[52.648516,-1.038974],[52.648576,-1.038927],[52.648636,-1.038886],[52.648695,-1.038853],[52.648756,-1.038816],[52.648817,-1.038781],[52.648878,-1.038748],[52.648935,-1.038714],[52.648999,-1.038681],[52.64906,-1.038645],[52.649122,-1.038608],[52.649183,-1.038572],[52.649247,-1.038535],[52.649309,-1.038498],[52.64937,-1.03846],[52.649434,-1.038423],[52.649498,-1.038388],[52.64956,-1.038352],[52.649624,-1.038318],[52.649689,-1.038283],[52.649751,-1.038248],[52.649814,-1.038213],[52.64988,-1.038179],[52.649945,-1.038146],[52.65001,-1.038113],[52.650074,-1.038078],[52.650139,-1.038043],[52.650198,-1.038012],[52.650267,-1.037974],[52.650333,-1.037938],[52.650397,-1.037905],[52.650466,-1.03787],[52.650532,-1.037834],[52.650597,-1.037798],[52.650664,-1.037762],[52.65073,-1.037721],[52.650799,-1.037678],[52.650864,-1.037629],[52.650929,-1.037573],[52.650991,-1.037509],[52.651049,-1.037437],[52.651103,-1.037357],[52.651153,-1.037272],[52.651203,-1.037179],[52.65125,-1.037083],[52.651298,-1.036987],[52.651348,-1.036888],[52.651398,-1.036788],[52.65145,-1.03669],[52.651501,-1.036594],[52.651553,-1.036501],[52.651607,-1.036409],[52.65166,-1.036319],[52.651718,-1.036232],[52.651776,-1.036146],[52.651834,-1.036059],[52.651897,-1.035975],[52.651958,-1.035896],[52.652023,-1.035811],[52.652088,-1.035727],[52.652153,-1.035643],[52.652218,-1.035558],[52.652283,-1.035475],[52.652348,-1.03539],[52.652412,-1.035304],[52.652483,-1.035213],[52.652553,-1.035124],[52.652622,-1.035039],[52.652693,-1.034961],[52.652765,-1.034893],[52.65284,-1.034831],[52.652917,-1.034773],[52.652994,-1.034716],[52.653069,-1.034662],[52.653146,-1.034606],[52.653222,-1.034553],[52.653299,-1.034499],[52.653372,-1.034445],[52.653445,-1.034389],[52.65352,-1.034335],[52.653595,-1.034279],[52.653672,-1.034222],[52.653749,-1.034165],[52.653823,-1.034107],[52.653895,-1.034047],[52.653972,-1.033983],[52.65405,-1.033918],[52.654123,-1.033854],[52.654196,-1.033788],[52.654268,-1.033725],[52.654344,-1.03366],[52.654414,-1.033594],[52.654489,-1.03353],[52.654562,-1.033464],[52.654635,-1.033397],[52.65471,-1.033328],[52.654783,-1.033258],[52.654858,-1.033188],[52.654931,-1.033112],[52.655004,-1.033036],[52.655076,-1.032962],[52.655149,-1.032884],[52.655218,-1.032806],[52.655294,-1.032725],[52.655364,-1.032645],[52.655439,-1.032563],[52.655511,-1.03248],[52.655584,-1.032395],[52.655663,-1.032308],[52.655743,-1.032221],[52.655826,-1.032138],[52.65591,-1.032047],[52.655991,-1.031951],[52.656071,-1.03187],[52.656156,-1.03179],[52.656242,-1.031702],[52.656322,-1.031614],[52.656403,-1.031524],[52.656484,-1.031445],[52.656565,-1.031355],[52.656641,-1.031261],[52.656719,-1.03117],[52.65679,-1.031085],[52.656865,-1.031005],[52.656947,-1.030925],[52.657025,-1.030844],[52.657104,-1.030761],[52.657188,-1.030679],[52.657262,-1.030602],[52.657341,-1.030526],[52.657414,-1.030451],[52.657487,-1.030372],[52.657563,-1.030296],[52.657636,-1.030222],[52.657712,-1.030148],[52.657789,-1.030075],[52.657867,-1.029999],[52.657943,-1.029921],[52.65802,-1.02984],[52.658096,-1.029762],[52.658175,-1.029684],[52.658255,-1.029605],[52.658332,-1.029524],[52.658409,-1.029439],[52.658482,-1.029348],[52.658549,-1.029242],[52.658609,-1.029124],[52.658658,-1.029],[52.6587,-1.028877],[52.658736,-1.028749],[52.658776,-1.028632],[52.658821,-1.028525],[52.658873,-1.028424],[52.658929,-1.028335],[52.658984,-1.028253],[52.659037,-1.02817],[52.65909,-1.028089],[52.659143,-1.028009],[52.659197,-1.027931],[52.659248,-1.027855],[52.659297,-1.027781],[52.659344,-1.027708],[52.659387,-1.027635],[52.659426,-1.027561],[52.659467,-1.027483],[52.659506,-1.027401],[52.659545,-1.027324],[52.659585,-1.02724],[52.659627,-1.027159],[52.659666,-1.027076],[52.65971,-1.026999],[52.659753,-1.026921],[52.659795,-1.026842],[52.659837,-1.026764],[52.659882,-1.026689],[52.65993,-1.026614],[52.659977,-1.02654],[52.660026,-1.026468],[52.660072,-1.026399],[52.660118,-1.026327],[52.660161,-1.026253],[52.660206,-1.026183],[52.660249,-1.026115],[52.660291,-1.026047],[52.660333,-1.025978],[52.660374,-1.025908],[52.660413,-1.025837],[52.660452,-1.025764],[52.66049,-1.025692],[52.66053,-1.025624],[52.660575,-1.025559],[52.660623,-1.025496],[52.660673,-1.025437],[52.660725,-1.025384],[52.660779,-1.025333],[52.660833,-1.025284],[52.660886,-1.025237],[52.66094,-1.025187],[52.660994,-1.025137],[52.661047,-1.025089],[52.6611,-1.025042],[52.661154,-1.024993],[52.661204,-1.024943],[52.661256,-1.024893],[52.66131,-1.024845],[52.66136,-1.0248],[52.661413,-1.024754],[52.661468,-1.024709],[52.661523,-1.024663],[52.661579,-1.024618],[52.661637,-1.024571],[52.661691,-1.024522],[52.661748,-1.024472],[52.661803,-1.024425],[52.661863,-1.024375],[52.661922,-1.024326],[52.661982,-1.024274],[52.662038,-1.024224],[52.662097,-1.024174],[52.662163,-1.024118],[52.662225,-1.024062],[52.662283,-1.02401],[52.662343,-1.023957],[52.662404,-1.023903],[52.662463,-1.023845],[52.662526,-1.023785],[52.662588,-1.023725],[52.662652,-1.023663],[52.662717,-1.023599],[52.662783,-1.023538],[52.662853,-1.02348],[52.662921,-1.023427],[52.662996,-1.023372],[52.663071,-1.023327],[52.663149,-1.023287],[52.663228,-1.023253],[52.663308,-1.023223],[52.663388,-1.023197],[52.663469,-1.023171],[52.663549,-1.023144],[52.663626,-1.023118],[52.663708,-1.02309],[52.663786,-1.02306],[52.663865,-1.023033],[52.663945,-1.023007],[52.664028,-1.022984],[52.664106,-1.022959],[52.664188,-1.022934],[52.66427,-1.022908],[52.664346,-1.022885],[52.664423,-1.022861],[52.664499,-1.022837],[52.664575,-1.022812],[52.664649,-1.022781],[52.664724,-1.022746],[52.6648,-1.022709],[52.664877,-1.022668],[52.664956,-1.022621],[52.665029,-1.022569],[52.665106,-1.022513],[52.665179,-1.022455],[52.665255,-1.022398],[52.665331,-1.02234],[52.665407,-1.022281],[52.665483,-1.022223],[52.665557,-1.022166],[52.665635,-1.022105],[52.665715,-1.022048],[52.665795,-1.021989],[52.665875,-1.021927],[52.665956,-1.021866],[52.666042,-1.0218],[52.666129,-1.021735],[52.666217,-1.02167],[52.666294,-1.021604],[52.66638,-1.021535],[52.666463,-1.021475],[52.666549,-1.02141],[52.666636,-1.021347],[52.666735,-1.02129],[52.666824,-1.021215],[52.666907,-1.021147],[52.667001,-1.021078],[52.667096,-1.021],[52.667192,-1.020931],[52.667287,-1.020863],[52.667383,-1.020804],[52.667486,-1.020747],[52.667596,-1.02068],[52.667701,-1.020595],[52.667799,-1.020491],[52.667897,-1.020375],[52.667987,-1.020262],[52.668066,-1.020162],[52.668144,-1.02007],[52.668222,-1.019987],[52.668299,-1.019909],[52.668381,-1.019846],[52.668465,-1.019817],[52.668543,-1.019827],[52.668627,-1.019866],[52.668701,-1.019928],[52.668779,-1.020005],[52.668852,-1.020085],[52.668923,-1.020161],[52.668994,-1.020235],[52.66906,-1.020306],[52.669125,-1.020377],[52.669193,-1.020444],[52.669259,-1.0205],[52.669326,-1.020535],[52.669392,-1.020551],[52.66946,-1.020551],[52.669522,-1.020544],[52.669581,-1.020528],[52.669635,-1.020495],[52.669679,-1.020437],[52.669707,-1.020352],[52.669721,-1.020254],[52.669726,-1.020153],[52.66973,-1.02005],[52.669734,-1.019946],[52.669738,-1.019844],[52.669744,-1.019743],[52.669749,-1.019636],[52.669753,-1.019531],[52.66976,-1.019423],[52.669768,-1.019317],[52.669775,-1.019211],[52.669786,-1.019105],[52.669797,-1.019001],[52.669806,-1.018897],[52.669813,-1.018797],[52.669821,-1.018691],[52.669826,-1.018584],[52.669826,-1.018478],[52.669824,-1.018368],[52.669817,-1.018258],[52.669815,-1.018149],[52.669812,-1.018043],[52.669811,-1.017934],[52.669814,-1.017825],[52.669821,-1.017714],[52.669829,-1.017602],[52.669839,-1.017489],[52.669851,-1.017374],[52.669859,-1.017261],[52.669867,-1.017151],[52.669877,-1.017036],[52.669892,-1.016922],[52.669901,-1.016806],[52.669912,-1.016691],[52.66992,-1.016578],[52.669931,-1.01647],[52.669942,-1.016364],[52.669954,-1.016259],[52.669968,-1.016152],[52.669983,-1.016047],[52.669996,-1.01594],[52.67001,-1.015828],[52.670022,-1.015718],[52.670034,-1.015607],[52.670045,-1.015497],[52.670054,-1.015386],[52.670061,-1.015275],[52.670069,-1.015161],[52.670068,-1.015046],[52.670064,-1.01493],[52.670054,-1.014815],[52.670043,-1.014702],[52.670034,-1.01459],[52.670024,-1.01448],[52.670012,-1.014369],[52.670001,-1.01426],[52.669992,-1.014151],[52.669985,-1.01404],[52.669977,-1.013926],[52.669975,-1.013815],[52.669972,-1.013708],[52.669971,-1.013599],[52.669969,-1.013489],[52.669965,-1.013377],[52.669961,-1.013264],[52.66996,-1.013148],[52.669957,-1.013033],[52.669953,-1.012921],[52.669946,-1.012805],[52.669945,-1.01269],[52.669942,-1.012575],[52.669935,-1.012462],[52.66993,-1.012346],[52.669927,-1.01223],[52.66992,-1.012113],[52.669912,-1.011995],[52.669905,-1.011876],[52.669897,-1.011758],[52.669886,-1.011639],[52.669878,-1.01152],[52.66987,-1.011403],[52.66986,-1.011287],[52.669848,-1.01117],[52.669837,-1.011053],[52.669825,-1.010937],[52.669814,-1.010821],[52.669802,-1.010706],[52.669791,-1.010591],[52.66978,-1.010479],[52.669771,-1.010369],[52.669763,-1.010261],[52.669756,-1.010152],[52.669757,-1.010046],[52.669767,-1.009942],[52.669787,-1.009843],[52.669816,-1.009749],[52.669846,-1.009658],[52.669874,-1.009565],[52.669903,-1.009475],[52.669934,-1.009386],[52.669965,-1.009298],[52.669995,-1.009214],[52.670026,-1.009131],[52.670056,-1.009048],[52.670087,-1.008965],[52.67012,-1.008881],[52.670151,-1.008795],[52.670179,-1.008708],[52.670209,-1.008617],[52.670239,-1.008528],[52.670267,-1.00844],[52.670294,-1.008351],[52.67032,-1.008264],[52.670347,-1.008174],[52.670374,-1.008084],[52.6704,-1.007997],[52.670424,-1.007906],[52.670447,-1.007817],[52.67047,-1.007731],[52.670496,-1.007647],[52.670522,-1.007562],[52.670549,-1.007479],[52.670578,-1.007397],[52.670606,-1.007312],[52.670636,-1.007227],[52.670666,-1.007146],[52.670693,-1.007067],[52.670723,-1.006981],[52.670757,-1.006899],[52.670785,-1.00682],[52.670815,-1.00674],[52.670846,-1.006662],[52.670876,-1.006583],[52.670907,-1.006503],[52.670934,-1.006423],[52.670964,-1.006342],[52.670995,-1.006259],[52.671022,-1.006175],[52.671054,-1.006093],[52.671086,-1.006008],[52.671116,-1.005923],[52.671147,-1.005836],[52.671181,-1.005751],[52.671209,-1.005665],[52.671239,-1.005578],[52.671269,-1.005493],[52.6713,-1.005407],[52.671327,-1.005319],[52.671354,-1.005228],[52.67138,-1.005138],[52.671407,-1.005046],[52.671434,-1.004955],[52.671464,-1.004865],[52.671491,-1.004775],[52.671518,-1.004683],[52.671544,-1.004594],[52.671571,-1.004504],[52.671598,-1.004414],[52.671625,-1.004324],[52.671651,-1.004235],[52.671678,-1.004145],[52.671705,-1.004059],[52.671732,-1.003971],[52.671758,-1.003885],[52.671782,-1.003797],[52.671808,-1.003707],[52.671834,-1.00362],[52.671861,-1.003532],[52.671885,-1.003441],[52.671908,-1.003349],[52.671931,-1.003255],[52.671951,-1.003161],[52.671973,-1.003066],[52.671993,-1.002971],[52.672009,-1.002877],[52.672027,-1.002784],[52.672043,-1.002691],[52.672061,-1.002596],[52.672078,-1.0025],[52.672096,-1.002405],[52.672115,-1.002312],[52.672134,-1.002219],[52.67215,-1.002127],[52.672168,-1.002034],[52.672187,-1.001943],[52.672212,-1.001854],[52.672245,-1.00177],[52.672279,-1.001691],[52.672319,-1.00162],[52.672366,-1.001558],[52.672413,-1.001503],[52.672463,-1.001451],[52.672512,-1.001402],[52.672562,-1.001357],[52.672611,-1.001312],[52.672661,-1.001267],[52.672711,-1.001222],[52.672759,-1.001178],[52.67281,-1.001132],[52.672857,-1.001087],[52.672908,-1.001041],[52.672955,-1.000996],[52.673004,-1.000953],[52.673054,-1.000909],[52.6731,-1.000864],[52.673149,-1.000821],[52.673199,-1.000778],[52.673249,-1.000736],[52.673298,-1.000695],[52.673344,-1.000653],[52.673393,-1.00061],[52.67344,-1.000568],[52.673488,-1.000527],[52.673535,-1.000484],[52.673581,-1.000443],[52.673627,-1.000402],[52.673672,-1.000361],[52.673721,-1.00032],[52.673768,-1.000279],[52.673814,-1.000239],[52.67386,-1.0002],[52.673906,-1.000161],[52.67395,-1.000123],[52.673997,-1.000084],[52.674042,-1.000044],[52.674085,-0.999999],[52.674125,-0.999952],[52.674166,-0.999903],[52.674205,-0.999849],[52.67424,-0.999793],[52.674274,-0.999733],[52.674306,-0.999667],[52.67433,-0.999596],[52.674353,-0.999522],[52.674367,-0.999445],[52.674376,-0.999366],[52.674377,-0.999285],[52.674374,-0.999206],[52.674365,-0.999127],[52.674353,-0.999048],[52.674339,-0.99897],[52.674321,-0.998893],[52.674305,-0.998815],[52.674289,-0.998735],[52.674283,-0.998656],[52.674288,-0.998578],[52.674304,-0.998503],[52.674335,-0.998437],[52.674375,-0.998387],[52.674423,-0.998353],[52.674473,-0.998327],[52.674522,-0.998304],[52.674575,-0.99828],[52.674625,-0.998257],[52.674675,-0.998231],[52.674726,-0.998208],[52.674777,-0.998184],[52.674827,-0.998159],[52.674877,-0.998132],[52.67493,-0.998106],[52.67498,-0.998081],[52.675032,-0.998056],[52.675086,-0.99803],[52.675136,-0.998003],[52.675188,-0.997978],[52.675242,-0.99795],[52.675293,-0.99792],[52.675343,-0.997889],[52.675392,-0.997852],[52.675436,-0.997804],[52.675472,-0.997739],[52.675498,-0.997659],[52.675512,-0.997569],[52.675511,-0.997475],[52.675499,-0.997382],[52.67548,-0.997286],[52.675455,-0.997192],[52.675429,-0.9971],[52.675399,-0.99701],[52.675366,-0.996922],[52.675332,-0.996838],[52.675297,-0.996754],[52.675262,-0.996672],[52.675231,-0.996591],[52.675199,-0.996513],[52.67517,-0.996432],[52.675143,-0.996346],[52.675128,-0.996255],[52.675128,-0.996162],[52.675152,-0.996071],[52.675195,-0.995996],[52.675243,-0.995938],[52.675299,-0.995891],[52.675356,-0.995847],[52.675413,-0.995801],[52.675474,-0.995755],[52.675532,-0.99571],[52.675588,-0.995664],[52.675646,-0.995616],[52.675703,-0.995568],[52.675761,-0.995519],[52.675818,-0.995472],[52.675875,-0.995428],[52.675932,-0.995382],[52.67599,-0.995334],[52.676049,-0.995289],[52.676108,-0.995244],[52.676168,-0.9952],[52.676226,-0.995155],[52.676286,-0.99511],[52.67635,-0.995067],[52.676412,-0.995022],[52.676476,-0.994975],[52.676537,-0.994925],[52.676601,-0.994867],[52.676658,-0.994795],[52.676711,-0.994717],[52.676771,-0.994638],[52.676832,-0.994565],[52.676898,-0.994498],[52.676967,-0.994437],[52.677042,-0.99438],[52.67712,-0.994325],[52.677201,-0.994271],[52.677283,-0.994219],[52.677373,-0.994166],[52.677464,-0.994116],[52.677559,-0.994059],[52.677656,-0.993991],[52.677752,-0.993922],[52.677849,-0.993858],[52.677946,-0.993792],[52.678041,-0.993726],[52.678135,-0.993661],[52.678224,-0.993589],[52.678316,-0.993504],[52.67839,-0.993403],[52.678462,-0.993301],[52.678537,-0.993205],[52.67861,-0.993106],[52.678686,-0.993018],[52.678762,-0.992936],[52.678835,-0.992854],[52.678903,-0.992778],[52.678976,-0.992701],[52.679052,-0.992627],[52.679128,-0.99256],[52.679204,-0.992502],[52.67928,-0.99245],[52.67936,-0.992401],[52.679438,-0.992354],[52.679519,-0.992305],[52.679596,-0.992256],[52.679676,-0.992204],[52.679757,-0.992147],[52.679834,-0.992084],[52.67991,-0.992019],[52.679986,-0.991949],[52.680062,-0.991873],[52.680139,-0.991794],[52.680213,-0.991711],[52.680285,-0.991626],[52.68036,-0.991542],[52.680436,-0.991449],[52.680513,-0.991351],[52.680591,-0.991264],[52.680668,-0.991174],[52.680737,-0.991085],[52.68081,-0.990995],[52.680886,-0.990909],[52.680955,-0.990818],[52.681033,-0.990731],[52.681116,-0.990641],[52.681194,-0.99056],[52.681274,-0.990485],[52.681354,-0.990413],[52.681432,-0.990339],[52.681517,-0.990267],[52.681602,-0.990198],[52.681683,-0.990137],[52.681766,-0.990071],[52.681845,-0.990004],[52.681926,-0.989935],[52.68201,-0.989868],[52.682094,-0.989796],[52.682178,-0.989718],[52.682267,-0.989643],[52.682359,-0.989565],[52.682448,-0.989489],[52.682533,-0.989414],[52.68262,-0.989333],[52.682705,-0.989243],[52.682788,-0.989148],[52.682875,-0.989061],[52.682963,-0.988983],[52.683049,-0.988907],[52.683144,-0.988836],[52.683237,-0.988756],[52.683334,-0.988678],[52.68343,-0.9886],[52.683517,-0.988512],[52.683603,-0.988428],[52.683693,-0.988346],[52.683789,-0.988277],[52.683875,-0.988205],[52.683954,-0.988124],[52.684024,-0.98805],[52.684087,-0.987983],[52.684148,-0.987926],[52.6842,-0.987883],[52.684244,-0.987849],[52.684274,-0.987824],[52.684289,-0.987808],[52.684297,-0.987799],[52.684305,-0.98779],[52.684316,-0.987775],[52.684316,-0.987745],[52.684309,-0.987705],[52.684298,-0.98766],[52.684281,-0.987602],[52.684262,-0.987535],[52.68424,-0.98746],[52.684211,-0.987379],[52.684184,-0.987293],[52.684154,-0.987203],[52.684127,-0.987113],[52.6841,-0.987018],[52.68407,-0.986924],[52.684037,-0.986829],[52.684005,-0.986734],[52.683975,-0.986636],[52.683948,-0.986535],[52.683929,-0.986424],[52.683917,-0.986305],[52.683914,-0.98618],[52.68392,-0.986052],[52.683936,-0.985924],[52.683958,-0.985801],[52.683984,-0.985683],[52.68401,-0.985567],[52.684038,-0.985451],[52.684067,-0.985339],[52.684097,-0.985227],[52.684125,-0.985113],[52.684155,-0.984997],[52.684185,-0.98488],[52.684218,-0.984762],[52.684253,-0.984641],[52.684288,-0.984524],[52.684322,-0.984408],[52.684359,-0.984295],[52.684392,-0.984186],[52.684428,-0.984083],[52.68446,-0.983984],[52.68449,-0.983887],[52.68452,-0.983792],[52.684548,-0.983697],[52.684578,-0.983606],[52.684608,-0.983514],[52.684639,-0.983423],[52.684667,-0.983331],[52.684693,-0.983241],[52.68472,-0.983151],[52.684747,-0.983064],[52.684776,-0.982982],[52.684807,-0.982901],[52.684838,-0.982821],[52.684868,-0.982745],[52.684899,-0.982669],[52.684929,-0.982595],[52.684957,-0.982521],[52.684983,-0.982447],[52.685004,-0.982371],[52.685026,-0.982296],[52.68504,-0.982218],[52.685052,-0.982141],[52.685063,-0.982065],[52.685072,-0.981992],[52.68508,-0.981919],[52.685084,-0.98185],[52.685088,-0.981783],[52.685092,-0.981716],[52.685099,-0.981652],[52.685115,-0.981589],[52.685131,-0.981528],[52.685146,-0.981466],[52.685164,-0.981404],[52.685183,-0.981344],[52.685205,-0.981281],[52.685226,-0.981217],[52.685245,-0.981153],[52.685264,-0.981088],[52.685286,-0.981023],[52.685308,-0.980961],[52.685331,-0.980897],[52.685357,-0.980834],[52.685384,-0.980773],[52.685413,-0.980713],[52.68544,-0.980653],[52.68547,-0.980592],[52.685498,-0.980533],[52.685525,-0.980474],[52.685554,-0.980415],[52.685578,-0.980352],[52.685608,-0.980287],[52.685638,-0.980226],[52.685665,-0.980164],[52.685693,-0.9801],[52.685719,-0.980035],[52.685746,-0.97997],[52.685773,-0.979906],[52.685795,-0.979843],[52.685819,-0.979772],[52.685843,-0.979701],[52.685866,-0.979631],[52.685883,-0.979561],[52.685898,-0.979492],[52.685913,-0.979424],[52.685929,-0.979358],[52.685941,-0.97929],[52.685952,-0.979221],[52.685967,-0.979152],[52.685982,-0.979081],[52.685997,-0.979007],[52.68601,-0.978929],[52.686021,-0.97885],[52.686033,-0.978768],[52.686041,-0.978688],[52.686046,-0.978604],[52.686047,-0.978516],[52.686047,-0.978426],[52.686041,-0.978332],[52.686033,-0.978234],[52.686026,-0.978134],[52.686018,-0.978033],[52.686007,-0.977932],[52.685999,-0.977827],[52.685994,-0.977722],[52.685993,-0.977618],[52.686002,-0.977514],[52.686016,-0.977409],[52.686037,-0.977308],[52.686066,-0.977211],[52.686103,-0.977116],[52.686144,-0.977031],[52.686192,-0.976953],[52.686241,-0.976883],[52.686288,-0.976822],[52.686334,-0.976767],[52.686386,-0.976716],[52.686439,-0.976669],[52.686489,-0.976621],[52.686542,-0.976571],[52.686592,-0.976521],[52.686642,-0.97647],[52.686694,-0.976418],[52.686748,-0.976365],[52.686801,-0.976319],[52.686858,-0.976275],[52.686912,-0.976233],[52.686962,-0.976192],[52.687012,-0.976154],[52.687062,-0.976113],[52.687111,-0.976068],[52.687158,-0.976025],[52.68721,-0.975981],[52.687263,-0.975939],[52.687313,-0.9759],[52.687362,-0.975863],[52.687415,-0.975825],[52.687469,-0.97579],[52.687522,-0.975758],[52.687579,-0.975731],[52.687633,-0.975704],[52.687683,-0.975677],[52.687732,-0.975647],[52.687785,-0.975619],[52.687838,-0.97559],[52.687895,-0.975556],[52.687947,-0.975513],[52.687999,-0.975465],[52.688049,-0.975411],[52.688102,-0.975352],[52.688149,-0.975291],[52.688198,-0.975225],[52.688245,-0.975156],[52.688293,-0.975086],[52.688343,-0.975017],[52.688393,-0.974946],[52.688443,-0.974873],[52.688495,-0.974802],[52.688548,-0.974735],[52.688602,-0.974667],[52.688654,-0.974596],[52.688705,-0.974519],[52.688757,-0.974445],[52.688808,-0.974371],[52.688861,-0.974295],[52.688914,-0.974218],[52.688968,-0.974139],[52.689021,-0.974063],[52.689072,-0.973987],[52.689127,-0.973912],[52.689182,-0.973837],[52.689235,-0.973761],[52.689288,-0.973685],[52.689345,-0.973606],[52.689399,-0.973526],[52.689455,-0.973446],[52.689515,-0.973366],[52.68957,-0.973283],[52.689627,-0.973201],[52.689687,-0.973116],[52.689748,-0.973033],[52.689809,-0.972945],[52.68987,-0.972856],[52.689931,-0.972766],[52.689995,-0.972676],[52.69006,-0.972583],[52.690125,-0.972486],[52.690196,-0.972385],[52.690268,-0.972273],[52.690337,-0.972169],[52.690411,-0.972063],[52.690477,-0.971967],[52.690549,-0.971875],[52.69062,-0.971775],[52.690685,-0.97168],[52.690742,-0.971589],[52.690795,-0.971506],[52.690843,-0.971427],[52.690884,-0.971365],[52.690915,-0.97132],[52.690939,-0.971288],[52.690965,-0.971264],[52.690997,-0.971242],[52.691032,-0.971214],[52.691066,-0.97118],[52.691104,-0.97114],[52.691145,-0.971095],[52.691186,-0.971057],[52.691234,-0.971026],[52.691284,-0.970998],[52.691339,-0.97097],[52.691394,-0.97094],[52.69145,-0.970911],[52.691508,-0.970881],[52.691568,-0.97085],[52.691627,-0.970822],[52.691686,-0.970794],[52.691744,-0.970764],[52.691804,-0.970735],[52.691861,-0.970706],[52.691921,-0.970676],[52.691986,-0.970641],[52.692052,-0.970606],[52.692113,-0.970573],[52.692177,-0.970541],[52.692239,-0.970509],[52.692303,-0.970476],[52.692365,-0.970443],[52.692426,-0.970408],[52.692484,-0.970376],[52.692544,-0.970345],[52.692602,-0.970315],[52.692659,-0.970284],[52.692716,-0.970254],[52.692771,-0.970222],[52.692827,-0.970188],[52.692888,-0.970154],[52.692952,-0.970122],[52.693017,-0.970088],[52.693081,-0.970052],[52.693149,-0.970016],[52.693218,-0.969979],[52.693287,-0.969939],[52.69336,-0.9699],[52.693434,-0.969859],[52.69351,-0.969819],[52.693589,-0.969779],[52.69367,-0.969743],[52.693755,-0.9697],[52.69384,-0.969654],[52.693933,-0.969606],[52.694019,-0.969556],[52.694112,-0.969495],[52.694199,-0.969428],[52.69428,-0.969355],[52.69436,-0.969271],[52.69443,-0.969197],[52.694502,-0.969122],[52.694566,-0.96905],[52.694627,-0.968977],[52.694688,-0.968906],[52.694749,-0.968841],[52.694816,-0.968775],[52.694879,-0.968712],[52.694937,-0.96865],[52.694994,-0.968583],[52.695054,-0.968517],[52.695109,-0.968456],[52.695169,-0.968399],[52.695227,-0.968345],[52.695281,-0.968292],[52.695335,-0.968238],[52.695388,-0.968182],[52.695438,-0.96813],[52.695488,-0.96808],[52.695534,-0.968029],[52.69558,-0.967973],[52.695626,-0.967915],[52.695672,-0.967861],[52.695717,-0.967812],[52.695769,-0.967764],[52.695814,-0.967718],[52.695859,-0.967674],[52.695905,-0.96763],[52.695954,-0.967588],[52.696,-0.967544],[52.696046,-0.967499],[52.696095,-0.967451],[52.696141,-0.9674],[52.69619,-0.967346],[52.696238,-0.967294],[52.696288,-0.967241],[52.696339,-0.967187],[52.696391,-0.967134],[52.696445,-0.967079],[52.696498,-0.967022],[52.696549,-0.966963],[52.6966,-0.966903],[52.696648,-0.966836],[52.696694,-0.966763],[52.696738,-0.966687],[52.696785,-0.966601],[52.696828,-0.966513],[52.696871,-0.966419],[52.696915,-0.966325],[52.696958,-0.966229],[52.697,-0.966132],[52.697039,-0.966034],[52.697077,-0.965937],[52.697119,-0.965839],[52.697158,-0.965744],[52.697199,-0.965647],[52.697241,-0.965549],[52.697283,-0.96545],[52.697327,-0.965352],[52.697373,-0.965252],[52.697419,-0.96515],[52.697461,-0.965047],[52.697507,-0.96494],[52.697553,-0.964832],[52.697595,-0.964722],[52.697643,-0.964613],[52.697689,-0.964507],[52.697738,-0.964393],[52.697787,-0.964283],[52.697838,-0.964165],[52.697888,-0.964048],[52.69794,-0.96393],[52.697993,-0.963809],[52.698044,-0.963683],[52.698096,-0.963555],[52.698159,-0.963431],[52.698217,-0.96331],[52.698275,-0.963184],[52.698329,-0.963049],[52.698391,-0.962925],[52.698469,-0.962821],[52.698551,-0.962726],[52.69864,-0.96265],[52.698737,-0.962594],[52.698834,-0.96255],[52.698933,-0.96251],[52.699026,-0.962467],[52.699118,-0.962419],[52.699206,-0.962362],[52.699298,-0.962313],[52.699394,-0.962261],[52.699488,-0.962207],[52.699582,-0.962158],[52.699675,-0.962111],[52.699766,-0.962068],[52.699855,-0.962027],[52.699948,-0.96199],[52.700046,-0.961955],[52.70014,-0.961916],[52.700232,-0.961874],[52.700324,-0.961834],[52.700412,-0.961785],[52.700502,-0.961737],[52.700594,-0.961696],[52.70068,-0.961654],[52.700769,-0.961616],[52.700858,-0.961573],[52.700946,-0.961521],[52.70103,-0.961471],[52.701114,-0.961422],[52.701201,-0.96137],[52.701285,-0.961315],[52.701367,-0.961253],[52.701447,-0.961201],[52.701527,-0.961149],[52.70161,-0.961093],[52.701686,-0.961041],[52.701752,-0.960997],[52.701814,-0.960958],[52.701866,-0.960928],[52.701913,-0.960904],[52.701959,-0.960884],[52.702008,-0.960859],[52.702057,-0.960822],[52.70211,-0.960773],[52.702169,-0.960719],[52.702227,-0.960663],[52.702289,-0.960608],[52.702355,-0.960552],[52.70242,-0.960495],[52.702484,-0.960441],[52.702552,-0.960383],[52.702618,-0.960324],[52.702677,-0.960255],[52.702731,-0.960171],[52.702779,-0.960076],[52.702813,-0.959969],[52.702834,-0.959852],[52.702848,-0.959732],[52.702853,-0.959612],[52.702857,-0.959492],[52.702855,-0.959371],[52.702851,-0.959245],[52.702844,-0.959119],[52.702831,-0.958994],[52.702813,-0.958871],[52.702794,-0.958751],[52.702772,-0.958635],[52.702746,-0.958519],[52.702719,-0.958403],[52.702692,-0.958293],[52.702666,-0.958188],[52.702642,-0.958087],[52.702622,-0.957989],[52.7026,-0.957883],[52.702577,-0.957774],[52.702549,-0.957659],[52.702521,-0.957544],[52.702494,-0.957432],[52.702468,-0.95732],[52.702444,-0.957206],[52.702421,-0.957094],[52.702395,-0.956983],[52.702371,-0.956878],[52.702345,-0.956779],[52.702318,-0.956681],[52.702298,-0.956586],[52.702273,-0.956495],[52.702249,-0.9564],[52.702217,-0.956309],[52.70218,-0.956234],[52.702133,-0.956181],[52.702077,-0.956149],[52.702016,-0.95613],[52.701947,-0.956124],[52.701879,-0.95613],[52.701812,-0.956137],[52.701744,-0.956147],[52.701676,-0.956158],[52.701607,-0.956161],[52.701545,-0.956145],[52.70149,-0.956105],[52.701439,-0.956043],[52.701398,-0.955966],[52.701364,-0.955874],[52.701332,-0.95578],[52.701298,-0.955681],[52.701267,-0.955586],[52.70123,-0.955487],[52.701195,-0.955386],[52.701166,-0.955283],[52.701149,-0.955175],[52.701139,-0.955066],[52.701138,-0.954955],[52.701143,-0.954845],[52.701157,-0.954735],[52.701169,-0.954623],[52.701181,-0.954514],[52.701195,-0.954408],[52.701202,-0.954303],[52.701199,-0.954198],[52.70119,-0.954098],[52.70117,-0.953997],[52.701147,-0.953895],[52.701118,-0.953792],[52.701087,-0.953689],[52.701057,-0.953593],[52.70102,-0.95351],[52.70098,-0.953436],[52.700935,-0.95336],[52.700889,-0.953284],[52.700843,-0.953205],[52.700791,-0.95312],[52.700747,-0.953033],[52.700708,-0.952949],[52.700666,-0.952862],[52.700627,-0.952772],[52.700592,-0.95268],[52.700555,-0.95259],[52.700517,-0.952499],[52.700479,-0.952411],[52.700441,-0.952331],[52.700399,-0.952262],[52.700352,-0.952201],[52.7003,-0.952155],[52.700234,-0.952126],[52.700169,-0.952107],[52.700103,-0.952099],[52.700042,-0.952097],[52.69998,-0.952086],[52.699922,-0.952064],[52.699865,-0.952028],[52.699814,-0.951975],[52.699764,-0.951905],[52.699718,-0.951826],[52.699675,-0.951733],[52.699633,-0.951631],[52.699593,-0.951525],[52.699561,-0.951422],[52.699528,-0.951322],[52.699497,-0.951221],[52.69946,-0.951121],[52.699425,-0.951023],[52.699393,-0.950922],[52.699354,-0.950829],[52.699315,-0.95074],[52.699274,-0.950655],[52.699232,-0.950563],[52.69919,-0.950477],[52.699149,-0.950388],[52.699109,-0.950293],[52.699074,-0.950193],[52.699046,-0.950094],[52.699022,-0.949994],[52.698999,-0.949895],[52.698982,-0.949793],[52.69897,-0.949685],[52.698958,-0.949581],[52.698953,-0.949477],[52.698946,-0.949373],[52.698941,-0.949269],[52.698937,-0.949164],[52.698931,-0.949059],[52.698923,-0.948956],[52.698912,-0.948855],[52.698901,-0.948753],[52.698887,-0.948653],[52.698865,-0.948554],[52.698846,-0.948455],[52.698823,-0.948355],[52.698801,-0.948254],[52.698778,-0.948155],[52.698752,-0.948053],[52.698728,-0.947951],[52.698705,-0.947851],[52.698682,-0.947751],[52.698659,-0.94765],[52.698637,-0.94755],[52.698614,-0.94745],[52.698591,-0.947348],[52.698565,-0.947246],[52.698541,-0.947143],[52.698521,-0.947042],[52.698499,-0.94694],[52.698476,-0.946836],[52.698453,-0.946732],[52.698427,-0.946628],[52.698401,-0.946526],[52.698377,-0.94642],[52.698351,-0.946314],[52.698325,-0.946209],[52.698298,-0.946104],[52.698274,-0.946],[52.698248,-0.945895],[52.698222,-0.945791],[52.698198,-0.945688],[52.698172,-0.945581],[52.698148,-0.945474],[52.698126,-0.945369],[52.6981,-0.945261],[52.698073,-0.945154],[52.698046,-0.945045],[52.698022,-0.944934],[52.698002,-0.944822],[52.69798,-0.944711],[52.697961,-0.944602],[52.697942,-0.944488],[52.697925,-0.944376],[52.69791,-0.944263],[52.697898,-0.944151],[52.697883,-0.944039],[52.697865,-0.943927],[52.697846,-0.943817],[52.697824,-0.943708],[52.697798,-0.943603],[52.697772,-0.943501],[52.697742,-0.943401],[52.697714,-0.943295],[52.697685,-0.943192],[52.697652,-0.943091],[52.697617,-0.94299],[52.697585,-0.94289],[52.697549,-0.942793],[52.697514,-0.942696],[52.69748,-0.942598],[52.697445,-0.9425],[52.697411,-0.942403],[52.697376,-0.942306],[52.697345,-0.942207],[52.697312,-0.942109],[52.69728,-0.94201],[52.697253,-0.941914],[52.697223,-0.941818],[52.697195,-0.94172],[52.697172,-0.941624],[52.697149,-0.941527],[52.697126,-0.941429],[52.697106,-0.941329],[52.697087,-0.94123],[52.697068,-0.941132],[52.697052,-0.941031],[52.697036,-0.940928],[52.697021,-0.940826],[52.697009,-0.940727],[52.696997,-0.940629],[52.696986,-0.94053],[52.696975,-0.940432],[52.696963,-0.940335],[52.696955,-0.940239],[52.696944,-0.940142],[52.696933,-0.940044],[52.696924,-0.939948],[52.696914,-0.939851],[52.696902,-0.939754],[52.696894,-0.939657],[52.696883,-0.93956],[52.696872,-0.939463],[52.69686,-0.939367],[52.696849,-0.939271],[52.696837,-0.939178],[52.696823,-0.939085],[52.696808,-0.938992],[52.696792,-0.938898],[52.696777,-0.938806],[52.696759,-0.938714],[52.696743,-0.938622],[52.696725,-0.938534],[52.696705,-0.938443],[52.696686,-0.938352],[52.696664,-0.938262],[52.696644,-0.938173],[52.696625,-0.938086],[52.696606,-0.937998],[52.69659,-0.937909],[52.696572,-0.937822],[52.696553,-0.937737],[52.696537,-0.93765],[52.696521,-0.937562],[52.696503,-0.937472],[52.696487,-0.937384],[52.696472,-0.937295],[52.696454,-0.937206],[52.696435,-0.937114],[52.696415,-0.937021],[52.696399,-0.936928],[52.696381,-0.936837],[52.696365,-0.936746],[52.696344,-0.936655],[52.696324,-0.936562],[52.696305,-0.936468],[52.696289,-0.936374],[52.696271,-0.936279],[52.696248,-0.936189],[52.696223,-0.9361],[52.696196,-0.936018],[52.696163,-0.935945],[52.696126,-0.935881],[52.696083,-0.935828],[52.696031,-0.935783],[52.695974,-0.935747],[52.695917,-0.935722],[52.695859,-0.935708],[52.695799,-0.9357],[52.695741,-0.935693],[52.695682,-0.935688],[52.695621,-0.935685],[52.69556,-0.935684],[52.695497,-0.935682],[52.695434,-0.935684],[52.695369,-0.935689],[52.695305,-0.935696],[52.69524,-0.935706],[52.695174,-0.93572],[52.695115,-0.935736],[52.695049,-0.935751],[52.694984,-0.935769],[52.694919,-0.935788],[52.694854,-0.935807],[52.69479,-0.935826],[52.694724,-0.935844],[52.69466,-0.935865],[52.694595,-0.935886],[52.694533,-0.935907],[52.694469,-0.935926],[52.694404,-0.935942],[52.694342,-0.935946],[52.694278,-0.935934],[52.694223,-0.935901],[52.694166,-0.935847],[52.694115,-0.935779],[52.694068,-0.935702],[52.694023,-0.93562],[52.693974,-0.935534],[52.693931,-0.935447],[52.693885,-0.935359],[52.69384,-0.935272],[52.693793,-0.935181],[52.693745,-0.935091],[52.693695,-0.935],[52.693648,-0.934911],[52.6936,-0.934824],[52.69355,-0.934735],[52.693501,-0.934648],[52.693448,-0.934559],[52.693395,-0.934474],[52.693341,-0.934388],[52.693288,-0.934304],[52.693231,-0.93422],[52.693177,-0.934138],[52.693121,-0.934062],[52.693064,-0.933988],[52.693006,-0.933916],[52.692952,-0.933847],[52.692896,-0.93378],[52.692841,-0.933715],[52.692785,-0.933651],[52.692731,-0.93359],[52.692677,-0.93353],[52.692627,-0.933472],[52.692575,-0.933415],[52.692524,-0.933357],[52.692477,-0.933297],[52.692429,-0.933235],[52.692379,-0.933171],[52.692333,-0.933106],[52.692283,-0.933034],[52.692237,-0.932961],[52.692188,-0.932886],[52.692142,-0.932809],[52.692094,-0.932733],[52.692043,-0.932653],[52.691993,-0.932576],[52.691941,-0.932498],[52.691891,-0.932417],[52.691841,-0.932337],[52.691792,-0.932257],[52.691739,-0.932174],[52.691686,-0.932092],[52.691632,-0.93201],[52.691582,-0.931929],[52.691529,-0.931844],[52.691479,-0.931761],[52.691426,-0.931677],[52.691373,-0.931594],[52.691319,-0.93151],[52.691269,-0.931427],[52.691216,-0.931344],[52.691166,-0.931262],[52.691117,-0.931181],[52.691064,-0.931099],[52.691013,-0.931019],[52.690964,-0.930938],[52.690911,-0.930857],[52.690861,-0.930776],[52.690811,-0.930698],[52.690758,-0.930619],[52.690708,-0.93054],[52.690656,-0.93046],[52.690605,-0.930379],[52.690555,-0.930296],[52.690503,-0.930213],[52.690452,-0.93013],[52.690403,-0.930046],[52.69035,-0.929962],[52.6903,-0.929881],[52.690247,-0.929796],[52.690194,-0.929712],[52.690141,-0.929628],[52.690087,-0.929543],[52.690034,-0.929457],[52.689981,-0.929371],[52.689927,-0.929285],[52.689874,-0.9292],[52.689817,-0.929113],[52.68976,-0.929026],[52.689706,-0.928937],[52.68965,-0.92885],[52.689592,-0.928762],[52.689538,-0.928675],[52.689486,-0.928588],[52.689432,-0.928498],[52.689378,-0.92841],[52.689322,-0.928321],[52.689267,-0.928232],[52.689211,-0.928145],[52.689157,-0.928059],[52.6891,-0.92797],[52.689046,-0.927884],[52.688992,-0.927794],[52.688936,-0.927706],[52.688882,-0.927617],[52.688825,-0.927528],[52.688771,-0.927439],[52.688714,-0.92735],[52.688661,-0.927261],[52.688601,-0.92717],[52.688543,-0.927082],[52.688489,-0.926992],[52.688435,-0.926902],[52.688379,-0.926815],[52.688319,-0.926728],[52.688263,-0.926637],[52.688205,-0.926545],[52.688147,-0.926447],[52.688083,-0.926346],[52.688021,-0.926244],[52.687957,-0.926142],[52.687892,-0.926037],[52.687824,-0.925935],[52.687754,-0.925835],[52.687682,-0.925718],[52.687608,-0.925602],[52.687541,-0.925499],[52.687479,-0.925394],[52.687412,-0.925295],[52.687353,-0.925198],[52.687296,-0.925102],[52.687239,-0.925012],[52.687184,-0.924925],[52.68713,-0.924836],[52.687079,-0.924753],[52.687024,-0.924663],[52.686967,-0.924569],[52.686907,-0.924476],[52.686849,-0.924381],[52.686789,-0.924287],[52.686734,-0.924192],[52.686678,-0.924099],[52.686623,-0.924007],[52.68657,-0.923917],[52.686514,-0.923828],[52.686458,-0.92374],[52.686397,-0.923652],[52.686338,-0.923564],[52.686284,-0.923474],[52.686227,-0.923383],[52.686171,-0.923297],[52.686113,-0.923206],[52.686059,-0.923114],[52.685999,-0.923023],[52.685941,-0.922935],[52.68589,-0.922846],[52.685844,-0.922756],[52.685801,-0.922666],[52.685762,-0.92258],[52.685727,-0.922494],[52.685689,-0.922412],[52.685654,-0.922332],[52.68562,-0.922254],[52.685585,-0.922182],[52.685557,-0.922121],[52.685539,-0.922084],[52.685527,-0.922055],[52.685509,-0.922032],[52.685484,-0.922033],[52.685455,-0.92207],[52.685424,-0.922126],[52.685391,-0.922193],[52.685353,-0.922265],[52.685313,-0.92234],[52.685274,-0.922419],[52.685232,-0.922503],[52.685188,-0.922585],[52.685139,-0.922669],[52.685089,-0.922756],[52.685039,-0.922842],[52.684987,-0.922929],[52.684936,-0.923011],[52.684887,-0.923094],[52.684834,-0.923175],[52.684787,-0.923252],[52.684741,-0.923326],[52.684695,-0.923399],[52.684646,-0.923472],[52.684597,-0.923548],[52.684547,-0.923619],[52.684495,-0.923674],[52.684441,-0.923706],[52.684385,-0.923713],[52.684334,-0.92369],[52.684288,-0.923639],[52.684256,-0.923564],[52.684229,-0.923477],[52.6842,-0.923389],[52.684169,-0.9233],[52.684133,-0.923209],[52.684097,-0.923124],[52.68406,-0.923042],[52.684013,-0.922963],[52.683965,-0.922891],[52.683914,-0.922825],[52.683858,-0.922769],[52.683802,-0.92272],[52.683747,-0.922671],[52.683694,-0.922619],[52.683643,-0.922559],[52.683594,-0.922488],[52.68355,-0.922407],[52.683511,-0.92232],[52.683476,-0.922226],[52.683441,-0.92213],[52.68341,-0.92203],[52.683383,-0.921928],[52.683356,-0.921823],[52.683326,-0.921724],[52.683296,-0.921624],[52.683268,-0.921527],[52.683235,-0.921431],[52.683204,-0.921336],[52.68317,-0.921241],[52.683133,-0.921152],[52.68309,-0.921074],[52.683038,-0.921002],[52.682988,-0.920938],[52.682938,-0.920868],[52.682894,-0.920791],[52.682855,-0.920711],[52.68282,-0.920625],[52.682785,-0.920534],[52.682754,-0.920442],[52.682726,-0.920349],[52.682697,-0.92026],[52.682664,-0.920173],[52.682632,-0.920084],[52.682601,-0.919996],[52.682568,-0.919908],[52.682534,-0.919819],[52.682497,-0.919726],[52.682461,-0.919628],[52.682429,-0.919527],[52.682396,-0.919428],[52.682362,-0.91933],[52.68233,-0.919235],[52.682294,-0.919139],[52.682259,-0.919042],[52.682224,-0.918944],[52.68219,-0.918845],[52.682156,-0.918747],[52.682119,-0.918649],[52.682081,-0.918553],[52.682045,-0.918456],[52.682011,-0.91836],[52.681977,-0.918265],[52.681945,-0.918173],[52.681912,-0.918084],[52.681877,-0.917997],[52.681846,-0.917912],[52.681815,-0.917826],[52.681788,-0.917741],[52.681766,-0.917654],[52.681747,-0.917568],[52.681727,-0.917481],[52.681671,-0.917393],[52.681619,-0.917316],[52.681586,-0.917234],[52.681559,-0.917144],[52.681529,-0.917051],[52.681499,-0.91696],[52.681471,-0.916867],[52.681444,-0.916776],[52.681415,-0.916685],[52.681381,-0.916594],[52.68135,-0.916501],[52.681317,-0.916406],[52.681282,-0.916311],[52.681248,-0.916219],[52.681213,-0.916128],[52.681179,-0.916036],[52.681145,-0.915941],[52.681112,-0.915849],[52.681077,-0.915754],[52.681039,-0.915657],[52.681007,-0.915563],[52.68097,-0.915466],[52.680932,-0.915368],[52.680894,-0.915269],[52.680859,-0.915167],[52.680821,-0.915065],[52.680787,-0.914964],[52.680752,-0.914861],[52.680715,-0.914759],[52.680679,-0.914659],[52.680642,-0.91456],[52.680607,-0.914462],[52.680573,-0.914363],[52.680539,-0.914266],[52.680504,-0.914163],[52.68047,-0.914062],[52.680433,-0.913962],[52.680396,-0.913862],[52.680359,-0.913757],[52.680322,-0.913657],[52.680286,-0.91356],[52.680255,-0.913465],[52.680224,-0.913373],[52.680197,-0.913284],[52.680173,-0.913191],[52.680153,-0.913098],[52.68014,-0.913005],[52.680126,-0.912911],[52.680117,-0.912817],[52.680106,-0.912728],[52.680094,-0.912642],[52.680083,-0.912558],[52.680075,-0.912478],[52.680067,-0.912398],[52.680059,-0.912321],[52.680052,-0.912244],[52.680041,-0.912168],[52.680033,-0.912092],[52.680025,-0.912015],[52.680014,-0.911937],[52.680006,-0.911857],[52.679998,-0.911773],[52.679988,-0.911686],[52.679979,-0.911599],[52.679972,-0.911512],[52.679961,-0.911423],[52.67995,-0.911337],[52.679941,-0.911251],[52.679932,-0.911167],[52.679922,-0.911083],[52.679912,-0.910999],[52.679903,-0.910912],[52.679895,-0.910827],[52.679885,-0.910745],[52.679876,-0.910661],[52.679866,-0.910577],[52.679854,-0.910492],[52.679846,-0.910411],[52.679835,-0.910329],[52.679827,-0.910245],[52.679819,-0.910163],[52.679808,-0.910082],[52.6798,-0.91],[52.679789,-0.909917],[52.679781,-0.909835],[52.679773,-0.909749],[52.679763,-0.909661],[52.679751,-0.909575],[52.67974,-0.909488],[52.679731,-0.909401],[52.679724,-0.909312],[52.679713,-0.909222],[52.679704,-0.909132],[52.679697,-0.909043],[52.679686,-0.908948],[52.679678,-0.908852],[52.679673,-0.908757],[52.679669,-0.908661],[52.679671,-0.908568],[52.679678,-0.908477],[52.679683,-0.908384],[52.679692,-0.908287],[52.679704,-0.908188],[52.679715,-0.908091],[52.67973,-0.907992],[52.679751,-0.907896],[52.679771,-0.907802],[52.679787,-0.907707],[52.679805,-0.90761],[52.679824,-0.907514],[52.679846,-0.907419],[52.679869,-0.907322],[52.679892,-0.907226],[52.679918,-0.907132],[52.679945,-0.907039],[52.679972,-0.906947],[52.680004,-0.906854],[52.680035,-0.906762],[52.680069,-0.906668],[52.6801,-0.906573],[52.680134,-0.906479],[52.680165,-0.906387],[52.680195,-0.906298],[52.680229,-0.906209],[52.680261,-0.90612],[52.680291,-0.90603],[52.680321,-0.905939],[52.680352,-0.905849],[52.680377,-0.905767],[52.680405,-0.905674],[52.680433,-0.905583],[52.68046,-0.905492],[52.680489,-0.905403],[52.68052,-0.905316],[52.680553,-0.905228],[52.680588,-0.905144],[52.680625,-0.905064],[52.680663,-0.904988],[52.680704,-0.904911],[52.680746,-0.904837],[52.680791,-0.904764],[52.680834,-0.904693],[52.680879,-0.904624],[52.680928,-0.904554],[52.680974,-0.904484],[52.68102,-0.904414],[52.681069,-0.904344],[52.681115,-0.904274],[52.681161,-0.904201],[52.681201,-0.904124],[52.681242,-0.904046],[52.681278,-0.903965],[52.681315,-0.903882],[52.681351,-0.903799],[52.681388,-0.903715],[52.68142,-0.903633],[52.681456,-0.903551],[52.681489,-0.903466],[52.681522,-0.903382],[52.681556,-0.903299],[52.681588,-0.903215],[52.681621,-0.903134],[52.681652,-0.903052],[52.681683,-0.90297],[52.681714,-0.90289],[52.681747,-0.902808],[52.681779,-0.902728],[52.681812,-0.902648],[52.68184,-0.902567],[52.68187,-0.902484],[52.681904,-0.9024],[52.681932,-0.902315],[52.681962,-0.902232],[52.681991,-0.902152],[52.682023,-0.902064],[52.68205,-0.901975],[52.682077,-0.901885],[52.682107,-0.901798],[52.682134,-0.901711],[52.682161,-0.901624],[52.682185,-0.901534],[52.682205,-0.901442],[52.682224,-0.901351],[52.682242,-0.901263],[52.682265,-0.90117],[52.682279,-0.901079],[52.682296,-0.900989],[52.682318,-0.900896],[52.682335,-0.900806],[52.682353,-0.900712],[52.682372,-0.900615],[52.682389,-0.900518],[52.682407,-0.900416],[52.682423,-0.900317],[52.682441,-0.900216],[52.682457,-0.900116],[52.682476,-0.900015],[52.682492,-0.899913],[52.682507,-0.899809],[52.682525,-0.899705],[52.682538,-0.899599],[52.682553,-0.899495],[52.682568,-0.899392],[52.682586,-0.89929],[52.682608,-0.899189],[52.682628,-0.89909],[52.68265,-0.898991],[52.682676,-0.898893],[52.682706,-0.898799],[52.682739,-0.898706],[52.68277,-0.898615],[52.682804,-0.898521],[52.682838,-0.898429],[52.682872,-0.898336],[52.682907,-0.898242],[52.682941,-0.898148],[52.682975,-0.898055],[52.68301,-0.897961],[52.683044,-0.897867],[52.683079,-0.897772],[52.68311,-0.897675],[52.683143,-0.89758],[52.683177,-0.897484],[52.683212,-0.897387],[52.683247,-0.897289],[52.683281,-0.897189],[52.683312,-0.897087],[52.683343,-0.896985],[52.683376,-0.896883],[52.683407,-0.896783],[52.683435,-0.896674],[52.683459,-0.896565],[52.683482,-0.896455],[52.683505,-0.896346],[52.683528,-0.896237],[52.683547,-0.896128],[52.683566,-0.896016],[52.683582,-0.895906],[52.683598,-0.895791],[52.683613,-0.895677],[52.683625,-0.895561],[52.683637,-0.895445],[52.683648,-0.895328],[52.68366,-0.895211],[52.683668,-0.895092],[52.683676,-0.894973],[52.683687,-0.894856],[52.683695,-0.89474],[52.683706,-0.894621],[52.683717,-0.894505],[52.683729,-0.894387],[52.683737,-0.894268],[52.683747,-0.894154],[52.683759,-0.894037],[52.68377,-0.893919],[52.683782,-0.893803],[52.68379,-0.893689],[52.683801,-0.893577],[52.683812,-0.893466],[52.683827,-0.893358],[52.683839,-0.893252],[52.683853,-0.893149],[52.683869,-0.893044],[52.683887,-0.892942],[52.683903,-0.892841],[52.683918,-0.89274],[52.683939,-0.892642],[52.683959,-0.892545],[52.683984,-0.892451],[52.684017,-0.892363],[52.684051,-0.892276],[52.684086,-0.892191],[52.68412,-0.892106],[52.684154,-0.892022],[52.684189,-0.891937],[52.684223,-0.891855],[52.684257,-0.891772],[52.684292,-0.891689],[52.684326,-0.891606],[52.68436,-0.891522],[52.684395,-0.891435],[52.684426,-0.891348],[52.684453,-0.891261],[52.684483,-0.891172],[52.684508,-0.891081],[52.684534,-0.890992],[52.68456,-0.890902],[52.684584,-0.890812],[52.68461,-0.890722],[52.684637,-0.890632],[52.68466,-0.890542],[52.684682,-0.890457],[52.684706,-0.890366],[52.684729,-0.890277],[52.684749,-0.890188],[52.684768,-0.890098],[52.684787,-0.890007],[52.684812,-0.889915],[52.684836,-0.889822],[52.684859,-0.889731],[52.684879,-0.889641],[52.684904,-0.889552],[52.684925,-0.889464],[52.684949,-0.889379],[52.684973,-0.889296],[52.684999,-0.889214],[52.685026,-0.889133],[52.685058,-0.889057],[52.68509,-0.888983],[52.685126,-0.888915],[52.685161,-0.888852],[52.685202,-0.888792],[52.685246,-0.888735],[52.685295,-0.88868],[52.685348,-0.88863],[52.685404,-0.888581],[52.685461,-0.888533],[52.685518,-0.888488],[52.685581,-0.888445],[52.685641,-0.8884],[52.685701,-0.888352],[52.685762,-0.888304],[52.685823,-0.888258],[52.685884,-0.888212],[52.685942,-0.888166],[52.685999,-0.888119],[52.686056,-0.888072],[52.686114,-0.888025],[52.686171,-0.887977],[52.686231,-0.887929],[52.686288,-0.887882],[52.686349,-0.887832],[52.686407,-0.887779],[52.686467,-0.887725],[52.686525,-0.887668],[52.686583,-0.887607],[52.686637,-0.887542],[52.686691,-0.887471],[52.686744,-0.887397],[52.686794,-0.887324],[52.686847,-0.88725],[52.686898,-0.887175],[52.686949,-0.8871],[52.687,-0.887024],[52.687046,-0.886946],[52.687096,-0.886864],[52.687143,-0.886781],[52.687191,-0.886698],[52.687238,-0.886618],[52.687286,-0.886538],[52.687336,-0.886455],[52.687383,-0.886371],[52.687434,-0.886288],[52.687482,-0.886203],[52.687528,-0.886119],[52.687576,-0.886038],[52.687626,-0.885955],[52.687675,-0.885871],[52.687722,-0.885785],[52.687768,-0.885702],[52.687817,-0.885622],[52.687863,-0.88554],[52.687909,-0.885458],[52.687955,-0.885371],[52.688001,-0.885286],[52.688047,-0.885201],[52.688095,-0.885119],[52.688145,-0.885034],[52.688192,-0.88495],[52.68824,-0.884866],[52.688286,-0.884783],[52.688332,-0.8847],[52.688375,-0.884614],[52.688417,-0.884528],[52.688456,-0.884436],[52.688486,-0.88434],[52.688506,-0.88424],[52.688517,-0.884137],[52.688521,-0.884033],[52.688519,-0.883929],[52.688513,-0.883824],[52.688505,-0.883721],[52.688488,-0.883622],[52.688469,-0.883525],[52.688448,-0.883431],[52.688425,-0.883335],[52.688402,-0.883241],[52.688379,-0.883145],[52.688356,-0.883049],[52.68833,-0.88295],[52.6883,-0.882851],[52.688273,-0.882749],[52.688246,-0.882647],[52.688222,-0.882537],[52.688194,-0.882427],[52.688166,-0.882316],[52.688142,-0.882198],[52.688134,-0.882077],[52.688142,-0.881953],[52.688159,-0.881835],[52.68819,-0.881724],[52.688231,-0.881624],[52.688273,-0.881532],[52.68832,-0.881448],[52.688373,-0.881371],[52.688423,-0.881297],[52.68847,-0.881225],[52.688519,-0.881151],[52.688568,-0.881076],[52.688621,-0.881002],[52.688674,-0.880929],[52.688727,-0.88086],[52.688781,-0.880788],[52.688835,-0.880717],[52.688888,-0.880649],[52.688944,-0.880582],[52.688999,-0.880515],[52.689054,-0.88045],[52.689112,-0.880389],[52.689169,-0.880333],[52.689224,-0.880274],[52.68928,-0.880213],[52.68934,-0.88015],[52.689401,-0.880087],[52.689459,-0.880027],[52.68952,-0.879965],[52.689577,-0.879908],[52.689637,-0.879852],[52.689695,-0.879792],[52.689753,-0.879733],[52.68981,-0.879675],[52.689868,-0.879619],[52.689927,-0.879563],[52.689982,-0.879504],[52.690042,-0.879445],[52.690103,-0.879387],[52.690158,-0.879328],[52.690218,-0.879267],[52.690272,-0.879206],[52.690326,-0.879144],[52.690379,-0.879084],[52.690435,-0.879025],[52.690493,-0.878964],[52.69055,-0.878905],[52.690608,-0.87884],[52.690661,-0.878778],[52.690715,-0.878718],[52.690766,-0.878656],[52.690814,-0.878593],[52.690861,-0.878523],[52.690905,-0.87845],[52.690944,-0.878372],[52.690979,-0.878289],[52.691016,-0.878205],[52.691051,-0.878119],[52.691086,-0.87803],[52.691116,-0.877944],[52.69115,-0.877855],[52.691182,-0.877765],[52.691215,-0.877677],[52.691249,-0.877591],[52.691287,-0.877506],[52.691325,-0.877424],[52.691363,-0.877343],[52.691401,-0.877262],[52.691442,-0.87718],[52.691484,-0.8771],[52.691527,-0.877021],[52.691572,-0.876944],[52.691614,-0.876867],[52.691659,-0.876791],[52.691705,-0.876715],[52.691751,-0.876635],[52.691796,-0.876554],[52.691836,-0.876469],[52.691874,-0.876382],[52.69191,-0.876292],[52.691944,-0.876202],[52.691975,-0.876107],[52.692006,-0.876012],[52.692039,-0.875918],[52.692073,-0.875828],[52.692111,-0.875741],[52.692148,-0.875664],[52.692187,-0.875591],[52.692228,-0.875526],[52.69227,-0.875468],[52.692315,-0.875412],[52.692364,-0.875359],[52.692413,-0.875312],[52.692466,-0.87527],[52.692519,-0.875229],[52.692573,-0.875193],[52.692626,-0.875159],[52.692683,-0.875127],[52.692743,-0.875098],[52.692801,-0.875071],[52.692861,-0.875044],[52.692916,-0.875013],[52.692972,-0.874977],[52.69303,-0.874936],[52.693084,-0.874893],[52.69314,-0.874846],[52.693194,-0.874794],[52.693251,-0.874737],[52.693305,-0.874676],[52.693359,-0.874612],[52.693409,-0.874547],[52.693459,-0.87448],[52.693511,-0.874413],[52.693565,-0.874343],[52.693615,-0.874272],[52.693668,-0.874202],[52.693721,-0.874134],[52.693774,-0.874069],[52.69383,-0.874011],[52.693888,-0.873957],[52.693942,-0.873904],[52.693996,-0.873852],[52.694046,-0.873802],[52.694095,-0.873749],[52.694145,-0.873693],[52.694195,-0.873634],[52.694238,-0.873572],[52.694283,-0.873504],[52.694324,-0.873434],[52.694359,-0.873359],[52.694387,-0.873277],[52.694405,-0.873193],[52.694426,-0.873106],[52.694443,-0.873024],[52.694458,-0.872947],[52.694471,-0.872875],[52.694485,-0.872796],[52.6945,-0.872716],[52.694513,-0.872636],[52.694524,-0.872558],[52.694533,-0.872474],[52.694546,-0.872388],[52.694561,-0.872299],[52.694577,-0.872214],[52.694595,-0.872134],[52.694617,-0.872051],[52.694639,-0.871964],[52.69466,-0.871878],[52.694679,-0.871793],[52.694697,-0.871705],[52.694717,-0.871613],[52.694733,-0.871521],[52.694751,-0.87143],[52.69477,-0.871339],[52.694792,-0.871245],[52.694812,-0.871151],[52.694831,-0.87106],[52.69485,-0.870964],[52.694872,-0.87087],[52.694895,-0.870772],[52.694918,-0.870677],[52.694938,-0.870588],[52.694957,-0.870505],[52.694979,-0.87042],[52.695002,-0.870331],[52.695025,-0.870232],[52.695039,-0.870121],[52.695053,-0.870003],[52.695072,-0.869884],[52.695094,-0.869769],[52.695114,-0.869656],[52.69513,-0.86954],[52.695148,-0.86942],[52.69517,-0.869298],[52.69519,-0.869176],[52.695206,-0.869051],[52.695224,-0.868927],[52.695243,-0.868807],[52.695265,-0.868688],[52.695285,-0.868565],[52.695304,-0.868443],[52.695326,-0.868318],[52.695346,-0.868193],[52.695368,-0.868069],[52.695391,-0.867949],[52.695414,-0.867832],[52.695434,-0.867715],[52.695453,-0.867594],[52.695466,-0.867468],[52.695472,-0.867339],[52.695464,-0.867201],[52.69544,-0.867066],[52.695405,-0.866938],[52.695361,-0.866813],[52.695307,-0.866693],[52.695243,-0.866552],[52.695173,-0.866415],[52.6951,-0.866281],[52.695034,-0.866162],[52.694966,-0.866043],[52.694898,-0.865927],[52.69483,-0.865811],[52.694754,-0.865699],[52.694684,-0.865584],[52.694624,-0.865468],[52.694561,-0.865353],[52.694499,-0.865238],[52.694435,-0.86512],[52.69437,-0.865003],[52.694306,-0.864893],[52.694243,-0.864787],[52.694182,-0.864686],[52.694118,-0.864583],[52.694053,-0.864472],[52.693991,-0.864363],[52.693927,-0.864254],[52.693863,-0.864143],[52.693801,-0.864033],[52.693736,-0.863928],[52.693678,-0.863828],[52.693625,-0.863734],[52.693568,-0.863636],[52.69351,-0.863538],[52.693455,-0.86344],[52.693402,-0.863344],[52.693349,-0.86325],[52.693292,-0.863153],[52.693235,-0.863054],[52.693178,-0.862953],[52.693118,-0.862852],[52.693056,-0.86275],[52.692997,-0.862647],[52.692935,-0.862541],[52.692873,-0.862433],[52.692809,-0.862326],[52.692748,-0.862218],[52.692687,-0.862111],[52.69262,-0.862004],[52.692554,-0.861896],[52.692492,-0.861792],[52.692431,-0.86169],[52.692373,-0.861587],[52.692315,-0.861488],[52.692254,-0.861389],[52.692194,-0.861289],[52.692136,-0.861192],[52.692079,-0.861096],[52.692022,-0.861],[52.691965,-0.860904],[52.691911,-0.860808],[52.691854,-0.860713],[52.691797,-0.860619],[52.691739,-0.860523],[52.691679,-0.860426],[52.691621,-0.860331],[52.691565,-0.860236],[52.691504,-0.860139],[52.691447,-0.860041],[52.691389,-0.859939],[52.691333,-0.859839],[52.691272,-0.859739],[52.691211,-0.859641],[52.691153,-0.85954],[52.691095,-0.85944],[52.691035,-0.85934],[52.690974,-0.859239],[52.690916,-0.859138],[52.690855,-0.859036],[52.690795,-0.858935],[52.690737,-0.858833],[52.690683,-0.858731],[52.690627,-0.85863],[52.690569,-0.858529],[52.690511,-0.858428],[52.690454,-0.85833],[52.690394,-0.858234],[52.690337,-0.858136],[52.690276,-0.85803],[52.690212,-0.857918],[52.690144,-0.857799],[52.690078,-0.857686],[52.690016,-0.857575],[52.689946,-0.857452],[52.689871,-0.857334],[52.689798,-0.857224],[52.689722,-0.857119],[52.689652,-0.857014],[52.689579,-0.856916],[52.689513,-0.856814],[52.689453,-0.856713],[52.689391,-0.856609],[52.689327,-0.856502],[52.689265,-0.856401],[52.689198,-0.856313],[52.689123,-0.856217],[52.689056,-0.856115],[52.688979,-0.856004],[52.688896,-0.855899],[52.688818,-0.855795],[52.688746,-0.855697],[52.688675,-0.8556],[52.688604,-0.85551],[52.688531,-0.855419],[52.688465,-0.85533],[52.688403,-0.855239],[52.688339,-0.855151],[52.68828,-0.855066],[52.68822,-0.85499],[52.68815,-0.854927],[52.688075,-0.854874],[52.687995,-0.854824],[52.687915,-0.854783],[52.687834,-0.854745],[52.687755,-0.854711],[52.687669,-0.854679],[52.687584,-0.854646],[52.687497,-0.854611],[52.687415,-0.854579],[52.687336,-0.854544],[52.687261,-0.854499],[52.687186,-0.854445],[52.687112,-0.85438],[52.687041,-0.854307],[52.686967,-0.854226],[52.686895,-0.854145],[52.686819,-0.854067],[52.686749,-0.853989],[52.686683,-0.853913],[52.686633,-0.853832],[52.686596,-0.853745],[52.686577,-0.853645],[52.686573,-0.853538],[52.686594,-0.853415],[52.686629,-0.853293],[52.686667,-0.853175],[52.686706,-0.853058],[52.686744,-0.852941],[52.686779,-0.852833],[52.686816,-0.852729],[52.686854,-0.852628],[52.686889,-0.852525],[52.686923,-0.852425],[52.686949,-0.852319],[52.686975,-0.852217],[52.686999,-0.852115],[52.687022,-0.852014],[52.687042,-0.85191],[52.687058,-0.851807],[52.687076,-0.851704],[52.687092,-0.851599],[52.687105,-0.851491],[52.687116,-0.851385],[52.687124,-0.851278],[52.687132,-0.851171],[52.68714,-0.851063],[52.68715,-0.850958],[52.687159,-0.850846],[52.687166,-0.850733],[52.687174,-0.850613],[52.687182,-0.85049],[52.687186,-0.850369],[52.687193,-0.850247],[52.687201,-0.850128],[52.687208,-0.850009],[52.687216,-0.84989],[52.687221,-0.849769],[52.68723,-0.849649],[52.687239,-0.849524],[52.687249,-0.8494],[52.687261,-0.84928],[52.687275,-0.849158],[52.687288,-0.849036],[52.687299,-0.848917],[52.687311,-0.8488],[52.687319,-0.848686],[52.687324,-0.848575],[52.687325,-0.848461],[52.687327,-0.848345],[52.687325,-0.848237],[52.687319,-0.848141],[52.687302,-0.848067],[52.687266,-0.84802],[52.687209,-0.847991],[52.687146,-0.847972],[52.687077,-0.847957],[52.687008,-0.84794],[52.686938,-0.847923],[52.686868,-0.847904],[52.686801,-0.847875],[52.686745,-0.847827],[52.686701,-0.847759],[52.686668,-0.847677],[52.686652,-0.847587],[52.686649,-0.847494],[52.686658,-0.8474],[52.686667,-0.847302],[52.686674,-0.847206],[52.686679,-0.847109],[52.686686,-0.847013],[52.686696,-0.846917],[52.686708,-0.846821],[52.686719,-0.84672],[52.686728,-0.846616],[52.686735,-0.846508],[52.686737,-0.846396],[52.686725,-0.846284],[52.686695,-0.846184],[52.686655,-0.846094],[52.686613,-0.846009],[52.686571,-0.845929],[52.686535,-0.84585],[52.68651,-0.845768],[52.68649,-0.84568],[52.686482,-0.845597],[52.686476,-0.84551],[52.686471,-0.845429],[52.686467,-0.845363],[52.686466,-0.845312],[52.686463,-0.845272],[52.686462,-0.845236],[52.686459,-0.845209],[52.686456,-0.845187],[52.686455,-0.845158],[52.686455,-0.845129],[52.686455,-0.845105],[52.686452,-0.845075],[52.686451,-0.845039],[52.686454,-0.845007],[52.686455,-0.844985],[52.686455,-0.844971],[52.686455,-0.844961],[52.686452,-0.844907],[52.686448,-0.844879],[52.686441,-0.844851],[52.686425,-0.844818],[52.686397,-0.844787],[52.686354,-0.844766],[52.686303,-0.844758],[52.686244,-0.844757],[52.686182,-0.844757],[52.686121,-0.844745],[52.686058,-0.844729],[52.685993,-0.844717],[52.685928,-0.844714],[52.68586,-0.844713],[52.685794,-0.844711],[52.685729,-0.844704],[52.685665,-0.844695],[52.685607,-0.844692],[52.685549,-0.844692],[52.685491,-0.844687],[52.685435,-0.844688],[52.685377,-0.8447],[52.685317,-0.844719],[52.685255,-0.844745],[52.685194,-0.844774],[52.685134,-0.844803],[52.685072,-0.844834],[52.685015,-0.844866],[52.68496,-0.844897],[52.684907,-0.844927],[52.684856,-0.844954],[52.684807,-0.844977],[52.68476,-0.844998],[52.684711,-0.845019],[52.684662,-0.845036],[52.68461,-0.845051],[52.684556,-0.845065],[52.684502,-0.845077],[52.684447,-0.845088],[52.684387,-0.845095],[52.684325,-0.845095],[52.684264,-0.845084],[52.684203,-0.84507],[52.684142,-0.845059],[52.68408,-0.84505],[52.684017,-0.845042],[52.683956,-0.845029],[52.683891,-0.845013],[52.683827,-0.845],[52.683765,-0.844987],[52.683697,-0.84497],[52.683631,-0.844953],[52.683566,-0.844937],[52.683499,-0.844926],[52.683433,-0.844914],[52.683368,-0.8449],[52.6833,-0.844882],[52.683235,-0.844864],[52.683167,-0.844847],[52.683098,-0.844833],[52.68303,-0.844821],[52.682964,-0.844808],[52.682896,-0.844793],[52.68283,-0.844777],[52.682763,-0.844762],[52.682699,-0.84475],[52.682635,-0.844738],[52.682571,-0.844726],[52.682509,-0.844713],[52.682449,-0.844701],[52.68239,-0.844688],[52.68233,-0.844676],[52.682269,-0.844664],[52.682208,-0.844653],[52.68215,-0.84464],[52.682089,-0.844626],[52.682032,-0.844612],[52.681971,-0.844596],[52.681914,-0.844578],[52.681859,-0.844561],[52.681805,-0.844541],[52.681752,-0.844519],[52.681695,-0.844494],[52.681636,-0.844468],[52.681571,-0.844437],[52.681505,-0.844402],[52.681432,-0.844361],[52.681357,-0.844317],[52.681281,-0.844266],[52.681198,-0.844207],[52.681113,-0.844133],[52.681012,-0.844062],[52.680905,-0.843994],[52.680799,-0.843916],[52.680683,-0.843851],[52.680559,-0.843797],[52.680433,-0.843761],[52.680301,-0.843734],[52.680168,-0.843719],[52.680035,-0.843714],[52.679913,-0.84372],[52.679791,-0.843741],[52.679675,-0.843784],[52.679575,-0.843844],[52.679488,-0.843907],[52.679405,-0.843962],[52.679321,-0.844004],[52.679238,-0.844034],[52.679156,-0.844048],[52.679086,-0.844046],[52.67902,-0.844034],[52.678957,-0.844012],[52.678902,-0.84399],[52.678849,-0.843964],[52.678802,-0.843937],[52.678759,-0.843902],[52.678714,-0.843864],[52.678663,-0.843828],[52.678615,-0.843796],[52.678566,-0.843764],[52.678516,-0.843732],[52.678469,-0.8437],[52.678424,-0.843666],[52.678375,-0.843633],[52.678328,-0.843599],[52.67828,-0.843565],[52.678233,-0.843531],[52.678187,-0.843496],[52.678141,-0.843461],[52.678096,-0.843425],[52.67805,-0.843392],[52.678002,-0.843359],[52.677955,-0.843324],[52.677909,-0.843286],[52.677863,-0.84325],[52.677817,-0.843213],[52.677768,-0.843179],[52.677722,-0.843147],[52.677673,-0.843113],[52.677627,-0.843078],[52.677578,-0.843041],[52.677528,-0.843003],[52.677485,-0.842969],[52.67744,-0.842935],[52.677396,-0.842904],[52.677343,-0.842871],[52.677292,-0.842839],[52.677236,-0.842807],[52.677182,-0.842773],[52.677122,-0.842739],[52.677063,-0.842709],[52.677001,-0.842676],[52.676937,-0.842645],[52.676869,-0.842614],[52.676803,-0.842581],[52.676734,-0.842549],[52.67666,-0.842514],[52.676587,-0.842479],[52.676515,-0.842445],[52.676436,-0.84241],[52.676357,-0.842372],[52.676276,-0.842334],[52.676193,-0.842294],[52.676109,-0.842251],[52.676025,-0.842207],[52.675939,-0.842162],[52.675848,-0.842116],[52.675756,-0.842069],[52.675665,-0.84203],[52.675574,-0.842014],[52.675479,-0.842022],[52.675386,-0.842055],[52.675289,-0.842106],[52.675196,-0.842184],[52.675104,-0.842282],[52.675013,-0.842369],[52.674921,-0.842456],[52.674829,-0.842551],[52.674735,-0.842653],[52.674643,-0.842746],[52.674545,-0.842841],[52.674443,-0.842939],[52.674339,-0.843039],[52.674234,-0.843137],[52.674127,-0.843245],[52.674014,-0.843358],[52.673911,-0.84348],[52.673805,-0.843587],[52.673697,-0.843685],[52.673596,-0.843771],[52.673496,-0.843874],[52.673402,-0.843979],[52.673311,-0.844065],[52.673217,-0.84415],[52.673118,-0.844242],[52.673019,-0.844326],[52.672917,-0.844404],[52.672818,-0.844477],[52.672719,-0.844547],[52.672631,-0.844616],[52.672527,-0.844681],[52.672424,-0.84474],[52.672319,-0.844801],[52.672214,-0.844856],[52.672112,-0.844913],[52.672006,-0.844971],[52.671893,-0.845018],[52.671792,-0.845061],[52.671695,-0.845091],[52.671599,-0.84512],[52.671512,-0.845151],[52.67142,-0.845163],[52.671331,-0.845169],[52.671243,-0.845174],[52.671158,-0.845175],[52.671077,-0.845175],[52.670997,-0.845175],[52.670917,-0.845179],[52.670836,-0.845184],[52.670762,-0.845186],[52.670684,-0.845188],[52.670607,-0.84519],[52.670531,-0.845193],[52.670458,-0.845196],[52.670386,-0.845199],[52.670309,-0.845201],[52.670239,-0.845203],[52.670167,-0.845207],[52.670098,-0.845217],[52.670029,-0.845229],[52.669958,-0.845251],[52.669885,-0.845282],[52.669806,-0.845317],[52.66972,-0.845348],[52.669633,-0.845385],[52.66954,-0.845423],[52.669444,-0.845459],[52.669349,-0.845493],[52.66925,-0.845529],[52.669148,-0.845564],[52.669048,-0.845599],[52.668946,-0.845632],[52.668844,-0.84567],[52.66874,-0.845704],[52.668638,-0.845734],[52.668534,-0.845765],[52.668437,-0.845804],[52.668332,-0.845839],[52.668231,-0.845878],[52.668132,-0.845915],[52.66803,-0.845952],[52.667928,-0.845989],[52.667822,-0.846026],[52.667717,-0.846067],[52.66761,-0.846106],[52.667501,-0.846144],[52.667391,-0.846187],[52.667279,-0.846228],[52.66716,-0.84627],[52.667042,-0.846314],[52.666925,-0.846356],[52.666805,-0.846403],[52.666687,-0.846453],[52.666577,-0.846521],[52.666475,-0.846611],[52.666386,-0.846723],[52.666305,-0.846848],[52.666234,-0.846968],[52.666171,-0.847094],[52.666102,-0.847205],[52.666032,-0.84732],[52.66596,-0.847426],[52.665885,-0.847514],[52.665808,-0.8476],[52.665729,-0.847676],[52.665652,-0.847753],[52.665575,-0.847823],[52.665499,-0.847887],[52.665422,-0.84795],[52.665351,-0.848008],[52.665274,-0.848064],[52.665197,-0.848115],[52.665124,-0.848167],[52.665049,-0.848213],[52.664975,-0.848254],[52.6649,-0.848292],[52.664823,-0.848323],[52.664744,-0.848353],[52.664664,-0.848383],[52.664587,-0.848412],[52.664508,-0.848439],[52.664431,-0.848466],[52.664361,-0.848498],[52.664292,-0.848539],[52.664224,-0.84858],[52.664158,-0.84862],[52.66409,-0.848659],[52.664021,-0.848699],[52.663955,-0.848738],[52.663887,-0.84878],[52.663822,-0.848822],[52.663757,-0.848861],[52.663692,-0.848901],[52.663627,-0.84894],[52.663564,-0.84898],[52.663498,-0.849021],[52.663437,-0.849059],[52.663372,-0.849099],[52.663307,-0.849141],[52.663242,-0.849181],[52.66318,-0.849224],[52.663119,-0.849264],[52.663058,-0.849298],[52.663001,-0.84933],[52.66294,-0.849366],[52.662882,-0.849403],[52.662824,-0.84944],[52.662764,-0.849479],[52.662709,-0.849516],[52.662653,-0.849548],[52.662598,-0.84958],[52.662545,-0.84961],[52.662489,-0.84964],[52.662434,-0.849667],[52.662381,-0.849699],[52.662331,-0.849732],[52.662279,-0.849763],[52.662225,-0.849794],[52.662174,-0.849829],[52.662128,-0.849864],[52.662082,-0.849895],[52.662036,-0.849927],[52.661993,-0.849962],[52.661951,-0.849994],[52.661906,-0.850025],[52.661864,-0.850057],[52.661821,-0.850092],[52.661779,-0.850126],[52.661738,-0.850158],[52.661698,-0.850191],[52.661657,-0.850225],[52.661618,-0.850264],[52.661583,-0.850302],[52.661546,-0.850338],[52.661514,-0.85038],[52.661483,-0.850426],[52.661456,-0.850471],[52.661429,-0.85052],[52.661402,-0.850573],[52.661373,-0.850626],[52.661339,-0.850677],[52.661302,-0.850718],[52.66126,-0.85075],[52.661216,-0.850773],[52.661167,-0.850785],[52.661118,-0.85079],[52.661068,-0.850794],[52.661018,-0.850799],[52.660966,-0.850805],[52.660916,-0.850814],[52.660863,-0.850824],[52.660815,-0.850837],[52.660767,-0.850852],[52.660714,-0.850869],[52.660667,-0.850885],[52.660618,-0.850904],[52.660568,-0.850925],[52.660521,-0.850943],[52.660476,-0.850962],[52.660427,-0.850988],[52.66038,-0.851017],[52.660334,-0.851043],[52.660292,-0.851068],[52.66025,-0.85109],[52.660205,-0.851117],[52.660162,-0.851149],[52.66012,-0.851185],[52.660081,-0.851219],[52.66004,-0.851254],[52.660002,-0.851287],[52.65996,-0.851318],[52.659918,-0.851347],[52.659879,-0.851376],[52.659838,-0.851406],[52.659796,-0.851438],[52.659754,-0.851473],[52.659712,-0.851508],[52.65967,-0.851538],[52.659625,-0.851565],[52.65958,-0.851589],[52.659534,-0.851614],[52.659485,-0.851639],[52.659435,-0.851663],[52.659386,-0.851681],[52.659333,-0.851698],[52.659277,-0.851713],[52.659222,-0.851728],[52.659163,-0.851742],[52.659105,-0.851755],[52.659048,-0.851765],[52.658987,-0.851773],[52.65893,-0.85178],[52.65887,-0.851787],[52.658808,-0.851792],[52.658748,-0.851796],[52.658688,-0.851797],[52.658629,-0.851794],[52.658565,-0.851789],[52.658501,-0.851783],[52.658439,-0.851779],[52.658378,-0.851773],[52.658314,-0.851764],[52.658245,-0.851751],[52.65818,-0.851739],[52.658115,-0.851728],[52.658047,-0.851719],[52.657981,-0.851709],[52.657915,-0.8517],[52.657845,-0.851694],[52.657779,-0.851689],[52.657715,-0.851688],[52.65765,-0.851691],[52.657582,-0.851694],[52.657516,-0.8517],[52.657451,-0.851707],[52.657386,-0.851717],[52.657321,-0.85173],[52.657257,-0.851745],[52.657195,-0.85176],[52.657134,-0.851775],[52.65707,-0.85179],[52.657009,-0.851803],[52.65695,-0.851814],[52.656887,-0.851826],[52.656825,-0.851837],[52.656767,-0.85185],[52.656707,-0.851862],[52.656646,-0.85187],[52.656588,-0.851876],[52.65653,-0.851882],[52.656473,-0.851886],[52.65641,-0.851889],[52.656352,-0.851891],[52.656291,-0.851889],[52.656231,-0.851885],[52.656172,-0.851878],[52.656115,-0.85187],[52.656055,-0.851861],[52.655996,-0.851852],[52.65594,-0.851846],[52.655885,-0.851837],[52.655832,-0.851826],[52.655778,-0.851813],[52.655725,-0.851801],[52.655671,-0.851788],[52.655615,-0.851772],[52.655559,-0.851751],[52.655498,-0.85173],[52.65544,-0.851706],[52.65538,-0.851682],[52.655313,-0.851663],[52.655244,-0.851643],[52.65517,-0.851624],[52.655093,-0.851608],[52.655017,-0.851596],[52.654946,-0.851583],[52.654875,-0.851572],[52.654806,-0.851562],[52.654737,-0.851554],[52.654668,-0.851545],[52.654602,-0.851534],[52.654537,-0.851527],[52.654476,-0.85152],[52.654415,-0.851512],[52.654354,-0.851506],[52.654295,-0.851497],[52.654235,-0.85149],[52.654175,-0.851481],[52.654113,-0.851473],[52.654058,-0.851465],[52.653999,-0.85146],[52.65394,-0.851457],[52.653881,-0.851454],[52.653819,-0.851446],[52.653761,-0.851434],[52.653702,-0.851424],[52.653643,-0.851417],[52.653584,-0.85141],[52.653526,-0.851403],[52.653465,-0.851397],[52.653402,-0.851389],[52.65334,-0.851379],[52.653272,-0.85137],[52.653204,-0.851361],[52.653137,-0.851351],[52.653065,-0.851341],[52.652992,-0.851331],[52.652919,-0.851321],[52.652843,-0.85131],[52.652768,-0.851297],[52.652691,-0.85128],[52.652614,-0.85126],[52.652541,-0.851235],[52.652471,-0.851204],[52.652399,-0.85117],[52.65233,-0.851138],[52.652258,-0.85111],[52.652186,-0.851082],[52.652119,-0.851051],[52.652051,-0.85102],[52.651983,-0.850993],[52.651917,-0.850965],[52.651853,-0.850937],[52.65179,-0.850911],[52.651727,-0.850891],[52.651665,-0.850876],[52.651604,-0.850865],[52.651549,-0.850861],[52.651492,-0.850861],[52.651438,-0.85087],[52.651384,-0.850888],[52.651328,-0.850911],[52.651263,-0.850935],[52.65119,-0.850966],[52.651116,-0.850999],[52.651031,-0.851035],[52.650941,-0.851073],[52.65084,-0.851115],[52.650731,-0.851154],[52.650618,-0.851184],[52.650501,-0.851209],[52.650382,-0.851228],[52.650266,-0.851246],[52.650146,-0.851261],[52.650027,-0.851276],[52.649912,-0.851292],[52.649794,-0.8513],[52.649686,-0.851312],[52.649576,-0.851288],[52.649469,-0.851246],[52.649358,-0.851189],[52.64925,-0.851116],[52.649157,-0.85105],[52.649068,-0.850999],[52.648978,-0.850975],[52.648896,-0.850975],[52.648815,-0.850993],[52.648732,-0.851021],[52.648658,-0.851053],[52.648597,-0.851088],[52.648521,-0.851138],[52.648446,-0.851189],[52.648379,-0.851235],[52.648315,-0.851279],[52.648247,-0.851321],[52.648181,-0.851361],[52.648117,-0.851399],[52.648053,-0.851435],[52.647984,-0.851469],[52.647918,-0.851504],[52.647853,-0.85154],[52.647788,-0.851575],[52.647726,-0.851608],[52.647666,-0.851637],[52.647605,-0.851663],[52.647544,-0.851686],[52.647483,-0.851706],[52.647425,-0.851722],[52.647364,-0.851731],[52.647306,-0.851741],[52.647246,-0.85175],[52.647188,-0.851756],[52.647128,-0.851764],[52.64707,-0.851774],[52.647012,-0.851781],[52.646959,-0.851787],[52.646903,-0.851795],[52.646848,-0.851802],[52.646794,-0.851808],[52.646741,-0.851813],[52.646687,-0.851816],[52.646637,-0.851818],[52.646587,-0.85182],[52.646541,-0.851825],[52.646492,-0.851834],[52.646442,-0.851839],[52.646396,-0.851843],[52.646347,-0.851848],[52.6463,-0.851855],[52.646253,-0.851862],[52.646206,-0.851867],[52.646156,-0.85187],[52.646107,-0.85187],[52.64606,-0.851871],[52.646011,-0.851872],[52.645965,-0.85187],[52.645919,-0.851869],[52.645876,-0.851867],[52.645831,-0.851864],[52.645785,-0.851859],[52.645738,-0.851857],[52.64569,-0.851855],[52.645638,-0.851855],[52.645585,-0.851855],[52.645526,-0.851855],[52.645464,-0.851854],[52.645401,-0.851853],[52.64533,-0.851855],[52.645258,-0.851855],[52.64518,-0.851855],[52.645099,-0.851854],[52.64502,-0.851852],[52.644939,-0.851849],[52.644861,-0.851847],[52.644785,-0.851844],[52.644712,-0.851842],[52.644642,-0.85184],[52.644571,-0.851837],[52.644501,-0.851833],[52.644433,-0.851829],[52.644364,-0.851826],[52.644289,-0.851819],[52.644216,-0.851808],[52.64414,-0.851793],[52.644065,-0.851776],[52.643988,-0.851755],[52.643914,-0.851733],[52.643846,-0.851712],[52.643785,-0.851693],[52.643728,-0.851673],[52.643668,-0.851654],[52.643616,-0.851637],[52.643573,-0.851625],[52.643539,-0.851614],[52.643514,-0.851605],[52.643494,-0.851597],[52.64347,-0.8516],[52.643437,-0.85163],[52.643412,-0.851686],[52.643394,-0.851756],[52.643379,-0.851834],[52.643364,-0.851914],[52.643348,-0.851998],[52.643327,-0.852088],[52.643307,-0.852183],[52.643288,-0.852283],[52.643269,-0.85239],[52.643247,-0.852502],[52.643224,-0.852617],[52.643201,-0.852736],[52.643175,-0.85286],[52.643152,-0.852987],[52.643126,-0.853116],[52.643099,-0.853248],[52.643076,-0.853385],[52.64305,-0.853526],[52.643017,-0.853674],[52.642986,-0.853823],[52.642955,-0.853975],[52.642934,-0.854124],[52.642917,-0.854274],[52.642902,-0.854419],[52.64289,-0.854566],[52.642875,-0.85471],[52.64286,-0.854854],[52.642845,-0.854992],[52.642827,-0.855129],[52.64281,-0.855263],[52.642795,-0.855394],[52.64278,-0.855522],[52.642762,-0.855647],[52.642743,-0.855765],[52.642727,-0.855882],[52.642708,-0.855999],[52.642689,-0.856115],[52.642673,-0.856232],[52.642655,-0.856344],[52.642636,-0.856462],[52.642617,-0.856581],[52.642595,-0.856702],[52.642572,-0.856824],[52.642546,-0.856945],[52.642522,-0.857066],[52.642497,-0.857186],[52.642473,-0.857307],[52.64245,-0.857425],[52.642427,-0.857535],[52.642402,-0.857641],[52.642383,-0.85775],[52.642362,-0.857851],[52.642342,-0.857953],[52.64232,-0.858052],[52.642303,-0.858151],[52.642285,-0.858252],[52.642266,-0.858353],[52.64225,-0.858452],[52.642232,-0.858553],[52.642212,-0.858653],[52.642196,-0.858752],[52.642178,-0.858851],[52.642162,-0.858949],[52.642147,-0.859049],[52.642129,-0.859149],[52.642112,-0.859249],[52.642097,-0.859347],[52.642082,-0.859445],[52.642067,-0.859542],[52.642052,-0.859636],[52.642036,-0.859732],[52.642021,-0.859826],[52.642009,-0.859923],[52.641994,-0.860018],[52.641979,-0.860114],[52.641964,-0.860207],[52.641948,-0.860301],[52.641933,-0.860396],[52.641915,-0.860493],[52.641899,-0.860587],[52.641884,-0.860681],[52.641871,-0.860775],[52.64186,-0.860867],[52.641851,-0.860961],[52.641841,-0.861052],[52.641829,-0.861141],[52.641818,-0.86123],[52.641809,-0.861321],[52.641802,-0.861411],[52.641797,-0.861501],[52.641796,-0.861594],[52.641796,-0.861684],[52.641799,-0.861774],[52.641806,-0.861866],[52.641813,-0.861954],[52.641827,-0.862044],[52.641839,-0.862133],[52.641856,-0.862225],[52.641876,-0.862318],[52.641892,-0.862413],[52.64191,-0.86251],[52.641929,-0.862606],[52.641945,-0.862703],[52.641963,-0.862798],[52.641982,-0.862894],[52.641998,-0.862991],[52.642017,-0.863088],[52.642033,-0.863182],[52.642054,-0.863279],[52.642071,-0.863373],[52.642086,-0.863467],[52.642105,-0.863559],[52.642124,-0.863651],[52.642143,-0.863743],[52.642162,-0.863833],[52.642181,-0.863926],[52.6422,-0.864019],[52.642219,-0.864109],[52.642235,-0.8642],[52.64225,-0.864287],[52.64226,-0.864372],[52.642267,-0.864458],[52.642272,-0.864543],[52.642273,-0.864624],[52.64227,-0.864711],[52.642266,-0.864796],[52.642262,-0.864882],[52.642256,-0.864966],[52.642248,-0.865049],[52.642237,-0.865132],[52.642235,-0.865218],[52.642229,-0.865308],[52.642221,-0.8654],[52.642211,-0.865493],[52.642205,-0.865587],[52.642201,-0.865682],[52.642198,-0.865777],[52.642197,-0.86587],[52.642194,-0.865964],[52.64219,-0.866056],[52.642189,-0.866149],[52.642186,-0.866242],[52.642185,-0.866335],[52.642188,-0.866426],[52.642189,-0.866516],[52.642186,-0.866606],[52.642185,-0.866696],[52.642185,-0.866786],[52.642185,-0.866876],[52.642185,-0.866965],[52.642188,-0.867048],[52.642189,-0.867133],[52.642192,-0.86722],[52.642196,-0.867308],[52.6422,-0.867399],[52.642203,-0.867491],[52.64221,-0.867585],[52.642215,-0.867679],[52.642222,-0.86777],[52.642229,-0.867858],[52.642237,-0.86795],[52.642247,-0.868044],[52.642259,-0.868138],[52.642273,-0.86823],[52.642289,-0.868324],[52.642301,-0.868416],[52.642312,-0.868507],[52.642327,-0.8686],[52.642342,-0.868689],[52.64236,-0.868782],[52.642376,-0.868878],[52.642395,-0.868978],[52.642414,-0.869081],[52.64243,-0.869189],[52.642445,-0.869297],[52.642463,-0.869414],[52.642482,-0.869533],[52.642498,-0.869649],[52.642517,-0.869765],[52.642533,-0.869881],[52.642548,-0.869996],[52.642566,-0.870112],[52.642585,-0.870231],[52.642601,-0.870351],[52.642619,-0.870468],[52.642638,-0.870587],[52.642655,-0.870714],[52.64267,-0.87084],[52.642682,-0.870967],[52.642696,-0.871095],[52.642712,-0.871228],[52.642724,-0.871362],[52.642739,-0.871495],[52.642751,-0.871635],[52.642768,-0.871775],[52.642782,-0.871916],[52.642796,-0.872058],[52.642808,-0.872197],[52.64282,-0.872338],[52.642834,-0.87248],[52.642849,-0.872625],[52.642862,-0.872773],[52.642873,-0.87293],[52.642881,-0.873088],[52.642889,-0.873242],[52.642897,-0.873397],[52.642896,-0.873549],[52.642889,-0.873702],[52.64289,-0.873866],[52.642894,-0.874024],[52.642889,-0.874178],[52.642884,-0.874332],[52.642883,-0.874483],[52.642889,-0.874642],[52.642897,-0.874799],[52.642904,-0.874957],[52.642909,-0.875122],[52.64291,-0.875283],[52.642904,-0.875432],[52.642899,-0.875587],[52.64289,-0.875735],[52.642878,-0.875873],[52.642867,-0.876009],[52.642855,-0.876138],[52.642841,-0.876266],[52.642829,-0.876392],[52.642814,-0.876517],[52.642802,-0.876639],[52.642791,-0.876762],[52.642779,-0.876884],[52.642774,-0.877002],[52.64277,-0.877121],[52.642769,-0.877239],[52.642769,-0.877357],[52.642766,-0.877473],[52.642768,-0.87759],[52.642772,-0.87771],[52.642776,-0.87783],[52.642776,-0.877951],[52.642774,-0.87807],[52.64277,-0.878192],[52.642766,-0.878312],[52.642762,-0.878428],[52.642755,-0.878549],[52.642748,-0.878667],[52.64274,-0.878788],[52.642735,-0.878904],[52.642729,-0.879019],[52.642727,-0.879134],[52.642724,-0.879249],[52.642723,-0.879367],[52.642723,-0.879488],[52.642726,-0.879613],[52.642727,-0.879738],[52.64273,-0.879861],[52.642734,-0.879984],[52.64274,-0.880108],[52.642745,-0.88023],[52.642749,-0.880352],[52.64275,-0.880472],[52.642753,-0.880589],[52.642757,-0.880706],[52.64276,-0.880821],[52.642764,-0.880933],[52.642765,-0.881046],[52.642765,-0.881157],[52.642765,-0.881269],[52.642765,-0.881379],[52.642768,-0.881488],[52.642769,-0.881597],[52.642769,-0.881702],[52.642769,-0.881809],[52.642766,-0.881915],[52.642756,-0.882021],[52.642745,-0.882126],[52.64273,-0.882233],[52.642715,-0.882337],[52.6427,-0.882444],[52.642685,-0.882549],[52.642663,-0.882654],[52.642644,-0.882758],[52.642625,-0.882863],[52.642603,-0.882968],[52.64258,-0.883074],[52.642557,-0.883178],[52.642534,-0.883281],[52.642511,-0.883383],[52.642488,-0.883486],[52.642465,-0.883587],[52.642442,-0.883689],[52.642422,-0.883789],[52.642403,-0.883889],[52.642387,-0.883987],[52.642375,-0.884086],[52.642369,-0.884183],[52.642365,-0.884277],[52.642365,-0.884369],[52.642367,-0.884461],[52.642377,-0.884549],[52.642386,-0.884638],[52.642396,-0.884727],[52.642405,-0.884816],[52.642418,-0.884906],[52.642431,-0.884996],[52.642442,-0.885086],[52.642453,-0.885176],[52.642468,-0.885267],[52.64248,-0.885356],[52.642494,-0.885443],[52.642507,-0.88553],[52.642521,-0.885617],[52.642534,-0.885704],[52.642545,-0.88579],[52.642556,-0.885878],[52.642568,-0.885966],[52.642576,-0.886056],[52.642581,-0.886146],[52.642585,-0.886234],[52.642589,-0.886325],[52.642592,-0.886413],[52.642599,-0.886502],[52.642604,-0.88659],[52.642608,-0.886677],[52.642614,-0.886764],[52.642619,-0.886853],[52.642626,-0.886938],[52.642634,-0.887028],[52.642638,-0.887115],[52.642645,-0.8872],[52.642647,-0.887287],[52.642653,-0.887372],[52.642657,-0.887457],[52.642661,-0.887542],[52.642668,-0.887626],[52.642673,-0.887708],[52.642679,-0.887791],[52.642684,-0.887874],[52.642685,-0.887957],[52.642685,-0.88804],[52.642691,-0.888123],[52.642698,-0.888206],[52.6427,-0.888288],[52.642703,-0.888374],[52.642707,-0.888456],[52.642711,-0.888538],[52.642715,-0.88862],[52.642721,-0.8887],[52.642726,-0.888776],[52.642727,-0.888856],[52.64273,-0.888933],[52.642736,-0.889003],[52.642741,-0.889075],[52.642745,-0.889144],[52.642746,-0.889212],[52.642749,-0.889281],[52.642756,-0.889349],[52.64276,-0.889417],[52.642764,-0.889486],[52.642768,-0.889553],[52.642772,-0.889619],[52.642776,-0.889688],[52.642779,-0.889755],[52.642786,-0.889821],[52.642791,-0.889888],[52.642795,-0.889953],[52.642798,-0.890017],[52.642805,-0.890079],[52.642813,-0.890142],[52.642818,-0.890204],[52.642824,-0.890263],[52.642829,-0.890322],[52.642833,-0.890375],[52.64284,-0.890429],[52.64285,-0.890482],[52.642859,-0.890534],[52.642866,-0.890585],[52.642874,-0.890634],[52.642884,-0.890681],[52.642896,-0.890734],[52.642907,-0.890791],[52.642922,-0.890849],[52.642937,-0.890904],[52.642952,-0.890958],[52.642968,-0.89101],[52.642986,-0.891061],[52.643005,-0.891116],[52.643021,-0.891166],[52.643039,-0.891215],[52.643061,-0.891265],[52.643084,-0.891311],[52.643107,-0.891356],[52.643132,-0.891399],[52.643159,-0.891443],[52.643186,-0.891484],[52.643213,-0.891524],[52.64324,-0.891567],[52.643269,-0.891611],[52.643297,-0.891658],[52.643327,-0.891704],[52.643357,-0.89175],[52.643385,-0.891796],[52.64341,-0.891836],[52.64345,-0.891895],[52.643486,-0.891957],[52.643511,-0.892022],[52.643534,-0.892094],[52.643554,-0.892175],[52.643573,-0.892258],[52.643592,-0.892344],[52.643605,-0.892435],[52.643626,-0.892528],[52.643637,-0.892623],[52.64365,-0.892722],[52.643666,-0.892825],[52.643678,-0.892931],[52.643686,-0.893039],[52.643688,-0.893147],[52.643688,-0.893253],[52.643691,-0.893358],[52.643695,-0.89346],[52.643699,-0.893562],[52.643708,-0.893672],[52.643723,-0.893791],[52.64374,-0.893916],[52.643763,-0.89405],[52.643789,-0.894186],[52.64381,-0.894325],[52.643829,-0.894477],[52.643845,-0.894633],[52.643857,-0.894792],[52.643868,-0.894956],[52.643883,-0.895121],[52.643892,-0.895284],[52.6439,-0.895458],[52.643905,-0.895628],[52.643903,-0.895785],[52.64389,-0.895943],[52.643872,-0.896097],[52.643853,-0.896252],[52.643828,-0.896408],[52.643795,-0.896563],[52.643761,-0.896719],[52.643727,-0.896877],[52.643695,-0.897041],[52.643668,-0.89721],[52.643647,-0.89738],[52.643631,-0.897563],[52.643624,-0.897745],[52.643632,-0.897934],[52.643643,-0.898108],[52.643658,-0.898282],[52.643682,-0.898442],[52.643706,-0.898591],[52.643729,-0.898732],[52.643751,-0.89886],[52.643775,-0.898987],[52.6438,-0.899108],[52.643827,-0.899231],[52.643851,-0.899352],[52.643871,-0.899473],[52.643881,-0.899589],[52.643885,-0.899695],[52.643892,-0.899819],[52.643897,-0.899942],[52.643901,-0.900063],[52.643899,-0.900181],[52.643895,-0.900297],[52.643888,-0.900406],[52.643884,-0.900513],[52.643877,-0.900614],[52.643869,-0.90071],[52.643862,-0.900809],[52.643854,-0.900904],[52.643846,-0.901],[52.643839,-0.901094],[52.643831,-0.901195],[52.643826,-0.901296],[52.643823,-0.901394],[52.643822,-0.901491],[52.643822,-0.901584],[52.643831,-0.901673],[52.643851,-0.901759],[52.643874,-0.901844],[52.643893,-0.901928],[52.643913,-0.902016],[52.643929,-0.902107],[52.643938,-0.902198],[52.643943,-0.902293],[52.643944,-0.902386],[52.643941,-0.902476],[52.643937,-0.902563],[52.64393,-0.902646],[52.643923,-0.902724],[52.643918,-0.902801],[52.643917,-0.902873],[52.643914,-0.90294],[52.643907,-0.902995],[52.643903,-0.903044],[52.643899,-0.903085],[52.643898,-0.903124],[52.643901,-0.903172],[52.643911,-0.903231],[52.643925,-0.903298],[52.643937,-0.903374],[52.643949,-0.903456],[52.643954,-0.90354],[52.643961,-0.903624],[52.643969,-0.903708],[52.643973,-0.903792],[52.643977,-0.903877],[52.643981,-0.90396],[52.643985,-0.90404],[52.643989,-0.904118],[52.643992,-0.904193],[52.643999,-0.904268],[52.644015,-0.904336],[52.644038,-0.904398],[52.644064,-0.904453],[52.644081,-0.904504],[52.644094,-0.904559],[52.644099,-0.904627],[52.644092,-0.904703],[52.644074,-0.904787],[52.644054,-0.904862],[52.644027,-0.90495],[52.644,-0.905038],[52.643976,-0.905127],[52.643953,-0.905218],[52.643933,-0.905308],[52.643914,-0.905394],[52.643895,-0.90548],[52.643879,-0.90557],[52.643863,-0.905662],[52.643848,-0.905757],[52.643833,-0.905853],[52.643818,-0.905947],[52.643802,-0.906044],[52.64379,-0.906142],[52.643779,-0.906242],[52.643767,-0.906339],[52.643756,-0.906437],[52.643741,-0.906537],[52.643726,-0.906634],[52.643714,-0.906734],[52.643699,-0.906831],[52.643684,-0.906927],[52.643672,-0.907024],[52.643658,-0.907119],[52.643645,-0.907219],[52.643634,-0.907319],[52.643622,-0.907419],[52.643611,-0.907519],[52.643599,-0.90762],[52.643588,-0.907723],[52.643573,-0.907829],[52.643561,-0.907936],[52.64355,-0.908043],[52.643536,-0.908147],[52.643523,-0.908254],[52.643512,-0.908363],[52.6435,-0.90847],[52.643489,-0.90858],[52.643477,-0.908692],[52.643463,-0.908803],[52.643445,-0.908914],[52.643429,-0.909023],[52.64341,-0.909135],[52.643395,-0.909247],[52.643379,-0.909362],[52.643361,-0.909478],[52.643342,-0.909595],[52.64332,-0.909716],[52.643297,-0.90984],[52.643272,-0.909962],[52.643239,-0.910087],[52.643204,-0.910205],[52.64317,-0.910321],[52.643133,-0.910437],[52.643092,-0.910552],[52.643053,-0.910662],[52.643012,-0.910771],[52.642973,-0.910874],[52.642929,-0.910974],[52.642883,-0.911066],[52.642834,-0.911159],[52.642781,-0.911246],[52.642731,-0.911332],[52.642678,-0.911416],[52.642625,-0.911496],[52.642568,-0.911574],[52.642515,-0.91165],[52.642461,-0.911728],[52.642404,-0.911806],[52.642351,-0.911882],[52.642295,-0.911961],[52.642237,-0.912039],[52.642176,-0.912109],[52.642113,-0.912172],[52.642046,-0.91223],[52.641975,-0.912281],[52.641899,-0.912326],[52.641826,-0.912363],[52.641753,-0.912397],[52.641679,-0.912428],[52.641602,-0.912459],[52.641528,-0.912493],[52.641457,-0.912528],[52.641377,-0.912575],[52.641302,-0.912628],[52.641233,-0.912686],[52.641165,-0.912746],[52.641095,-0.912809],[52.641031,-0.912872],[52.640968,-0.912938],[52.640914,-0.913001],[52.640862,-0.91306],[52.640819,-0.913108],[52.640778,-0.913155],[52.640738,-0.913208],[52.6407,-0.913273],[52.640673,-0.913357],[52.640664,-0.913452],[52.640669,-0.913554],[52.640676,-0.913662],[52.640687,-0.913767],[52.640698,-0.913873],[52.640713,-0.913979],[52.640725,-0.914087],[52.640736,-0.914194],[52.640751,-0.914306],[52.640763,-0.914415],[52.640775,-0.914527],[52.640786,-0.914638],[52.640803,-0.914746],[52.640822,-0.914855],[52.640842,-0.914965],[52.640861,-0.915076],[52.640882,-0.915187],[52.640902,-0.915298],[52.640924,-0.915409],[52.640947,-0.915523],[52.640967,-0.915633],[52.640981,-0.915748],[52.640989,-0.915864],[52.640994,-0.915975],[52.640995,-0.916089],[52.640989,-0.916201],[52.640976,-0.916309],[52.640961,-0.916415],[52.640946,-0.916521],[52.640925,-0.916627],[52.640905,-0.916732],[52.640882,-0.91684],[52.640862,-0.916947],[52.640843,-0.917053],[52.640822,-0.91716],[52.640801,-0.917267],[52.640779,-0.917378],[52.640758,-0.917491],[52.640737,-0.917606],[52.640717,-0.91772],[52.640698,-0.917835],[52.640679,-0.917949],[52.64066,-0.918064],[52.640644,-0.91818],[52.640629,-0.918291],[52.640613,-0.918401],[52.640598,-0.918509],[52.640583,-0.918619],[52.64057,-0.918729],[52.640556,-0.918841],[52.640544,-0.918953],[52.640529,-0.919063],[52.640517,-0.91917],[52.640501,-0.919277],[52.640484,-0.919384],[52.640465,-0.919496],[52.640446,-0.919611],[52.640427,-0.919728],[52.640408,-0.919848],[52.640389,-0.919969],[52.640367,-0.920091],[52.640347,-0.920218],[52.640325,-0.920349],[52.640305,-0.920474],[52.640286,-0.920597],[52.640261,-0.920717],[52.640237,-0.920835],[52.640215,-0.920952],[52.640191,-0.92107],[52.640169,-0.921187],[52.640146,-0.921302],[52.640123,-0.921417],[52.640103,-0.921531],[52.640081,-0.921643],[52.640058,-0.921756],[52.640035,-0.921869],[52.640009,-0.921985],[52.639986,-0.922095],[52.639966,-0.92221],[52.639944,-0.922326],[52.639919,-0.922436],[52.639895,-0.922554],[52.639874,-0.922672],[52.639852,-0.922787],[52.639832,-0.922901],[52.63981,-0.923015],[52.639787,-0.923127],[52.639762,-0.923234],[52.639738,-0.923345],[52.639718,-0.923453],[52.639696,-0.923563],[52.639673,-0.923669],[52.63965,-0.923773],[52.639627,-0.923881],[52.639604,-0.923991],[52.639584,-0.9241],[52.639562,-0.92421],[52.639536,-0.924321],[52.639515,-0.92443],[52.639494,-0.924539],[52.639474,-0.92465],[52.639457,-0.924759],[52.639442,-0.924866],[52.63943,-0.924975],[52.639415,-0.925082],[52.639403,-0.925192],[52.639395,-0.925303],[52.639384,-0.925415],[52.639373,-0.92553],[52.639358,-0.925646],[52.639343,-0.925762],[52.639328,-0.925878],[52.63931,-0.925992],[52.639293,-0.926106],[52.639272,-0.926219],[52.639252,-0.926331],[52.63923,-0.926442],[52.639207,-0.926552],[52.639186,-0.926653],[52.639162,-0.92676],[52.639141,-0.926856],[52.639119,-0.926965],[52.639097,-0.927071],[52.639074,-0.927174],[52.639057,-0.927279],[52.639039,-0.927385],[52.63902,-0.927491],[52.639001,-0.927598],[52.638981,-0.92771],[52.638966,-0.927823],[52.638947,-0.927945],[52.638928,-0.928066],[52.638912,-0.928187],[52.638897,-0.928308],[52.638879,-0.92843],[52.638862,-0.928547],[52.638847,-0.928659],[52.638829,-0.928769],[52.638813,-0.928876],[52.638797,-0.928983],[52.638785,-0.929088],[52.638768,-0.929191],[52.638752,-0.929296],[52.638739,-0.929401],[52.638728,-0.929505],[52.638717,-0.929608],[52.638705,-0.929713],[52.638694,-0.929817],[52.638682,-0.929921],[52.638671,-0.930026],[52.638659,-0.930131],[52.638651,-0.930237],[52.638643,-0.93034],[52.638632,-0.930439],[52.638624,-0.930534],[52.638616,-0.930629],[52.638609,-0.930728],[52.638601,-0.930829],[52.638593,-0.930932],[52.638583,-0.931032],[52.638574,-0.931135],[52.638567,-0.93124],[52.638556,-0.931342],[52.638548,-0.931444],[52.63854,-0.931546],[52.638532,-0.93165],[52.638525,-0.931753],[52.63852,-0.931861],[52.638513,-0.931969],[52.638509,-0.932077],[52.638505,-0.932187],[52.638501,-0.9323],[52.638494,-0.932418],[52.638487,-0.93254],[52.638479,-0.932667],[52.638474,-0.932796],[52.638462,-0.93293],[52.638449,-0.933064],[52.638435,-0.933199],[52.638423,-0.933331],[52.638405,-0.933458],[52.638389,-0.933581],[52.638371,-0.933698],[52.638352,-0.933814],[52.638333,-0.933928],[52.638317,-0.93404],[52.638299,-0.934152],[52.63828,-0.934261],[52.638258,-0.934367],[52.638235,-0.934475],[52.638215,-0.934578],[52.638193,-0.934679],[52.638173,-0.934779],[52.638154,-0.934878],[52.638134,-0.934973],[52.638115,-0.935066],[52.638091,-0.935158],[52.638067,-0.935252],[52.638044,-0.935346],[52.638018,-0.935439],[52.637991,-0.935531],[52.637968,-0.935621],[52.637945,-0.93571],[52.637925,-0.935799],[52.637909,-0.935888],[52.637887,-0.93598],[52.637867,-0.936077],[52.637849,-0.936175],[52.637832,-0.936278],[52.637817,-0.936384],[52.637802,-0.936492],[52.637784,-0.936601],[52.637767,-0.936721],[52.637755,-0.936844],[52.637744,-0.936971],[52.637729,-0.93711],[52.637717,-0.937253],[52.6377,-0.937398],[52.637684,-0.937541],[52.637671,-0.937689],[52.63766,-0.93784],[52.637651,-0.937992],[52.637647,-0.938144],[52.637643,-0.938298],[52.637642,-0.938451],[52.637642,-0.9386],[52.637648,-0.938745],[52.637658,-0.938889],[52.637667,-0.939031],[52.637677,-0.939175],[52.637689,-0.939321],[52.637703,-0.939466],[52.637716,-0.939613],[52.637724,-0.939757],[52.637735,-0.939899],[52.637743,-0.940038],[52.637751,-0.940178],[52.637758,-0.940315],[52.637769,-0.94046],[52.637778,-0.940611],[52.637782,-0.940763],[52.637792,-0.940927],[52.637797,-0.94109],[52.637801,-0.941257],[52.637799,-0.941414],[52.637795,-0.941567],[52.637783,-0.941716],[52.63777,-0.941862],[52.637756,-0.942007],[52.637738,-0.942148],[52.637713,-0.942288],[52.637686,-0.942421],[52.63766,-0.942558],[52.637636,-0.942694],[52.63761,-0.942827],[52.637587,-0.942954],[52.637566,-0.943085],[52.637544,-0.943215],[52.637524,-0.943342],[52.637508,-0.943468],[52.63749,-0.943594],[52.637471,-0.943717],[52.637455,-0.943839],[52.637439,-0.943961],[52.637421,-0.944081],[52.637405,-0.944197],[52.63739,-0.944318],[52.637372,-0.944438],[52.637353,-0.944563],[52.63733,-0.94469],[52.637305,-0.94482],[52.637278,-0.944951],[52.637251,-0.945086],[52.637225,-0.945219],[52.637198,-0.945353],[52.637169,-0.945484],[52.637135,-0.945623],[52.637103,-0.94576],[52.637067,-0.945896],[52.637029,-0.94603],[52.636994,-0.946168],[52.636954,-0.946306],[52.636914,-0.946448],[52.636873,-0.946586],[52.636819,-0.946705],[52.636777,-0.946833],[52.636748,-0.946976],[52.63671,-0.94712],[52.636667,-0.947259],[52.63662,-0.947394],[52.636576,-0.947533],[52.636535,-0.947671],[52.636486,-0.947814],[52.63644,-0.947947],[52.636391,-0.948085],[52.636344,-0.948225],[52.636295,-0.948357],[52.636249,-0.948489],[52.636206,-0.948622],[52.636158,-0.948756],[52.636111,-0.94889],[52.636065,-0.949024],[52.636023,-0.949149],[52.635981,-0.949287],[52.635942,-0.949427],[52.635904,-0.949576],[52.635865,-0.949722],[52.635824,-0.949867],[52.63578,-0.950011],[52.635737,-0.950158],[52.635698,-0.950301],[52.635659,-0.950453],[52.635625,-0.950623],[52.635587,-0.950793],[52.635549,-0.95095],[52.635511,-0.951106],[52.635475,-0.951239],[52.63545,-0.951377],[52.635427,-0.951522],[52.63541,-0.951664],[52.635392,-0.951794],[52.63537,-0.951909],[52.635353,-0.952015],[52.635346,-0.952121],[52.635354,-0.952233],[52.635377,-0.952356],[52.635416,-0.952483],[52.635467,-0.952618],[52.635523,-0.952764],[52.635585,-0.952921],[52.635662,-0.953086],[52.635734,-0.95326],[52.635811,-0.953449],[52.635898,-0.953636],[52.635982,-0.953829],[52.636069,-0.954013],[52.63616,-0.95419],[52.636245,-0.954368],[52.636329,-0.954541],[52.636413,-0.954711],[52.636491,-0.954892],[52.636564,-0.95506],[52.636634,-0.95524],[52.6367,-0.955424],[52.636759,-0.955607],[52.63681,-0.955786],[52.636854,-0.955976],[52.636895,-0.956159],[52.636931,-0.956325],[52.636968,-0.956493],[52.637007,-0.956655],[52.637049,-0.956819],[52.637096,-0.956964],[52.637146,-0.95711],[52.637204,-0.957258],[52.637269,-0.957403],[52.637327,-0.957555],[52.637387,-0.957693],[52.63744,-0.957823],[52.637495,-0.957956],[52.63755,-0.958079],[52.637609,-0.958196],[52.637664,-0.958314],[52.63772,-0.958442],[52.637775,-0.958571],[52.637825,-0.958704],[52.637869,-0.958845],[52.637917,-0.958981],[52.637966,-0.959113],[52.638015,-0.959247],[52.638062,-0.959381],[52.638105,-0.959514],[52.638155,-0.959646],[52.638209,-0.959771],[52.638268,-0.959889],[52.638329,-0.960003],[52.6384,-0.9601],[52.638475,-0.960194],[52.638549,-0.960283],[52.638624,-0.960363],[52.638697,-0.960445],[52.638762,-0.960531],[52.638828,-0.960627],[52.638888,-0.96073],[52.638942,-0.960831],[52.638995,-0.960935],[52.639046,-0.961038],[52.639096,-0.961142],[52.639142,-0.961242],[52.639188,-0.961341],[52.639228,-0.961437],[52.639268,-0.961528],[52.639311,-0.961618],[52.63935,-0.961705],[52.639388,-0.961791],[52.639426,-0.96188],[52.639464,-0.961968],[52.639503,-0.962057],[52.63954,-0.962143],[52.639582,-0.962232],[52.63962,-0.962318],[52.639665,-0.962407],[52.639709,-0.962492],[52.639756,-0.962585],[52.639798,-0.962679],[52.639844,-0.962779],[52.639886,-0.962881],[52.639926,-0.962991],[52.639966,-0.9631],[52.640006,-0.963215],[52.640044,-0.963333],[52.640082,-0.963454],[52.64012,-0.963581],[52.640156,-0.963712],[52.64019,-0.963845],[52.640224,-0.96398],[52.640258,-0.964118],[52.640299,-0.964264],[52.640338,-0.964419],[52.64037,-0.964559],[52.640406,-0.964704],[52.640439,-0.964857],[52.640471,-0.965014],[52.640509,-0.965174],[52.640548,-0.965328],[52.640588,-0.965479],[52.640619,-0.965639],[52.640654,-0.965791],[52.64069,-0.965943],[52.64073,-0.966091],[52.640763,-0.966237],[52.640802,-0.966386],[52.640849,-0.966541],[52.640903,-0.966705],[52.640959,-0.966859],[52.641014,-0.967011],[52.641064,-0.967163],[52.641111,-0.967317],[52.641147,-0.967468],[52.641184,-0.967619],[52.641229,-0.967777],[52.641265,-0.96794],[52.641303,-0.968106],[52.641341,-0.968251],[52.641385,-0.968399],[52.641434,-0.968552],[52.641474,-0.968725],[52.641527,-0.968893],[52.641576,-0.969055],[52.641624,-0.969212],[52.641662,-0.969373],[52.641708,-0.969528],[52.641761,-0.969671],[52.641817,-0.969823],[52.641871,-0.969977],[52.641922,-0.970134],[52.641966,-0.970294],[52.642011,-0.970445],[52.642057,-0.970603],[52.642102,-0.970765],[52.642148,-0.970937],[52.64219,-0.971097],[52.642233,-0.971266],[52.642277,-0.971425],[52.642312,-0.97159],[52.642345,-0.971752],[52.642386,-0.971913],[52.64243,-0.97207],[52.642473,-0.97223],[52.642512,-0.972382],[52.642553,-0.972545],[52.642595,-0.972708],[52.642637,-0.972863],[52.642679,-0.973007],[52.642721,-0.973152],[52.642757,-0.973311],[52.642797,-0.973465],[52.642842,-0.973616],[52.64289,-0.973768],[52.642931,-0.973917],[52.642973,-0.974084],[52.643012,-0.974249],[52.643047,-0.974406],[52.643087,-0.974557],[52.643123,-0.974706],[52.643161,-0.974855],[52.643193,-0.974997],[52.643232,-0.975133],[52.643271,-0.975266],[52.643307,-0.975408],[52.643344,-0.975552],[52.643379,-0.975692],[52.643413,-0.97583],[52.643448,-0.975973],[52.643491,-0.976109],[52.643531,-0.976243],[52.643569,-0.97638],[52.643604,-0.976521],[52.643643,-0.976653],[52.643683,-0.976786],[52.643724,-0.97692],[52.643769,-0.977049],[52.643803,-0.97719],[52.643828,-0.977329],[52.643842,-0.977477],[52.643851,-0.977637],[52.643858,-0.977802],[52.643863,-0.977976],[52.643878,-0.978158],[52.643897,-0.978348],[52.643911,-0.978538],[52.643928,-0.978728],[52.64395,-0.978912],[52.64397,-0.979098],[52.643989,-0.979283],[52.643999,-0.979454],[52.644013,-0.979627],[52.644031,-0.979813],[52.644059,-0.979996],[52.644092,-0.980164],[52.644138,-0.980333],[52.6442,-0.980484],[52.644268,-0.980629],[52.644337,-0.980768],[52.644405,-0.980909],[52.644471,-0.981049],[52.644538,-0.981188],[52.644609,-0.981323],[52.644691,-0.981439],[52.644796,-0.981551],[52.644896,-0.981641],[52.644997,-0.981728],[52.645093,-0.981812],[52.645186,-0.981889],[52.645274,-0.981962],[52.645356,-0.982045],[52.64543,-0.982132],[52.645495,-0.982213],[52.645555,-0.982286],[52.645601,-0.982345],[52.645629,-0.982407],[52.645639,-0.982477],[52.645633,-0.982545],[52.645612,-0.982602],[52.645584,-0.982648],[52.64555,-0.982692],[52.645516,-0.982738],[52.645478,-0.982786],[52.645442,-0.982836],[52.6454,-0.982893],[52.645357,-0.982948],[52.645315,-0.982998],[52.645274,-0.983047],[52.645232,-0.983097],[52.645192,-0.983148],[52.645151,-0.9832],[52.645109,-0.983249],[52.645064,-0.983299],[52.645022,-0.983344],[52.644979,-0.983388],[52.644935,-0.983433],[52.644889,-0.983478],[52.644847,-0.98352],[52.644804,-0.983561],[52.644759,-0.9836],[52.644717,-0.983636],[52.644674,-0.983676],[52.644629,-0.983721],[52.644584,-0.983767],[52.644538,-0.98381],[52.644492,-0.983851],[52.644443,-0.98389],[52.644397,-0.98393],[52.644351,-0.983972],[52.644305,-0.984015],[52.64426,-0.984057],[52.644214,-0.9841],[52.644165,-0.984143],[52.644115,-0.984187],[52.644069,-0.984234],[52.644026,-0.984286],[52.643987,-0.984351],[52.643957,-0.984432],[52.643926,-0.984523],[52.6439,-0.984627],[52.64388,-0.984743],[52.643855,-0.984862],[52.643831,-0.984985],[52.643805,-0.985112],[52.643776,-0.985237],[52.643739,-0.985361],[52.643701,-0.985478],[52.643661,-0.985576],[52.643612,-0.985665],[52.643562,-0.985735],[52.643508,-0.985783],[52.64345,-0.98581],[52.643381,-0.985814],[52.643309,-0.985803],[52.643235,-0.985777],[52.643163,-0.985747],[52.643091,-0.985717],[52.643018,-0.985691],[52.642946,-0.985673],[52.64287,-0.985667],[52.642794,-0.985668],[52.642718,-0.985679],[52.642647,-0.985698],[52.642584,-0.985724],[52.642527,-0.985754],[52.642463,-0.985787],[52.642402,-0.98582],[52.642343,-0.98586],[52.642289,-0.985911],[52.642236,-0.98598],[52.642194,-0.986066],[52.642173,-0.986165],[52.642167,-0.986269],[52.642172,-0.986374],[52.64218,-0.986466],[52.642193,-0.986547],[52.642205,-0.986633],[52.64222,-0.986717],[52.642235,-0.986793],[52.642253,-0.986869],[52.642272,-0.986945],[52.642295,-0.987024],[52.642305,-0.987108],[52.64231,-0.987193],[52.642305,-0.987276],[52.642286,-0.987352],[52.642263,-0.98742],[52.642234,-0.987481],[52.642204,-0.987536],[52.642167,-0.987584],[52.642126,-0.987627],[52.642081,-0.987665],[52.642035,-0.9877],[52.641986,-0.987737],[52.641943,-0.987779],[52.641901,-0.987821],[52.641853,-0.987858],[52.641803,-0.987891],[52.641755,-0.987924],[52.641705,-0.987956],[52.641661,-0.987989],[52.641613,-0.988022],[52.641566,-0.988056],[52.64152,-0.988089],[52.641475,-0.988114],[52.641427,-0.988135],[52.641376,-0.988153],[52.64133,-0.988171],[52.641284,-0.988189],[52.641241,-0.988213],[52.641196,-0.988243],[52.641157,-0.988282],[52.641122,-0.988333],[52.641093,-0.988393],[52.641066,-0.988459],[52.641039,-0.988533],[52.641013,-0.988613],[52.640983,-0.988699],[52.640955,-0.988792],[52.640926,-0.988896],[52.640892,-0.989007],[52.640855,-0.989126],[52.640814,-0.989246],[52.640772,-0.989355],[52.640721,-0.989457],[52.640662,-0.989546],[52.640598,-0.989622],[52.640524,-0.98968],[52.640442,-0.989724],[52.640353,-0.989763],[52.640256,-0.989808],[52.640159,-0.989853],[52.640062,-0.989901],[52.639951,-0.989959],[52.639844,-0.99001],[52.639752,-0.990059],[52.639665,-0.990105],[52.639577,-0.990155],[52.639495,-0.990208],[52.639415,-0.990259],[52.639338,-0.990305],[52.639261,-0.990347],[52.639188,-0.990385],[52.639117,-0.990414],[52.639047,-0.990434],[52.638978,-0.990451],[52.638912,-0.99047],[52.63885,-0.990487],[52.638786,-0.990504],[52.638713,-0.990529],[52.638639,-0.990556],[52.638566,-0.990585],[52.638497,-0.990617],[52.638429,-0.990655],[52.638357,-0.990696],[52.638285,-0.990738],[52.638212,-0.99078],[52.638135,-0.990821],[52.638052,-0.990869],[52.637973,-0.99093],[52.637896,-0.990989],[52.637819,-0.991033],[52.63774,-0.99106],[52.637664,-0.991071],[52.637591,-0.991071],[52.637523,-0.991064],[52.637459,-0.991053],[52.637401,-0.991036],[52.637343,-0.991016],[52.637285,-0.990994],[52.637228,-0.99097],[52.63717,-0.990948],[52.637114,-0.990931],[52.63706,-0.990919],[52.637006,-0.990914],[52.636961,-0.990907],[52.636919,-0.990897],[52.63688,-0.990891],[52.636842,-0.990885],[52.636804,-0.990876],[52.636766,-0.990862],[52.636725,-0.990851],[52.63668,-0.990847],[52.63664,-0.990845],[52.636599,-0.990846],[52.636557,-0.990852],[52.636519,-0.990861],[52.63648,-0.990874],[52.636442,-0.990887],[52.636406,-0.990896],[52.636369,-0.99091],[52.636328,-0.990924],[52.636292,-0.990934],[52.636257,-0.990951],[52.636223,-0.990965],[52.636183,-0.990979],[52.63613,-0.991002],[52.636072,-0.991028],[52.636015,-0.991054],[52.635963,-0.991079],[52.635917,-0.991106],[52.635859,-0.991131],[52.635795,-0.991164],[52.635728,-0.991198],[52.635659,-0.991232],[52.635588,-0.991267],[52.635518,-0.991298],[52.635446,-0.991334],[52.635374,-0.991375],[52.635301,-0.991412],[52.635229,-0.991455],[52.635162,-0.991496],[52.635102,-0.99153],[52.635041,-0.991563],[52.634975,-0.9916],[52.634913,-0.991635],[52.634855,-0.991666],[52.634801,-0.991693],[52.634747,-0.991712],[52.634688,-0.99173],[52.634624,-0.991744],[52.634556,-0.991758],[52.634467,-0.991771],[52.634387,-0.99178],[52.63431,-0.991787],[52.63424,-0.99179],[52.634171,-0.991793],[52.634108,-0.991789],[52.634047,-0.991774],[52.633992,-0.991756],[52.633933,-0.991737],[52.633875,-0.991722],[52.633821,-0.991708],[52.63377,-0.991696],[52.63372,-0.991686],[52.633674,-0.991674],[52.633622,-0.991661],[52.633569,-0.991648],[52.633518,-0.991639],[52.633467,-0.991632],[52.633417,-0.991624],[52.633369,-0.991617],[52.633317,-0.991611],[52.633266,-0.991604],[52.633214,-0.991596],[52.63316,-0.991589],[52.633107,-0.991578],[52.633057,-0.991562],[52.633007,-0.991545],[52.632958,-0.991528],[52.632911,-0.991507],[52.632862,-0.991484],[52.632813,-0.991463],[52.632763,-0.99144],[52.632716,-0.991417],[52.632673,-0.991398],[52.632629,-0.991378],[52.632583,-0.991355],[52.632537,-0.991329],[52.632488,-0.991308],[52.632445,-0.991291],[52.6324,-0.991274],[52.632354,-0.99126],[52.632308,-0.99125],[52.632263,-0.991241],[52.632216,-0.991229],[52.632168,-0.991216],[52.632122,-0.991206],[52.632079,-0.991196],[52.632042,-0.991183],[52.632011,-0.991167],[52.631974,-0.991153],[52.631936,-0.991136],[52.631898,-0.991115],[52.631863,-0.991096],[52.631826,-0.991076],[52.631787,-0.991054],[52.631752,-0.991032],[52.631718,-0.99101],[52.631681,-0.990991],[52.631646,-0.99097],[52.631605,-0.990946],[52.63156,-0.990921],[52.631517,-0.990896],[52.631475,-0.990873],[52.631433,-0.990854],[52.631388,-0.990837],[52.631346,-0.990823],[52.631304,-0.990808],[52.631259,-0.990796],[52.631213,-0.990787],[52.631165,-0.990783],[52.631118,-0.990782],[52.631073,-0.990789],[52.631029,-0.990806],[52.630987,-0.990829],[52.630948,-0.990858],[52.63091,-0.990893],[52.630872,-0.990936],[52.63084,-0.990986],[52.630806,-0.991038],[52.630769,-0.99109],[52.630734,-0.991141],[52.6307,-0.991195],[52.630662,-0.991246],[52.630621,-0.991294],[52.630579,-0.991341],[52.630537,-0.991385],[52.630492,-0.99143],[52.630449,-0.991474],[52.630407,-0.991516],[52.630362,-0.991558],[52.630317,-0.991601],[52.630271,-0.991642],[52.630228,-0.991686],[52.630183,-0.991733],[52.630137,-0.991781],[52.630095,-0.991829],[52.63005,-0.991877],[52.630008,-0.991924],[52.629965,-0.991972],[52.629923,-0.992019],[52.629884,-0.992064],[52.629844,-0.992105],[52.629801,-0.992145],[52.629762,-0.992191],[52.629721,-0.992237],[52.629682,-0.992283],[52.629644,-0.992329],[52.629602,-0.992376],[52.62956,-0.99242],[52.629518,-0.992465],[52.629477,-0.992508],[52.629435,-0.992552],[52.629397,-0.992594],[52.629355,-0.992641],[52.629315,-0.992689],[52.629274,-0.992736],[52.629235,-0.992776],[52.629198,-0.992814],[52.629159,-0.992854],[52.629121,-0.992894],[52.629083,-0.992936],[52.629042,-0.992977],[52.629003,-0.993019],[52.628962,-0.993061],[52.62892,-0.993102],[52.628881,-0.993142],[52.62884,-0.993186],[52.628801,-0.99323],[52.62876,-0.993273],[52.628721,-0.993317],[52.62868,-0.993362],[52.628634,-0.993406],[52.628592,-0.993451],[52.62855,-0.993496],[52.628508,-0.993542],[52.628466,-0.993588],[52.628421,-0.993632],[52.628378,-0.993676],[52.628333,-0.993723],[52.628287,-0.993769],[52.628238,-0.993814],[52.628192,-0.993854],[52.628149,-0.993898],[52.628105,-0.993944],[52.628058,-0.993991],[52.628013,-0.994036],[52.627968,-0.994082],[52.627922,-0.994128],[52.627873,-0.994174],[52.627825,-0.99422],[52.627777,-0.994269],[52.627724,-0.994315],[52.627674,-0.994363],[52.627624,-0.994418],[52.627575,-0.994472],[52.627522,-0.994527],[52.62747,-0.994578],[52.627419,-0.99463],[52.627369,-0.994685],[52.627319,-0.994744],[52.627269,-0.994803],[52.62722,-0.99486],[52.627173,-0.994918],[52.627128,-0.994978],[52.627079,-0.995038],[52.627032,-0.995097],[52.626981,-0.995152],[52.626934,-0.995205],[52.626887,-0.995259],[52.626844,-0.995308],[52.626803,-0.995348],[52.626764,-0.995378],[52.626728,-0.995402],[52.626697,-0.995414],[52.626664,-0.995417],[52.626626,-0.995413],[52.626582,-0.995409],[52.626536,-0.995419],[52.62649,-0.995445],[52.626442,-0.995489],[52.626392,-0.995546],[52.626346,-0.995613],[52.6263,-0.995682],[52.626257,-0.995754],[52.626221,-0.995836],[52.62619,-0.995925],[52.626162,-0.996026],[52.626141,-0.996132],[52.626119,-0.996243],[52.626102,-0.996357],[52.626087,-0.996475],[52.626072,-0.996594],[52.626065,-0.996709],[52.626064,-0.996817],[52.626053,-0.996916],[52.626023,-0.996996],[52.625974,-0.997049],[52.625914,-0.997069],[52.62585,-0.997055],[52.625789,-0.997028],[52.625727,-0.997018],[52.62567,-0.99704],[52.625609,-0.997083],[52.625555,-0.997132],[52.625501,-0.997186],[52.625448,-0.997243],[52.625397,-0.997303],[52.625344,-0.997364],[52.625294,-0.997429],[52.625248,-0.997495],[52.625204,-0.997567],[52.625166,-0.997643],[52.62513,-0.997723],[52.625096,-0.997807],[52.625061,-0.997892],[52.625024,-0.997977],[52.624983,-0.998066],[52.624947,-0.99816],[52.624915,-0.998254],[52.624888,-0.998352],[52.624861,-0.998456],[52.624837,-0.998565],[52.624809,-0.998675],[52.624781,-0.998786],[52.624751,-0.9989],[52.624718,-0.999017],[52.624684,-0.999132],[52.624649,-0.999244],[52.624613,-0.99935],[52.624577,-0.99946],[52.624542,-0.999573],[52.624506,-0.999682],[52.624467,-0.9998],[52.624438,-0.999921],[52.624414,-1.000047],[52.624394,-1.000172],[52.624381,-1.000297],[52.624364,-1.000423],[52.624345,-1.000538],[52.624315,-1.000647],[52.624271,-1.000757],[52.624222,-1.000866],[52.624175,-1.000974],[52.624123,-1.001078],[52.624073,-1.001181],[52.62402,-1.001287],[52.62397,-1.001394],[52.62392,-1.001501],[52.623874,-1.001606],[52.623825,-1.001714],[52.623778,-1.001822],[52.623736,-1.001926],[52.623693,-1.00203],[52.623655,-1.002129],[52.623616,-1.002225],[52.623581,-1.002318],[52.623547,-1.002412],[52.623513,-1.002504],[52.623475,-1.002601],[52.62344,-1.002693],[52.623403,-1.002783],[52.623362,-1.00287],[52.62332,-1.002959],[52.623272,-1.003053],[52.623228,-1.00315],[52.623186,-1.003242],[52.623144,-1.003332],[52.623105,-1.003421],[52.623079,-1.003511],[52.623062,-1.003609],[52.623055,-1.003708],[52.623066,-1.003791],[52.623087,-1.003863],[52.623122,-1.003921],[52.623163,-1.003985],[52.623202,-1.004052],[52.623243,-1.004117],[52.623285,-1.00418],[52.623324,-1.004253],[52.623345,-1.004346],[52.623348,-1.004452],[52.623328,-1.004552],[52.623292,-1.004643],[52.623248,-1.004727],[52.623201,-1.004804],[52.623147,-1.004882],[52.623094,-1.004956],[52.62304,-1.005031],[52.622987,-1.005109],[52.62293,-1.00519],[52.622874,-1.005272],[52.622819,-1.005357],[52.622765,-1.005441],[52.622712,-1.005524],[52.622662,-1.005603],[52.622609,-1.005683],[52.622555,-1.005764],[52.622497,-1.005842],[52.622429,-1.00591],[52.622361,-1.005965],[52.622289,-1.006005],[52.622217,-1.006031],[52.622141,-1.006048],[52.622068,-1.006062],[52.621989,-1.006077],[52.621913,-1.00609],[52.621834,-1.006097],[52.621753,-1.006093],[52.62167,-1.006075],[52.621589,-1.006038],[52.621512,-1.005981],[52.621434,-1.005919],[52.621347,-1.005837],[52.621256,-1.005761],[52.621168,-1.005684],[52.621074,-1.005591],[52.620982,-1.005515],[52.620879,-1.00545],[52.620774,-1.005373],[52.620669,-1.005299],[52.620562,-1.005223],[52.620448,-1.005156],[52.62034,-1.005098],[52.620237,-1.005049],[52.620133,-1.00501],[52.620032,-1.00498],[52.619934,-1.004955],[52.619844,-1.00493],[52.619762,-1.004908],[52.619684,-1.004882],[52.619605,-1.004856],[52.619531,-1.004829],[52.61946,-1.004802],[52.619389,-1.004772],[52.619321,-1.004745],[52.619252,-1.004718],[52.619184,-1.004689],[52.619115,-1.004659],[52.619047,-1.004627],[52.618981,-1.004594],[52.618916,-1.004569],[52.618853,-1.004554],[52.618793,-1.004554],[52.618734,-1.00457],[52.618677,-1.004597],[52.61862,-1.00463],[52.618562,-1.004674],[52.618509,-1.004725],[52.618459,-1.004781],[52.618406,-1.004839],[52.618356,-1.004897],[52.618306,-1.004955],[52.618253,-1.005013],[52.618203,-1.00507],[52.618154,-1.005122],[52.618103,-1.005176],[52.618056,-1.005227],[52.618008,-1.005275],[52.617955,-1.005324],[52.617902,-1.005371],[52.617848,-1.005419],[52.617795,-1.005465],[52.617745,-1.005509],[52.617692,-1.005553],[52.617639,-1.005595],[52.617587,-1.005637],[52.617532,-1.005684],[52.617478,-1.005732],[52.617422,-1.005783],[52.617367,-1.005835],[52.617314,-1.00589],[52.617261,-1.00595],[52.617207,-1.006014],[52.617157,-1.00608],[52.617107,-1.006148],[52.617061,-1.006219],[52.617013,-1.006293],[52.61696,-1.006372],[52.616906,-1.006449],[52.61685,-1.006522],[52.616796,-1.00659],[52.616736,-1.006658],[52.616678,-1.006722],[52.616618,-1.006783],[52.61656,-1.006846],[52.6165,-1.006908],[52.616436,-1.006971],[52.616374,-1.007037],[52.616313,-1.007105],[52.616252,-1.007178],[52.616191,-1.007256],[52.616127,-1.007336],[52.616065,-1.007418],[52.616001,-1.007499],[52.615939,-1.007585],[52.615875,-1.007673],[52.615813,-1.007761],[52.615752,-1.007851],[52.615688,-1.007942],[52.615623,-1.008033],[52.615561,-1.008124],[52.6155,-1.008216],[52.615439,-1.00831],[52.615381,-1.008405],[52.615321,-1.008499],[52.615261,-1.008593],[52.615202,-1.008695],[52.615145,-1.008797],[52.615084,-1.008897],[52.615027,-1.008997],[52.614966,-1.009101],[52.614908,-1.009204],[52.614848,-1.009307],[52.614788,-1.009405],[52.614726,-1.009504],[52.614665,-1.009599],[52.614604,-1.009692],[52.61454,-1.009784],[52.614475,-1.009875],[52.614412,-1.009964],[52.614343,-1.010053],[52.614276,-1.01014],[52.614205,-1.010226],[52.614136,-1.010309],[52.614065,-1.010392],[52.613993,-1.010477],[52.613911,-1.010563],[52.613839,-1.010649],[52.613768,-1.010734],[52.613695,-1.010822],[52.613622,-1.010907],[52.61355,-1.010996],[52.61348,-1.011083],[52.613408,-1.011166],[52.613333,-1.011249],[52.61326,-1.011331],[52.613184,-1.011421],[52.613111,-1.01151],[52.613039,-1.011597],[52.612972,-1.011681],[52.612904,-1.011775],[52.612843,-1.011866],[52.612778,-1.011962],[52.61271,-1.012059],[52.612644,-1.012157],[52.612576,-1.012256],[52.612507,-1.012353],[52.612442,-1.012447],[52.612377,-1.012547],[52.612312,-1.012646],[52.612244,-1.012747],[52.612181,-1.012853],[52.612117,-1.012954],[52.612049,-1.013054],[52.611981,-1.013156],[52.611912,-1.013254],[52.611843,-1.013354],[52.611778,-1.013452],[52.611713,-1.013548],[52.611648,-1.013644],[52.611581,-1.013738],[52.611515,-1.013838],[52.611447,-1.013936],[52.611378,-1.014031],[52.611312,-1.014127],[52.611245,-1.014217],[52.611176,-1.014306],[52.611107,-1.014397],[52.611041,-1.014491],[52.610974,-1.014582],[52.610908,-1.014675],[52.61084,-1.01477],[52.610776,-1.01486],[52.61071,-1.014951],[52.610644,-1.01504],[52.610574,-1.015132],[52.610507,-1.01522],[52.610443,-1.015307],[52.610375,-1.015394],[52.610313,-1.015479],[52.610248,-1.015569],[52.610183,-1.015657],[52.610119,-1.015741],[52.610054,-1.015827],[52.609986,-1.015914],[52.609923,-1.016001],[52.609859,-1.016086],[52.609794,-1.016172],[52.60973,-1.016259],[52.609668,-1.016347],[52.609601,-1.016436],[52.609532,-1.016524],[52.609463,-1.016612],[52.609398,-1.016698],[52.60933,-1.016787],[52.609258,-1.016875],[52.609191,-1.016962],[52.609128,-1.017046],[52.609062,-1.017131],[52.609,-1.017212],[52.608936,-1.017294],[52.608872,-1.017378],[52.608809,-1.017467],[52.608745,-1.017554],[52.608683,-1.01764],[52.608623,-1.017724],[52.608558,-1.017806],[52.608496,-1.017888],[52.608437,-1.01797],[52.608372,-1.018056],[52.608307,-1.018141],[52.608245,-1.018224],[52.608183,-1.018308],[52.608124,-1.018388],[52.608062,-1.018472],[52.608004,-1.018555],[52.607947,-1.018636],[52.60789,-1.018717],[52.607832,-1.018796],[52.607778,-1.01887],[52.607727,-1.01894],[52.607681,-1.019002],[52.607641,-1.019059],[52.607605,-1.019113],[52.607568,-1.019164],[52.607534,-1.019207],[52.607504,-1.019255],[52.607495,-1.019312],[52.607503,-1.019381],[52.607529,-1.019452],[52.607569,-1.019522],[52.607607,-1.019594],[52.607649,-1.01967],[52.607693,-1.019751],[52.607739,-1.019838],[52.607782,-1.019929],[52.60783,-1.020022],[52.60788,-1.020116],[52.607932,-1.020208],[52.607986,-1.020303],[52.608042,-1.0204],[52.608096,-1.020498],[52.60815,-1.020597],[52.608206,-1.020697],[52.608263,-1.020798],[52.608316,-1.0209],[52.608368,-1.021007],[52.608423,-1.021107],[52.608478,-1.021205],[52.608531,-1.021301],[52.608582,-1.021401],[52.608631,-1.021498],[52.608681,-1.021592],[52.60873,-1.021685],[52.608779,-1.021779],[52.608826,-1.021873],[52.608875,-1.021968],[52.608928,-1.022064],[52.608975,-1.022161],[52.609024,-1.022261],[52.60907,-1.022359],[52.609114,-1.022463],[52.609156,-1.022569],[52.609195,-1.022678],[52.60923,-1.02279],[52.609264,-1.022902],[52.609292,-1.023018],[52.609316,-1.02314],[52.609333,-1.023264],[52.609346,-1.023389],[52.609354,-1.023518],[52.609362,-1.023649],[52.609366,-1.023781],[52.609367,-1.023911],[52.609364,-1.02404],[52.609355,-1.024169],[52.609343,-1.024296],[52.609329,-1.024427],[52.609314,-1.024557],[52.609298,-1.024691],[52.609283,-1.024824],[52.609268,-1.024956],[52.609253,-1.02509],[52.609237,-1.025224],[52.609222,-1.025358],[52.60921,-1.025491],[52.609198,-1.025623],[52.60919,-1.025757],[52.609185,-1.025889],[52.609181,-1.02602],[52.60918,-1.026154],[52.60918,-1.026287],[52.609183,-1.026418],[52.609187,-1.026548],[52.609191,-1.026679],[52.609195,-1.02681],[52.609202,-1.026939],[52.609209,-1.02707],[52.609217,-1.027199],[52.609227,-1.027331],[52.609239,-1.027464],[52.60925,-1.027597],[52.609259,-1.027729],[52.609266,-1.027863],[52.609277,-1.027998],[52.609285,-1.028131],[52.609293,-1.028265],[52.609304,-1.028397],[52.609312,-1.028531],[52.609323,-1.028665],[52.609331,-1.028798],[52.609339,-1.028935],[52.60935,-1.02907],[52.609358,-1.029204],[52.609369,-1.029339],[52.609377,-1.029474],[52.609382,-1.029609],[52.609386,-1.029744],[52.609395,-1.029878],[52.609404,-1.030011],[52.609411,-1.030142],[52.609419,-1.030271],[52.60943,-1.030401],[52.609438,-1.030531],[52.609446,-1.030664],[52.609453,-1.030797],[52.609461,-1.03093],[52.609469,-1.031063],[52.609479,-1.031196],[52.609491,-1.031327],[52.609505,-1.031459],[52.609517,-1.03159],[52.609532,-1.031721],[52.609552,-1.031847],[52.609575,-1.031978],[52.609601,-1.032107],[52.609625,-1.032235],[52.609654,-1.032361],[52.609687,-1.032486],[52.609721,-1.032605],[52.609762,-1.032727],[52.609801,-1.032843],[52.609845,-1.032957],[52.609891,-1.033068],[52.60994,-1.033177],[52.609989,-1.033281],[52.610044,-1.033382],[52.610102,-1.03348],[52.610156,-1.033581],[52.61021,-1.033682],[52.610266,-1.033778],[52.610323,-1.033869],[52.610383,-1.03396],[52.610441,-1.034054],[52.610497,-1.034149],[52.610558,-1.034247],[52.61062,-1.034344],[52.610681,-1.034441],[52.610745,-1.034537],[52.610806,-1.034635],[52.610868,-1.034734],[52.610932,-1.03483],[52.610997,-1.034927],[52.611055,-1.035027],[52.611116,-1.035129],[52.611174,-1.035226],[52.611234,-1.035321],[52.611295,-1.035416],[52.611356,-1.03551],[52.611417,-1.035605],[52.611477,-1.035696],[52.611539,-1.035792],[52.611597,-1.035888],[52.611654,-1.035984],[52.611712,-1.03608],[52.611769,-1.036177],[52.611823,-1.036276],[52.611873,-1.036379],[52.611926,-1.036483],[52.611974,-1.036589],[52.612016,-1.036697],[52.612058,-1.03681],[52.612097,-1.036925],[52.612132,-1.037043],[52.612167,-1.037166],[52.612195,-1.037291],[52.612218,-1.037415],[52.612239,-1.037551],[52.612255,-1.037683],[52.612268,-1.037813],[52.612276,-1.037945],[52.612281,-1.038077],[52.612282,-1.038208],[52.612282,-1.038338],[52.612279,-1.038469],[52.61227,-1.038594],[52.612258,-1.038728],[52.612246,-1.03886],[52.612232,-1.03899],[52.612217,-1.039121],[52.612201,-1.039251],[52.612183,-1.039377],[52.612167,-1.039507],[52.612152,-1.039634],[52.61214,-1.039761],[52.612125,-1.039889],[52.61211,-1.040017],[52.612101,-1.040141],[52.612093,-1.040267],[52.612085,-1.040392],[52.612078,-1.040519],[52.61207,-1.040644],[52.612068,-1.040764],[52.612068,-1.040888],[52.612071,-1.041003],[52.612072,-1.041116],[52.612075,-1.041231],[52.612079,-1.041344],[52.612088,-1.041462],[52.6121,-1.041582],[52.612114,-1.041703],[52.612129,-1.041822],[52.61215,-1.041942],[52.612173,-1.042067],[52.612196,-1.0422],[52.612224,-1.042333],[52.612252,-1.042465],[52.612279,-1.042598],[52.612306,-1.042731],[52.612332,-1.042868],[52.612362,-1.043009],[52.612392,-1.043148],[52.61242,-1.04329],[52.612447,-1.043429],[52.612474,-1.04357],[52.612502,-1.043709],[52.612536,-1.043863],[52.61257,-1.04401],[52.612607,-1.044162],[52.612643,-1.044303],[52.612672,-1.044443],[52.612693,-1.044581],[52.612718,-1.044727],[52.61277,-1.044899],[52.61283,-1.045079],[52.61289,-1.04526],[52.61291,-1.04538],[52.612951,-1.0455],[52.613008,-1.045631],[52.613042,-1.04578],[52.613077,-1.045926],[52.613104,-1.04608],[52.613133,-1.046232],[52.61316,-1.046388],[52.613187,-1.04654],[52.613211,-1.046695],[52.613228,-1.046851],[52.613246,-1.047003],[52.613265,-1.047155],[52.613284,-1.047299],[52.613306,-1.047447],[52.613326,-1.047597],[52.613345,-1.047752],[52.613364,-1.047908],[52.613383,-1.048063],[52.6134,-1.048225],[52.613415,-1.048385],[52.61343,-1.048546],[52.613445,-1.048706],[52.613455,-1.048867],[52.613465,-1.049031],[52.613474,-1.049193],[52.613484,-1.049361],[52.61349,-1.049527],[52.613491,-1.049694],[52.613482,-1.049856],[52.613465,-1.05001],[52.613446,-1.050159],[52.613424,-1.050307],[52.613401,-1.050451],[52.613378,-1.050589],[52.613356,-1.050725],[52.613333,-1.050857],[52.613313,-1.050983],[52.613291,-1.051106],[52.613268,-1.051224],[52.613245,-1.051342],[52.613222,-1.051456],[52.613199,-1.051566],[52.613173,-1.051679],[52.613153,-1.051793],[52.613131,-1.051908],[52.613113,-1.052023],[52.613095,-1.052137],[52.613079,-1.052257],[52.613064,-1.052376],[52.613051,-1.052506],[52.61304,-1.05263],[52.613031,-1.052755],[52.613024,-1.052879],[52.613022,-1.053],[52.613022,-1.053121],[52.613019,-1.053238],[52.613013,-1.053354],[52.613005,-1.053473],[52.612997,-1.053592],[52.612984,-1.053712],[52.612971,-1.053831],[52.612957,-1.053951],[52.612936,-1.054069],[52.612916,-1.054188],[52.612894,-1.054297],[52.612877,-1.0544],[52.612858,-1.054491],[52.612839,-1.054569],[52.612832,-1.054637],[52.61284,-1.054701],[52.612862,-1.054755],[52.612901,-1.054804],[52.612948,-1.054839],[52.612998,-1.05487],[52.613056,-1.054898],[52.613118,-1.054925],[52.613183,-1.054952],[52.613245,-1.054982],[52.613309,-1.055013],[52.613373,-1.055046],[52.613438,-1.055083],[52.613506,-1.055119],[52.613569,-1.055151],[52.613633,-1.05518],[52.613692,-1.055204],[52.613752,-1.055225],[52.613809,-1.055245],[52.613867,-1.055262],[52.613927,-1.055282],[52.61398,-1.055314],[52.614026,-1.055364],[52.614063,-1.05544],[52.614092,-1.055534],[52.614112,-1.055637],[52.614134,-1.055743],[52.614157,-1.055851],[52.61418,-1.055955],[52.6142,-1.056062],[52.614222,-1.056169],[52.614245,-1.056271],[52.614268,-1.056371],[52.614294,-1.056473],[52.614323,-1.056572],[52.614356,-1.056668],[52.614391,-1.056761],[52.614434,-1.056854],[52.614486,-1.056945],[52.614545,-1.057032],[52.614612,-1.057108],[52.614687,-1.057175],[52.614766,-1.057237],[52.614848,-1.057294],[52.61493,-1.057354],[52.615008,-1.057422],[52.615081,-1.057511],[52.615135,-1.057624],[52.615179,-1.057755],[52.615209,-1.0579],[52.615224,-1.058064],[52.615236,-1.058239],[52.615244,-1.058415],[52.615255,-1.05859],[52.61526,-1.058773],[52.615264,-1.058956],[52.615277,-1.059138],[52.615298,-1.059317],[52.615327,-1.059496],[52.615357,-1.059667],[52.615393,-1.059838],[52.615435,-1.060008],[52.615474,-1.060176],[52.615512,-1.060346],[52.615553,-1.060515],[52.615595,-1.060682],[52.615639,-1.060845],[52.615682,-1.061009],[52.615731,-1.061171],[52.615777,-1.061329],[52.615823,-1.061484],[52.615868,-1.061631],[52.615914,-1.06178],[52.615957,-1.061921],[52.615999,-1.06206],[52.616044,-1.062202],[52.61609,-1.062344],[52.616138,-1.062481],[52.616185,-1.062621],[52.616231,-1.062759],[52.616277,-1.06289],[52.616319,-1.063024],[52.616364,-1.063154],[52.61641,-1.063281],[52.616456,-1.063406],[52.616499,-1.063529],[52.616547,-1.063654],[52.616593,-1.063778],[52.616638,-1.063897],[52.616685,-1.064022],[52.616728,-1.064142],[52.616772,-1.064267],[52.616823,-1.064388],[52.616878,-1.064515],[52.616928,-1.064641],[52.616972,-1.064764],[52.617014,-1.064884],[52.617062,-1.065002],[52.617113,-1.06512],[52.617168,-1.065249],[52.617218,-1.065375],[52.617271,-1.065495],[52.617321,-1.065614],[52.617371,-1.065735],[52.61742,-1.065861],[52.617467,-1.065986],[52.617513,-1.066109],[52.617553,-1.066235],[52.617585,-1.066361],[52.617621,-1.066487],[52.617659,-1.066609],[52.617695,-1.066728],[52.617735,-1.066839],[52.61777,-1.066943],[52.617804,-1.067049],[52.617836,-1.067157],[52.617867,-1.067263],[52.617898,-1.067367],[52.617925,-1.067474],[52.617955,-1.067581],[52.617988,-1.067692],[52.61802,-1.067805],[52.61805,-1.067925],[52.618084,-1.068046],[52.618114,-1.068165],[52.618148,-1.068293],[52.61818,-1.068421],[52.618216,-1.068555],[52.618255,-1.068692],[52.618287,-1.068841],[52.61832,-1.069],[52.618352,-1.069165],[52.618385,-1.069331],[52.618425,-1.069493],[52.618467,-1.069646],[52.618507,-1.069789],[52.61855,-1.069919],[52.618592,-1.070033],[52.618634,-1.070149],[52.618674,-1.070266],[52.618715,-1.070376],[52.618757,-1.070482],[52.618793,-1.070586],[52.61883,-1.070687],[52.618863,-1.070781],[52.61889,-1.070875],[52.618917,-1.070972],[52.618944,-1.071071],[52.618964,-1.07117],[52.618981,-1.071275],[52.61899,-1.071381],[52.618992,-1.071489],[52.618986,-1.07159],[52.618981,-1.071691],[52.618977,-1.07179],[52.618977,-1.071888],[52.618974,-1.071989],[52.61897,-1.072092],[52.618966,-1.072196],[52.618962,-1.0723],[52.618955,-1.072402],[52.618951,-1.072504],[52.618947,-1.072603],[52.618946,-1.072704],[52.618946,-1.072808],[52.618943,-1.072914],[52.618939,-1.07302],[52.618933,-1.073124],[52.618934,-1.073226],[52.618938,-1.073323],[52.618941,-1.073416],[52.618945,-1.073502],[52.618949,-1.073577],[52.618953,-1.073642],[52.618957,-1.073691],[52.618952,-1.07373],[52.61895,-1.073772],[52.618959,-1.07382],[52.618976,-1.073869],[52.619007,-1.073909],[52.61905,-1.073939],[52.619102,-1.073953],[52.619158,-1.073954],[52.619215,-1.073944],[52.619272,-1.073922],[52.619327,-1.073887],[52.619383,-1.073844],[52.619437,-1.073796],[52.619491,-1.073748],[52.619547,-1.0737],[52.619604,-1.073658],[52.619659,-1.073616],[52.619712,-1.073577],[52.619766,-1.073545],[52.619816,-1.073519],[52.619866,-1.073501],[52.619915,-1.073503],[52.619958,-1.073533],[52.619998,-1.073576],[52.620038,-1.073625],[52.620074,-1.073682],[52.620106,-1.073749],[52.620137,-1.073822],[52.62017,-1.073898],[52.620204,-1.073978],[52.620239,-1.07406],[52.62027,-1.074147],[52.620304,-1.074241],[52.620341,-1.07433],[52.620385,-1.074418],[52.620431,-1.0745],[52.62048,-1.074566],[52.620526,-1.074611],[52.62059,-1.074625],[52.620661,-1.074624],[52.62073,-1.074622],[52.620796,-1.074634],[52.620853,-1.074669],[52.620897,-1.074724],[52.620936,-1.074786],[52.620975,-1.074847],[52.621004,-1.074912],[52.621021,-1.074983],[52.621025,-1.075062],[52.621022,-1.07515],[52.621012,-1.075247],[52.621007,-1.075351],[52.621006,-1.075459],[52.621009,-1.075571],[52.62101,-1.075686],[52.621016,-1.075803],[52.621023,-1.075923],[52.621028,-1.076041],[52.621041,-1.076158],[52.621053,-1.076277],[52.621061,-1.076397],[52.621066,-1.076515],[52.621064,-1.076636],[52.621057,-1.076752],[52.621044,-1.076864],[52.621023,-1.076977],[52.621003,-1.077094],[52.620984,-1.077208],[52.620959,-1.077324],[52.620935,-1.07744],[52.620909,-1.077553],[52.620882,-1.07767],[52.620859,-1.077782],[52.620839,-1.0779],[52.62082,-1.078017],[52.620804,-1.07813],[52.620791,-1.078245],[52.620783,-1.078356],[52.620772,-1.078471],[52.620764,-1.078592],[52.620759,-1.078716],[52.620755,-1.078844],[52.620751,-1.078977],[52.62075,-1.079115],[52.620747,-1.079257],[52.620747,-1.079398],[52.620747,-1.079541],[52.620747,-1.07969],[52.62075,-1.079841],[52.620753,-1.079997],[52.620754,-1.080155],[52.62076,-1.080314],[52.620768,-1.080466],[52.620775,-1.080612],[52.620783,-1.080758],[52.620791,-1.080907],[52.620792,-1.081051],[52.620795,-1.08119],[52.620799,-1.081337],[52.620809,-1.081479],[52.62082,-1.081625],[52.620829,-1.081768],[52.620839,-1.081907],[52.620854,-1.082047],[52.620869,-1.082183],[52.620887,-1.082318],[52.620909,-1.082454],[52.620935,-1.08259],[52.620959,-1.082725],[52.620984,-1.082861],[52.621005,-1.083],[52.62103,-1.08314],[52.621054,-1.083282],[52.621077,-1.083415],[52.6211,-1.083552],[52.621117,-1.083687],[52.621135,-1.083816],[52.621154,-1.083941],[52.621176,-1.084069],[52.621202,-1.084203],[52.621229,-1.084339],[52.621252,-1.084473],[52.621272,-1.084609],[52.621297,-1.084744],[52.621321,-1.084879],[52.621344,-1.085018],[52.621364,-1.085159],[52.62138,-1.085301],[52.621395,-1.085445],[52.621408,-1.08559],[52.621419,-1.085727],[52.621425,-1.085858],[52.621429,-1.085983],[52.621429,-1.086109],[52.621424,-1.086243],[52.621419,-1.086379],[52.621409,-1.086514],[52.621401,-1.08665],[52.621393,-1.086786],[52.621383,-1.086919],[52.621374,-1.087057],[52.621366,-1.087192],[52.621356,-1.087326],[52.621344,-1.087456],[52.621333,-1.087587],[52.621324,-1.087718],[52.62132,-1.087852],[52.621316,-1.087986],[52.621315,-1.088122],[52.621318,-1.088258],[52.621322,-1.088391],[52.621331,-1.088525],[52.62134,-1.088658],[52.621351,-1.08879],[52.621362,-1.088916],[52.621376,-1.08905],[52.621389,-1.089184],[52.6214,-1.089319],[52.621409,-1.089454],[52.621413,-1.089588],[52.62142,-1.089718],[52.621422,-1.089847],[52.621428,-1.089972],[52.621432,-1.090092],[52.621424,-1.090201],[52.621401,-1.0903],[52.621355,-1.090378],[52.621292,-1.090428],[52.621222,-1.090469],[52.621149,-1.090517],[52.621073,-1.090572],[52.620997,-1.090629],[52.620915,-1.090681],[52.620831,-1.090733],[52.620741,-1.09079],[52.620646,-1.090841],[52.620551,-1.090893],[52.620456,-1.090951],[52.620356,-1.091013],[52.620261,-1.091064],[52.620165,-1.091119],[52.620061,-1.091187],[52.61996,-1.091254],[52.619855,-1.091307],[52.619747,-1.091364],[52.619637,-1.091421],[52.619524,-1.091481],[52.619417,-1.091542],[52.619307,-1.091611],[52.619197,-1.091669],[52.619092,-1.091731],[52.618983,-1.091791],[52.618875,-1.091849],[52.618775,-1.091904],[52.618669,-1.091957],[52.618562,-1.092004],[52.61845,-1.092047],[52.618341,-1.092086],[52.618231,-1.092135],[52.618125,-1.092199],[52.618018,-1.092256],[52.617907,-1.092309],[52.617796,-1.092362],[52.617683,-1.092417],[52.617575,-1.092468],[52.61747,-1.09252],[52.617364,-1.092574],[52.617257,-1.092627],[52.617155,-1.092671],[52.617051,-1.092715],[52.616956,-1.092747],[52.616872,-1.09276],[52.616787,-1.09276],[52.616704,-1.092752],[52.616624,-1.092735],[52.616544,-1.092711],[52.616463,-1.092696],[52.616385,-1.092704],[52.616315,-1.092742],[52.616255,-1.092811],[52.616207,-1.092902],[52.616172,-1.093012],[52.616157,-1.093132],[52.616157,-1.093263],[52.616169,-1.093394],[52.616193,-1.093522],[52.616223,-1.093651],[52.61625,-1.093779],[52.61628,-1.093911],[52.616305,-1.094041],[52.616322,-1.094173],[52.616334,-1.0943],[52.616343,-1.094431],[52.616347,-1.094558],[52.616348,-1.094684],[52.616345,-1.094812],[52.616344,-1.094942],[52.616344,-1.095069],[52.616344,-1.095197],[52.616344,-1.095323],[52.616344,-1.095447],[52.616344,-1.095567],[52.616344,-1.095685],[52.616347,-1.095804],[52.616351,-1.095922],[52.616355,-1.096042],[52.616359,-1.096158],[52.616363,-1.096274],[52.616364,-1.096392],[52.616366,-1.09651],[52.61637,-1.09663],[52.616374,-1.096749],[52.616375,-1.096863],[52.616369,-1.096978],[52.616364,-1.097087],[52.616358,-1.097195],[52.61635,-1.097303],[52.616345,-1.097409],[52.616339,-1.097517],[52.616337,-1.097626],[52.616328,-1.097735],[52.616322,-1.097847],[52.616313,-1.097957],[52.616304,-1.098064],[52.616294,-1.09817],[52.616282,-1.098279],[52.616271,-1.098387],[52.616259,-1.098496],[52.616245,-1.098606],[52.61623,-1.09872],[52.616217,-1.098836],[52.616206,-1.098955],[52.616197,-1.099076],[52.616184,-1.099199],[52.616169,-1.099319],[52.616153,-1.099442],[52.616138,-1.099561],[52.616126,-1.099688],[52.616117,-1.099813],[52.616107,-1.099938],[52.616089,-1.100059],[52.616073,-1.100178],[52.616055,-1.100297],[52.616036,-1.100416],[52.616014,-1.100532],[52.615985,-1.100644],[52.615949,-1.100752],[52.615908,-1.100857],[52.615869,-1.100961],[52.615825,-1.101063],[52.615782,-1.101163],[52.61574,-1.101258],[52.615701,-1.101349],[52.615663,-1.101437],[52.615622,-1.10152],[52.615579,-1.101598],[52.615535,-1.10167],[52.615489,-1.101735],[52.615437,-1.1018],[52.615387,-1.101861],[52.615337,-1.101916],[52.615288,-1.101972],[52.615235,-1.102031],[52.615183,-1.102091],[52.615132,-1.102154],[52.615079,-1.102216],[52.615025,-1.102276],[52.614975,-1.102334],[52.614928,-1.10239],[52.614879,-1.102447],[52.61483,-1.102504],[52.614783,-1.102559],[52.614737,-1.102614],[52.614692,-1.102672],[52.614652,-1.102727],[52.614614,-1.102779],[52.614582,-1.102835],[52.614554,-1.102896],[52.614533,-1.102961],[52.614517,-1.103031],[52.614496,-1.103099],[52.614479,-1.103167],[52.614463,-1.103231],[52.614445,-1.103293],[52.614429,-1.103352],[52.614414,-1.103407],[52.614399,-1.10346],[52.614389,-1.103503],[52.614385,-1.103537],[52.614381,-1.103567],[52.614377,-1.103593],[52.61437,-1.103617],[52.614366,-1.103639],[52.614365,-1.103654],[52.614362,-1.103661],[52.614361,-1.103663],[52.614349,-1.103693],[52.614343,-1.103725],[52.614336,-1.103762],[52.614325,-1.103812],[52.614314,-1.103875],[52.614299,-1.103947],[52.614281,-1.104023],[52.614259,-1.104107],[52.614236,-1.1042],[52.614213,-1.104296],[52.614194,-1.104397],[52.614175,-1.104501],[52.614164,-1.104611],[52.614157,-1.104726],[52.614152,-1.10484],[52.614145,-1.104958],[52.614138,-1.105076],[52.614124,-1.105196],[52.614109,-1.10532],[52.614091,-1.105443],[52.614069,-1.105566],[52.614043,-1.10569],[52.614016,-1.105819],[52.613989,-1.105948],[52.61396,-1.106078],[52.613932,-1.106211],[52.613905,-1.106348],[52.613876,-1.106482],[52.613845,-1.10662],[52.613815,-1.106757],[52.613778,-1.106892],[52.61374,-1.107026],[52.613699,-1.107178],[52.613661,-1.107318],[52.613616,-1.107466],[52.613571,-1.107606],[52.613524,-1.10775],[52.613482,-1.10789],[52.61344,-1.108034],[52.613395,-1.108169],[52.613343,-1.108299],[52.613281,-1.108426],[52.613213,-1.108554],[52.613147,-1.108673],[52.613079,-1.108785],[52.613005,-1.108894],[52.612931,-1.109007],[52.612858,-1.10911],[52.612777,-1.109221],[52.612697,-1.109336],[52.612625,-1.109443],[52.612551,-1.109561],[52.612482,-1.109683],[52.612412,-1.109803],[52.61234,-1.109911],[52.612271,-1.110022],[52.612193,-1.110133],[52.612119,-1.110242],[52.612046,-1.110353],[52.611977,-1.110469],[52.611908,-1.110576],[52.611849,-1.110686],[52.611795,-1.1108],[52.611747,-1.110934],[52.611701,-1.11108],[52.611661,-1.111219],[52.611623,-1.111366],[52.611588,-1.111504],[52.611551,-1.111647],[52.611512,-1.111785],[52.611471,-1.11192],[52.611423,-1.112048],[52.611377,-1.112171],[52.611334,-1.11229],[52.611298,-1.112397],[52.611266,-1.112494],[52.611242,-1.112582],[52.611223,-1.112668],[52.611206,-1.112765],[52.611196,-1.11287],[52.611192,-1.112982],[52.611188,-1.113099],[52.611184,-1.113214],[52.611177,-1.113331],[52.611167,-1.113446],[52.611152,-1.113554],[52.61114,-1.113661],[52.611129,-1.113769],[52.611111,-1.113885],[52.611089,-1.113999],[52.611069,-1.114112],[52.61105,-1.114225],[52.611031,-1.114336],[52.611009,-1.11445],[52.610992,-1.114567],[52.61098,-1.114683],[52.610971,-1.114804],[52.610964,-1.114927],[52.610956,-1.115049],[52.610951,-1.115173],[52.610948,-1.115294],[52.610947,-1.115407],[52.610947,-1.11551],[52.61095,-1.115603],[52.610948,-1.11569],[52.610947,-1.115779],[52.61095,-1.115874],[52.610956,-1.115979],[52.610964,-1.116096],[52.610966,-1.116216],[52.610966,-1.116342],[52.610963,-1.116471],[52.610959,-1.1166],[52.610961,-1.116732],[52.610962,-1.116863],[52.610965,-1.116994],[52.610969,-1.117129],[52.610973,-1.117263],[52.610973,-1.117396],[52.610973,-1.11753],[52.610976,-1.117664],[52.610977,-1.117798],[52.61098,-1.117931],[52.610984,-1.118065],[52.610988,-1.118201],[52.610989,-1.118336],[52.610989,-1.118467],[52.610986,-1.118592],[52.610982,-1.118714],[52.610981,-1.118833],[52.610978,-1.118948],[52.610974,-1.119061],[52.610973,-1.119164],[52.610971,-1.119251],[52.61097,-1.119321],[52.610967,-1.119378],[52.61096,-1.119439],[52.610958,-1.11951],[52.610961,-1.119591],[52.610965,-1.119681],[52.610969,-1.11978],[52.61097,-1.119887],[52.610972,-1.119997],[52.610976,-1.120108],[52.610977,-1.120218],[52.61098,-1.120331],[52.610981,-1.120446],[52.610981,-1.120565],[52.610984,-1.120687],[52.610985,-1.120812],[52.610985,-1.120939],[52.610985,-1.121067],[52.610985,-1.121196],[52.610988,-1.121328],[52.610995,-1.121458],[52.610999,-1.12159],[52.610997,-1.121721],[52.610996,-1.121857],[52.610999,-1.121991],[52.611003,-1.122125],[52.61101,-1.122262],[52.61102,-1.122398],[52.611032,-1.122529],[52.611046,-1.122652],[52.611055,-1.12277],[52.611063,-1.122887],[52.611068,-1.122989],[52.611069,-1.123073],[52.611075,-1.123139],[52.611079,-1.123183],[52.611083,-1.12321],[52.611081,-1.123232],[52.61108,-1.123253],[52.611083,-1.123281],[52.611093,-1.123319],[52.61111,-1.123368],[52.611132,-1.123435],[52.611149,-1.12352],[52.611159,-1.123617],[52.611166,-1.123718],[52.611171,-1.123815],[52.611175,-1.123892],[52.611178,-1.123944],[52.611179,-1.123983],[52.611179,-1.124014],[52.611182,-1.124039],[52.611186,-1.124062],[52.61119,-1.124089],[52.611197,-1.124127],[52.611201,-1.124174],[52.611211,-1.124227],[52.611223,-1.124288],[52.611231,-1.124352],[52.611236,-1.124419],[52.611239,-1.124494],[52.611243,-1.12457],[52.611244,-1.124648],[52.611244,-1.124729],[52.61125,-1.124815],[52.611258,-1.124907],[52.611262,-1.125008],[52.611272,-1.125103],[52.611281,-1.125192],[52.611288,-1.125273],[52.611296,-1.125342],[52.611312,-1.125395],[52.611328,-1.12545],[52.611341,-1.125516],[52.611352,-1.12559],[52.611364,-1.125672],[52.611372,-1.125748],[52.61138,-1.125806],[52.611379,-1.125841],[52.611378,-1.125853],[52.611375,-1.125858]],"series_type":"distance","original_size":7347,"resolution":"high"},"velocity_smooth":{"data":[0,2,2.4,2.7,3,3.2,3.6,3.6,4,4.3,4.5,4.5,4.8,4.8,5,5.2,5.6,5.6,5.9,5.9,5.9,6,6.2,6,5.9,6.3,5.9,5.9,5.8,5.9,5,5,4.8,4.6,4.2,3.7,3.5,3.4,3.5,3.2,3.7,4,4.2,4.3,4.6,4.7,4.9,5.1,5,5.4,5.4,5.1,4.9,5,4.7,4.8,5,4.6,4.9,5.2,5.2,5.1,5.8,5.8,5.6,5.8,5.8,5.8,5.8,5.8,6,6.2,6.2,6.4,6.4,6.3,6.2,6.2,6,6,6.1,5.9,5.8,6,5.8,5.4,5.2,4.9,4.5,4.4,4.4,4.8,5,5.2,5.6,6.1,5.9,6.1,6.2,6.1,6.1,6.2,5.9,6.2,6.1,6.2,6.2,6.5,6.4,6.6,6.5,6.5,6.5,6.5,6.9,7,7,6.8,6.7,6.4,6.3,6.4,6.8,6.6,6.6,6.3,6,5.6,5.6,5.2,4.6,4.3,4.1,3.6,3.8,4.4,4.7,4.7,5.4,5.5,5.9,6.1,6.5,6.4,6.6,6.2,6,6,6,5.6,6,6.4,6,6.4,6.8,6.4,6.1,6.4,6,6,6.5,6.6,6.7,6.7,6.5,5.8,5.6,5.6,5.3,5.5,5.5,5.9,5.9,6.3,6.3,6.5,6.5,6.4,6.5,6.7,6.8,6.7,7.2,7,7,7.4,7.2,7.2,7.2,7.3,7,7.1,6.7,7.1,6.9,6.8,7.1,7.6,7.2,7.3,7.5,7.6,7.1,7.5,7.3,7.6,7.6,7.5,7.6,8,8,8,8.4,8,8,8,7.7,8.1,8.2,8,8,7.9,7.6,7.4,7.2,7.6,7.6,7.3,7.6,7.5,6.7,7,7,6.8,6.7,7.2,7.3,7.1,7.3,7.6,7.1,6.9,7.2,7.3,6.7,7.5,7.5,7.2,6.8,7.1,6.7,7.1,6.9,7,7.1,6.7,6,6.3,6,6,6.1,6.1,5.5,5.4,4.9,4.4,3.9,3,2.1,0,0.3,1.1,1.3,1.4,3,3.9,4,4.7,5.5,6.4,6.6,7.1,7.6,7.6,7.6,7.9,7.5,8,8,8,8.4,8.8,8.4,9.2,9.3,9.2,9.2,9.6,9.6,10.4,10.4,10.9,10.9,11.2,10.5,10.9,11.2,10.9,11.4,11.7,11.8,11.8,12.5,12.2,12.2,11.7,11.8,11.8,11.8,12.1,12.2,12.1,11.8,11.7,11.5,11.5,11.5,11.6,11.1,11,11.1,10.7,10.5,10.7,10.2,10.4,10.4,10.1,10,10,9.3,9.7,9.6,9.3,9.6,9.6,8.8,8.8,8.8,8.4,8.8,8.9,9.2,9.1,9.2,8.8,8.7,8.5,8.5,8.4,8.4,8.4,8.4,8.4,8.4,8.4,8.4,8.4,8.4,8.4,8.4,8.4,8.3,8.4,8.1,7.9,8,8.2,8.4,8.6,8.8,8.8,8.6,7.9,7.9,7.6,8.3,8.1,8.4,8.4,8.3,7.6,7.7,7.9,7.5,7.9,7.5,7.2,7.1,7.1,6.9,7.1,7.1,6.7,7.1,6.9,6.9,6.9,6.8,6.8,6.7,7,7,7.1,6.8,6.7,6.3,6.7,6.6,6.5,6.4,6.2,6.1,5.9,5.8,5.5,5.2,4.6,4.8,4.5,4.4,4.1,4.1,3.5,3.2,3,3.2,2.6,2.8,2.9,3,2.7,3,2.9,3.4,3.9,4,4.6,4.6,4.8,5,5.3,5.5,5.8,5.9,5.9,6.1,6.1,6.3,6.4,6.4,6.7,6.7,7.1,7,7.3,7.1,7.5,7.1,7.2,7.2,7.1,7,6.7,7,6.7,7.1,6.8,7.5,7.1,7,7.1,7.1,6.7,6.8,6.9,6.7,6.8,7,6.9,7,6.8,6.9,6.8,6.8,7.1,7,7,7.5,7.4,7.3,7.5,7.3,6.9,7.1,6.8,6.7,7.3,6.9,7.1,7.1,7.3,6.9,7.1,6.7,6.8,6.9,6.7,7,7,6.9,7,7.1,7.2,7.5,7.5,6.9,7.4,7.1,6.8,7.1,7.4,6.8,7.1,7.1,7.1,7.1,7.5,7.2,7.6,7.5,7.5,7.5,7.8,7.5,7.5,7.9,7.9,7.9,7.9,7.9,7.9,7.5,7.5,7.7,7.5,7.4,7.5,7.3,7.3,7.1,7.3,7.1,7.3,7.1,7.5,7.3,7.5,7.1,7.5,7.5,7.7,8,8.3,8.3,7.9,7.9,7.9,7.7,7.5,7.9,7.9,7.5,7.7,7.9,7.9,7.9,8.3,8.2,7.9,8,7.9,7.7,7.6,7.9,7.9,7.2,7.7,7.9,7.9,7.9,8.3,7.9,8,7.6,8,8.4,8,7.9,7.9,7.3,7.1,7.4,7.1,7.1,7.3,7.1,7.3,7.5,7.7,7.5,7.5,7.1,6.7,6.2,5.9,5.8,5.6,5.1,4.7,4.2,3.4,0.5,0.2,0.2,0.3,0.6,1.6,2.7,3.8,4.6,5.5,6.2,6.4,6.9,7.1,7.3,7.1,7.5,7.1,7.6,7.5,7.7,7.6,7.5,7.5,7.1,7.3,7.1,7.5,7.2,7.5,7.5,7.5,7.5,7.6,7.9,7.7,7.9,8,7.8,7.5,7.3,7.5,7.1,7.5,7.5,7.5,7.5,7.2,7.5,7.2,7.5,7.9,8.2,7.9,7.9,7.9,7.7,7.6,7.5,8,7.5,7.7,7.9,7.6,7.5,8.3,7.8,7.9,8.3,7.9,7.5,7.5,7.5,7.3,7.5,7.5,7.9,7.9,7.9,7.9,7.8,7.5,7.4,7.5,7.5,7.6,7.6,7.7,7.8,7.5,7.5,7.9,7.5,7.7,8.3,8.3,7.9,8.3,8.4,7.9,7.5,8,8,7.9,7.9,8.3,7.9,7.9,7.9,7.9,8,8.3,8.3,8.4,8.4,8.4,8.3,8.8,8.8,8.8,9.1,9.2,8.8,8.7,8.7,8.3,8.4,8.2,8.4,8.4,8.8,8.8,8.9,8.8,8.8,8.3,8.3,8.4,8.3,8.7,8.8,8.8,9.2,9.2,9.2,9.2,9.2,9.6,9.6,9.2,9.5,9.6,9.1,9.1,9.6,9.3,9.7,9.6,9.6,9.9,10,9.5,9.2,9.5,8.1,7.6,7,6.3,5.5,5.6,5.3,5.2,4.7,4.1,3.3,2.6,2,2.4,2.7,3.4,4.7,5.7,6.3,7.1,7.8,8.3,8.7,9.2,9.4,9.9,9.6,10,10.1,10.2,10.1,10.4,10.8,10.7,10.7,11.2,10.8,10.8,10.9,11.4,10.9,11.6,11.2,11.7,11.3,12.1,12.1,11.4,12.1,12.4,11.7,11.6,12.7,11.6,11.7,11.3,11.3,11.3,11.3,10.9,11.9,11.6,10.8,11.2,11.2,10.5,10.5,10.8,10.1,9.6,9.3,9.4,8.7,8.7,9.1,8.7,8.2,8.3,8,7.6,7.5,7.5,7.6,7.5,7.9,8,7.9,7.4,7.9,7.1,7.5,7.1,7.7,7.6,7.5,7.5,7.5,7.3,7.1,7.3,7.1,7.1,7.1,7.1,6.9,7.5,7.5,7.4,7.2,7.5,6.8,7,7.1,7,7.1,7.1,6.8,6.9,7.1,6.7,6.9,7.1,7.3,7.1,7.1,6.9,6.3,6.2,5.9,5.5,5.2,5.1,4.2,4,3.6,3.2,3.5,3.3,3.6,4.3,4.5,4.8,5.5,5.9,6.4,6.8,7.2,7.5,7.9,7.9,8.3,8.4,8.8,8.8,8.7,8.8,9.2,8.5,8.8,9.2,9.2,8.8,9.9,9.6,8.8,8.6,8,7.1,6.7,6.5,5.9,6.2,5.9,6.3,7.1,7.6,8.3,9.2,9.2,9,10.4,10.5,10.5,10.9,11.1,10.1,10.4,10.5,10.3,10.4,10.7,10,9.9,10.4,10.1,10,10.4,10.4,9.9,9.8,10,10.4,10.3,10.5,10.8,10.8,10.4,10.4,10.5,10.8,10.8,11,11.2,11.1,11.2,11.6,11.4,11.3,11.6,10.8,10,10,10,9.2,8.8,8.8,8.8,7.9,8.1,8.2,7.9,7.5,7.5,7.5,7.6,7.7,7.5,7.5,7.5,7.1,6.9,7.1,7.1,7,7.1,7.1,7.1,7.1,6.9,7,7.1,6.7,6.7,7.3,7.2,7.1,7.1,7.4,6.8,6.7,6.8,7,6.8,6.7,7.1,7,6.8,7,7.1,6.7,7.1,7.5,7.2,7.2,7.4,7.1,6.7,6.8,6.6,6.7,6.3,6.7,6.6,6.9,6.4,6.6,6.3,6.3,6,6.2,6.3,6.7,6.4,6.4,6.5,6.4,6.2,6.3,6.3,6.5,6.5,6.3,6.6,6.5,6.4,6.3,6.2,6.3,6.3,6.3,5.9,6.3,6.6,6.7,7.1,7.9,7.9,7.9,8.3,7.9,7.7,7.9,7.9,7.9,8.3,8.2,8.1,8,7.9,7.5,7.7,7.4,7.1,6.8,7.5,7.7,7.9,8.3,8.7,8,8.6,8.5,8.7,9.2,9.6,8.9,9,9.6,9.6,9.6,9.6,10,8.8,8.4,8,7.6,7.4,7.5,7.5,7.9,8.3,8,8.6,8.3,8.3,8.2,7.9,7.6,7.7,7.5,7.3,7.5,7.1,7.6,7.5,7.5,7.5,7.3,7.3,7.2,7.5,7.1,7.6,7.1,7.1,7.4,7.1,7.5,7.6,7.8,7.2,7.5,7.2,7.1,7.2,6.9,7.1,6.7,6.9,6.3,6.4,6.3,6.4,6.4,6.6,6.7,6.7,6.6,6.3,6,6.2,5.9,5.9,5.5,5.7,5.4,5.7,5.4,5.6,5.4,5.4,5.1,5,5.2,5.4,5.8,6.4,6.7,7.1,7.5,7.8,7.5,7.9,8.4,8.4,8.7,9.2,9.5,9.2,9.6,9.2,10,9.7,9.6,9.2,9.6,8.8,8.4,8.8,8.8,7.9,7.7,7.9,7.5,7.5,7.9,7.7,7.7,7.5,7.2,7.1,7.1,7.1,7,7,6.7,7.1,7.3,7.5,7.5,7.8,7.5,7.2,7.2,7.1,7.1,7.1,7.5,6.7,7.5,7.2,7.9,7.5,8.3,7.9,7.9,7.5,7.5,7.5,7.5,7.5,7.5,7.9,7.5,7.6,7.9,7.9,7.9,7.9,7.9,7.9,8,7.6,8.3,8.8,8.7,8.8,9.1,8.7,8.3,8.4,8.3,8.3,8.4,9.2,9.2,9.2,9.2,9.5,8.8,9.2,9.2,9.6,9.2,9.6,9.2,10,9.6,9.6,9.4,9.6,8.8,9.2,9.6,9.3,9.6,9.4,9.2,9.2,9.2,9,9.4,9.2,9.6,9.6,9.4,9.6,9.6,8.9,9.2,9.2,9.2,9.2,9,9.6,10,9.6,10,10,9.6,9.2,9.6,9.5,9.6,9.6,10,10,10.1,10.4,10.4,10.6,10.5,10.8,10.8,11.2,11,10.9,10.7,10.6,10.2,10.4,10.7,10.5,10.3,10.5,10,10,10,10.2,10.1,10,10,10,9.6,9.6,10.4,10.3,10.1,10.4,10.4,10,9.9,10.4,10.2,10,10,10.3,10,9.8,9.6,9.6,9.2,8.8,9.2,9.2,8.4,8.3,8.6,7.9,7.5,7.7,7.5,6.9,7.2,7.1,7.3,7.1,7.4,7.1,7.1,7.1,7.1,6.9,7.1,7.2,7,7.3,7,7.2,7,7.1,6.6,7.1,6.6,6.6,6.4,6.6,6.6,6.6,6.7,6.7,6.7,6.3,6.8,7,7.1,7.1,7.1,6.7,6.4,6.6,6.7,6.6,6.7,6.7,6.6,6.7,6.7,6.7,7,6.8,6.7,7.1,7,7.1,7.3,7.5,7.5,7.6,7.5,7.7,7.9,7.6,7.8,7.9,7.9,7.9,8.3,8.3,8.1,8.6,8.7,8.8,8.8,8.9,8.9,8.8,9.2,9.6,9.6,9.2,9.6,9.2,8.8,9.2,9.6,9.2,9.2,9.6,9.2,8.9,8.9,9.2,8.8,9.2,9,9,8.7,9.2,8.7,8.7,9.6,9.6,9.5,9.6,9.9,9.2,9.6,9.7,9.6,9.7,10,10,10,10.4,10.4,10.4,10.4,10.4,10.5,11.2,11.4,11.6,11.4,12,11.4,11.7,11.6,12.5,11.9,12.8,12.7,12.9,12.2,12.6,11,11.2,10.4,10,9.6,9.6,9.2,9.6,9.6,9.2,9.2,9.2,8.8,8.8,8.8,8.4,8.2,7.9,7.7,7.5,7.6,6.9,6.7,6.9,6.7,6.6,6.8,7.1,6.7,7.1,7.1,7.1,7.1,7.1,7.1,7.1,7.3,7.1,7.2,7.1,7.2,7.6,7.5,7.7,7.5,7.8,7.2,7.4,7.4,7.5,7.4,7.8,7.7,7.7,7.9,7.9,7.6,7.5,7.5,7.5,7.7,7.9,8.2,7.9,7.9,7.7,7.5,7.6,7.8,7.9,7.9,7.9,7.8,8.1,7.5,7.8,7.6,7.6,7.5,7.8,7.5,8.1,8,7.5,7.7,7.5,7.2,7.1,7.5,7.3,7.5,7.2,7.5,7.2,7.3,7.5,7.8,7.8,7.8,7.9,8.2,7.9,8,8.3,8.1,7.6,7.9,7.9,7.9,7.7,7.9,7.5,7.6,7.1,7.5,7.5,7.5,7.5,7.5,7.1,7.1,7.1,6.4,7,7.1,6.6,7,7.5,7,7,7.2,6.8,6.7,6.4,6.6,6.7,6.7,6.6,6.5,6.4,6.6,6.7,6.7,6.8,6.7,6.4,6.3,6.3,6.4,6.3,6.3,6.3,6.3,6.2,6.2,6.3,6.3,6.3,6.3,6.4,6.2,6.7,6.7,6.6,6.6,7.1,6.7,7,7.1,7.1,6.7,6.8,6.6,6.6,6.7,6.7,6.7,6.9,6.7,6.7,6.7,6.4,6.4,6.3,6.2,6.6,6.8,6.6,6.6,6.7,6.8,6.7,7.1,7.1,7.1,6.7,6.7,6.5,6.7,6.6,6.7,6.7,6.5,6.3,6.3,6.8,6.8,7,7,7.1,6.5,6.6,6.4,6.4,6.1,6.1,6.1,6.1,5.9,6,6,6.4,6.4,6.6,6.5,6.7,6,6,5.9,6.1,5.9,5.9,6,6,5.8,5.8,5.9,5.6,5.8,6.2,6.2,6,6.2,6,5.6,5.6,5.8,5.6,5.4,5.8,5.9,5.9,5.8,6,5.8,5.6,5.4,5.3,5.8,5.5,5.6,5.7,5.8,5.4,5.5,5.4,5.3,5.5,5.5,5.6,5.6,6,6,5.9,6,6.2,5.6,5.6,5.8,5.6,5.6,6,5.8,5.9,6,5.8,5.8,5.9,5.8,5.8,6,6,6.2,6,6.1,6.3,6.4,6.4,6.6,6.8,7,7.1,7.1,7,6.8,6.2,6.3,6.3,6.3,6.7,6.9,6.7,6.7,7.1,6.7,6.8,6.8,7.1,6.7,7,6.9,7,7.5,7.5,7.2,7.4,7.5,6.9,6.9,7,7.2,7.1,7.3,7.7,7.5,7.5,7.9,7.9,7.9,8.3,8.3,8.3,8.8,8.8,9.2,9.3,9.7,9.8,10.5,10.4,10.9,11.1,11.3,10.8,11.5,11.8,11.5,11.4,11.6,11.3,10.8,10.6,10.4,10.8,10,10,10,10,9.6,9.6,9.6,9.6,9.5,9.2,9.6,9.2,9.6,9.4,9.6,9.6,9.8,9.6,9.9,10.3,10.4,10.5,10.8,10.3,10.1,10,10,10,10.4,10.1,10.4,10.4,10.8,10.8,11.1,10.8,10.8,10.4,10.4,10.2,10.2,10.2,10.3,10.4,10.8,11,11,11,11.2,11.1,10.8,11.2,11.2,10.9,11.6,11.7,11.3,11.6,11.8,11.2,11.2,11.3,10.8,10.3,10.1,9.6,9,8.3,7.5,6.4,5.6,4.6,3.8,3.2,2.9,2.6,2.6,3.1,3.5,3.9,4.8,5.5,5.8,6.3,6.4,6.5,6.7,7.1,7,7.5,7.7,7.9,8,8.7,8.7,8,8.3,8.2,7.9,7.9,8.6,8.3,8.3,8.6,9.2,9.2,9.2,9.1,8.8,8.3,7.9,7.9,7.5,7.7,7.5,7.5,7.3,7.4,6.8,6.6,6.6,6.5,6.3,6.7,6.6,6.6,6.4,6.2,5.9,5.7,5.2,5.8,5.9,5.7,5.7,5.9,5.2,5,4.8,4.9,5,5,5,4.9,4.7,4.5,4.5,4.6,4.7,4.8,5,5,4.9,5,5,5.1,5,5,5.1,5.2,5.1,5.2,5.2,5.2,5.1,5.4,5.7,5.6,5.6,5.4,5.4,5,4.9,5,5.1,4.8,4.8,4.9,4.7,4.8,5,5.3,5.2,5.4,5.6,5.8,5.7,6,5.9,6,6.1,6.4,6.4,7.1,6.9,6.9,7.1,7.1,6.8,7.1,7.2,7.1,7.5,7.8,7.6,7.4,7.2,7.4,6.7,6.8,6.6,6.9,6.4,7.1,6.9,7.1,6.8,6.5,6.1,5.9,5.8,5.8,6,5.8,6,5.8,5.9,5.9,6.1,6.1,6.6,6.4,6.4,6.3,6.2,5.6,5.8,6,6.5,6.8,7.3,7,7.3,6.9,6.9,6.9,7.3,7.1,7.5,7.3,7.5,7.6,7.5,7.5,7.5,7.5,7.5,7.5,7.1,7.9,7.9,7.5,7.9,8.3,7.9,7.9,8.4,8.3,8.3,8.3,8.3,8.7,8.8,8.7,8.9,9.2,9.2,9.6,10,10.2,10.4,10.5,10.8,10.4,10.4,10.8,10.1,9.6,9.1,8.2,6.4,6.4,5.1,4.5,4.3,4.5,3.9,4.6,5,5.1,5.7,6.3,6.1,6,6.7,6.5,6.3,6.9,7.1,6.7,6.5,6.8,6.7,6.8,7.1,7.8,7.5,7.5,7.8,7.5,7,7.4,7.4,7.1,7.1,7.1,7,6.8,6.7,7.2,7.5,7.1,7.5,7.9,7.8,8.3,8.7,9.2,9.2,9.6,9.6,10,10,10.2,10,10,9.7,9.8,9.7,10,9.4,9.4,8.9,8.7,8.3,8.4,8.4,8.1,7.9,7.9,7.5,7.1,7.1,6.8,6.9,6.8,6.7,6.6,6.7,6.2,6.1,6.2,6,6,6.1,6.3,6.3,6,6,5.9,5.8,5.9,6.7,6.7,6.7,6.9,7,6.7,7.3,7.2,7.6,7.9,7.9,7.7,8.2,7.7,7.5,8,7.9,7.5,7.7,7.9,7.9,7.5,7.9,7.9,7.9,7.9,8.3,8.7,8.7,8.7,8.7,9.2,8.7,9.2,8.8,9.6,9.5,10.4,10.1,11,10.5,10.8,10.4,10.7,10.2,10.5,10.6,10.8,10.8,11.4,11.7,11.4,11.2,11.4,11,10.5,10.6,10.4,10.8,10.8,10.8,10.6,10.8,10.2,10.6,10.4,10.8,10.8,10.8,10.3,10.8,10.4,10.2,10,10.5,10.4,10,10.2,10,9.7,9.2,9.2,8.6,7.9,7.4,6.7,5.9,5.8,6.2,6.4,6.8,7.5,7.3,7.5,7.9,8.2,8.3,8.5,8.3,7.9,7.9,7.9,8.2,8.5,8.7,8.7,8.6,8.7,8.5,8.3,8.3,8.1,7.9,8.1,8.3,8.5,8.3,8.3,7.9,7.5,7.5,7.9,7.9,8.2,8.3,8,8.1,8.3,8.1,8,8.3,7.8,7.4,7.3,7.5,7.1,7.8,7.5,7.9,7.5,7.7,7.2,7.7,7.1,7.5,7.5,7.5,7.3,7.5,7.6,7.8,7.9,7.9,7.9,7.6,7.4,7.1,7.4,7.1,7.4,7.1,7.5,7.1,7.7,7.5,7.5,7.5,7.9,7.4,7.5,7.9,7.5,7.5,7.9,7.5,7.5,7.5,7.5,7.5,7.5,7.5,8.3,7.9,7.8,7.9,7.5,6.8,7.1,6.8,7.1,7.1,7.3,7.1,7.1,6.9,7.1,7.2,6.7,7.3,7.3,7.5,7.1,7.9,7.7,7.9,7.9,7.9,7.9,7.5,7.5,7.1,7.5,7.1,7.5,7.4,7.5,7.7,7.9,7.7,7.6,7.5,6.9,6.9,6.9,6.7,7.1,7.5,7.3,7.1,7.1,6.9,6.7,6.4,6.9,7,6.8,6.7,7.4,6.9,6.7,7.1,7.1,7.1,7.5,7.7,7.5,7.3,7.5,7.1,7.3,7.1,7.7,7.1,7.5,7.3,7.5,7.5,7.5,7.9,7.8,7.9,7.7,7.9,7.5,7.5,7.5,7.7,7.5,7.6,7.8,7.5,7.6,7.8,7.9,8,7.9,7.9,8.1,7.5,7.5,7.9,7.5,7.5,7.7,7.5,7.5,7.5,7.5,7.7,7.5,7.5,7.7,7.9,7.6,7.9,7.5,7.8,7.1,7.2,6.9,7.1,6.7,7,7,6.9,6.9,7.5,7.2,7,7.3,7.2,6.7,6.7,6.8,6.5,6.4,6.6,6.7,6.7,6.7,6.6,6.4,6.4,6.3,6.3,6.5,6.6,6.5,6.6,6.9,6.7,6.7,6.7,6.7,6.4,6.6,6.3,6.2,6.5,6.4,6.4,6.2,6.4,6.2,6.2,6.2,6.6,6.4,6.5,6.5,6.4,6.3,6.6,6.3,6.8,6.8,6.7,6.7,6.7,6.3,6.3,6.2,6.2,6.5,6.3,6.4,6.6,6.5,6.4,6.5,6.5,6.7,6.7,6.8,7.2,7.2,7.2,7.4,7.1,7.1,7.4,7.3,7.2,7.4,7.3,7.1,6.9,6.9,7.1,6.8,7.1,7.5,7.3,7.5,7.4,7.5,7.2,7.5,7.5,7.9,7.5,7.8,7.9,7.7,7.6,8.3,8.3,8.3,8.5,8.7,8.3,8,7.9,7.9,7.9,7.7,8.3,8.3,7.9,7.5,7.7,7.1,7.4,7.5,7.5,7.1,7.1,6.8,6.7,7,7.1,7.2,7.1,7.3,7.2,7.5,7.7,7.4,7.7,7.9,7.8,7.6,8.1,7.9,7.9,7.7,7.9,7.9,7.9,7.9,7.9,7.9,7.9,7.9,7.5,7.9,7.9,7.9,8,8.3,7.9,7.9,7.9,7.6,7.5,7.9,7.6,7.9,7.8,7.9,7.9,8.3,7.9,8.5,8.5,8.7,8.7,8.7,8.6,8.2,8.3,8.3,8.4,8.3,8.7,8.3,8.8,8.7,8.5,8.7,8.7,8.3,8.3,8.6,8.3,8.3,8.3,8.3,8.7,8.7,9.1,9.2,9.2,8.7,8.8,8.4,8.4,8.7,9,9.1,9.6,9.9,10,10.1,10.4,10.4,10.6,10.4,10.4,10.4,10,9.4,9.6,9.2,9.2,9.1,9.1,8.7,9.1,8.7,8.8,9.1,9.2,9.2,9.2,9.1,8.5,8.9,8.7,8.7,8.7,9,8.6,8.3,8.3,8.3,8.3,8.3,8.3,7.9,7.5,7.1,6.7,6.7,6.1,6.5,6,5.4,4.3,3.9,3.2,3.2,4,4.7,5.6,6.3,7,6.8,7.3,7.8,7.5,7.6,7.8,7.5,7.5,7.9,7.7,7.6,7.6,7.5,7.1,6.9,7,7,6.7,6.7,6.9,6.7,6.7,6.9,7.1,6.9,6.8,7.1,7,6.9,7.4,7.4,7.1,7.4,7.3,7,7.1,7.5,7.1,7.5,7.2,7.5,7.1,7.5,7.1,7.5,7,7.1,7.1,7.3,7.1,7.2,7.9,7.5,7.3,7.4,7.5,7,7.1,7.5,7.1,7.3,7.2,6.8,6.7,6.7,6.9,7.1,7.4,7.9,7.9,7.9,7.9,7.9,7.5,7.9,7.5,7.5,7.5,7.5,7.5,7.5,7.5,7.2,7.1,6.4,6.7,6.3,6.6,6.6,7,6.7,6.7,6.8,6.8,6.7,6.7,7.1,6.8,7.1,7.5,7.6,7.5,7.7,7.5,7.1,7.3,7.3,7.3,7.2,7.5,7.2,7.3,7.5,7.8,7.5,7.8,7.9,7.8,7.5,7.6,8.3,7.9,8,8.2,8.2,7.5,7.9,7.5,7.7,7.5,8,7.5,7.5,7.2,7.4,6.4,6.4,6.4,6.2,6,6.2,6.1,5.8,5.8,5.7,5.3,5,5.3,5.3,5.2,5.5,5.9,5.7,5.8,5.8,5.8,5.9,6,5.8,6,5.8,5.8,5.6,5.7,5.7,5.8,5.9,5.7,6.2,6,5.9,5.5,5.9,5.5,6,5.9,6.3,6.2,6.2,5.8,6.2,6.1,6.3,6.4,6.2,6,5.9,5.8,6.2,6.4,6.5,6.7,6.7,6.4,6.6,6.7,6.7,6.8,6.9,6.7,6.7,7,7,6.7,7.4,7.5,7.3,7.1,7.5,6.8,7,7,7,6.7,6.9,6.8,6.7,7.1,7.1,7,6.8,7,6.7,6.7,6.9,6.8,6.7,6.7,6.8,6.6,6.8,6.7,6.7,7,6.8,6.7,7.3,7.4,7.2,7.3,7.5,6.8,6.7,6.9,6.9,6.9,6.9,6.7,6.3,6.5,6.4,6.7,6.7,7,6.9,6.5,6.4,6.7,6.2,6.3,6.5,6.2,6.4,6.7,6.7,6.7,6.7,6.7,6.3,6.5,6.7,6.7,6.5,6.7,6.5,6.4,6.7,6.6,6.6,6.6,6.8,6.7,6.7,6.8,7.1,6.9,7.1,7.1,7.2,7.1,7.1,6.7,7.1,7.3,7.1,7.5,7.7,7.5,7.1,7.5,7.1,7.3,7.1,7.2,7.1,7.1,7.1,7.1,7.4,7.1,7.7,7.4,7.9,7.6,7.9,7.7,7.6,7.5,7.8,7.5,7.5,8.2,7.9,7.9,8.3,7.9,7.3,7.9,7.5,7.5,7.6,8.1,7.6,7.9,7.9,8.3,7.8,8.2,8.3,8.3,8.3,8.3,7.9,7.9,7.9,7.8,7.6,7.9,7.5,7.5,7.7,7.5,7.5,7.5,7.3,7.1,7.1,6.7,6.7,7.2,7.1,7.1,7.3,7.3,6.7,6.5,6.7,6.5,6.6,6.7,6.9,6.7,6.6,6.7,6.7,7,7.1,7,6.8,6.8,6.3,6.5,6.4,6.4,6.5,6.6,6.5,6.5,6.6,6.2,6.4,6.4,6.7,6.7,6.8,6.4,6.5,6.3,6.2,5.9,6,6.1,6,6.2,6.7,7,6.8,7.3,7.1,7.1,7.1,7.2,7.1,7.1,7,7.1,7,7.1,6.8,7.5,6.8,7.6,7.2,7.8,6.9,7.7,7.4,7.8,7.7,7.9,7.9,7.5,7.5,7.7,7.5,7.5,7.5,7.5,7.7,8.1,7.9,8.1,7.9,7.7,7.3,7.4,7.7,7.9,7.6,7.9,8,7.5,7.5,7.7,7.6,7.5,7.9,7.5,7.6,7.9,7.5,7.5,7.9,7.7,7.5,7.5,7.3,7.1,6.9,6.7,7.1,7,6.7,7.1,7.1,7.1,7.4,7.5,7.2,7.5,7.1,6.9,7.4,7.4,7.5,7.9,7.7,7.6,7.9,8.3,8.3,8.5,8.3,8.1,7.3,7.3,7.3,7.4,7.3,7.7,7.7,7.9,7.6,7.9,7.9,7.5,7.4,7.5,7.4,7.2,7.5,7.2,7.5,7.6,8.1,7.9,8.1,7.9,7.7,7.3,7.5,7.3,7.5,7.3,7.5,7.6,7.9,7.5,7.9,7.8,7.4,7.5,7.5,7.3,7.2,7.1,7.4,7.5,7.3,7.2,7.5,6.6,6.8,6.9,7,6.7,7.2,7,6.8,6.8,7.4,7.2,7.2,7.2,7.4,6.7,7,7,7,7.1,7.1,7,7.1,7.4,7.1,7.1,7.2,7.1,7.6,7.5,7.7,7.3,7.5,6.7,6.7,6.4,6,6.2,6.4,6.7,6.7,7,6.7,6.4,6.1,6.3,6.7,6.8,7.2,7.2,7.1,7.1,7.4,7.1,7.6,7.5,7.3,7.1,7.1,7.3,7.5,7.3,7.5,7.7,7.1,7.1,7.3,7.1,7.3,7.3,6.8,6.8,6.8,6.4,6.6,6.6,6.6,6.3,6.2,6,6,5.5,5.8,5.8,5.7,5.8,6.1,5.9,6.1,6,6.2,6.4,6.7,6.4,6.7,6.9,7.1,7.1,7.3,7.2,7.1,6.7,6.8,6.9,7,6.8,7.1,7,6.8,6.7,6.8,6.7,6.7,6.9,7,6.8,7.1,7.3,7.7,7.5,7.9,7.9,8.2,7.9,8.2,8.4,8.3,8.3,8.3,8.5,8,8.7,8.8,8.7,8.7,9,8.7,8.7,8.6,9.5,9.6,9.6,10,10.1,10,10.4,10.4,10.8,11.2,10.8,10.8,10.9,10.1,10.7,10.8,10.8,10.7,11.1,10.2,10.2,10,10,10.4,10.3,10.1,10,9.6,8.7,9.6,9.3,9.1,9.2,9.6,8.7,9.2,9.2,9.6,9.6,9.6,9.6,9.7,9.6,9.6,10.1,10,10.3,9.7,10,9.4,9.6,9.2,9.9,9.6,9.6,9.2,9.2,9.1,8.7,8.7,8.9,9.1,8.8,9.2,9.6,9,9.1,9.6,9.6,9.2,9.9,9.6,9.5,9.2,9.6,9.1,9.6,9.6,9.9,9.6,9.6,9.6,9.2,8.8,9.5,9.6,9.9,10.4,10.8,11.3,11.6,11.3,11.6,11.3,10.4,10.8,10.5,10,10.3,10.4,9.8,10.1,10.4,10.4,10.4,10.6,10.6,10,10,9.6,9.6,9.9,10,9.6,9.6,9.5,8.8,8.7,9.2,9.1,9.2,9.1,10,9.6,10,9.6,9.6,9.2,9.1,9.2,9.2,9.6,10,10,9.6,9.8,9.2,8.3,8.4,8.3,8.5,8.7,8.8,8.3,8.8,8.3,7.9,7.9,7.9,7.9,7.5,7.5,7.4,7.5,7.1,7.5,7.2,7.4,7.2,7.4,7.1,7.7,7.3,7.7,7.2,7.4,7.6,7.7,7.6,7.9,8,7.5,8,8.1,7.9,7.9,8.3,8,8.1,8.3,8.1,8.4,8.4,7.9,7.9,7.9,7.1,7,7.1,7.1,6.7,7.1,7,7.1,6.7,7.4,7.5,7.3,6.9,7.1,6.7,6.3,6.3,6.5,6.3,6.3,6.2,6.6,6.7,7,7.1,7.5,7.4,7.5,7.3,7.9,7.5,7.3,7.1,7.3,6.3,6.3,6.3,5.7,5,4.5,3.9,3.2,3.1,2.4,2.1,1.9,1.7,1.7,1.9,1.7,1.4,0.7,0.6,0.9,1.4,1.6,2.2,2.4,2.7,3.3,3.8,4.7,5.6,5.8,6.4,6.6,7.1,7.1,7.5,7.1,7.1,6.5,5.9,6.3,6.3,6.6,6.7,7.3,6.9,7.2,6.9,6.8,6.4,6.5,6,5.6,5.4,5.5,5.5,5.9,6.2,6.6,6.6,6.6,6.4,6.8,6.7,7.1,7.1,7.3,7.1,7.1,7.1,7.1,7.3,7.1,7.5,7.6,7.7,7.6,7.8,7.5,7.5,7.3,7.5,7.2,7.1,7.5,7.4,7.4,7.1,7.9,7.1,7.1,6.7,7.2,6.6,6.7,6.4,6.7,6.6,6.2,6.2,6.5,6,6.3,6.4,6.8,7.2,7.8,7.8,8.6,9.1,9.6,9.8,10.8,11.6,12,12.5,13.4,13.5,13.8,14.6,14.7,15,15.2,14.5,13.7,12.8,11.7,10.4,10,9.2,8.8,8.3,7.9,7.4,6.8,6.5,6.2,6.3,5.8,6,5.9,5.9,5.6,5.6,5.6,5.9,6,6.1,6,5.7,5.4,5.3,5.4,5.4,5.6,5.9,5.8,5.9,5.7,6.3,6.1,5.9,5.7,6.1,5.5,5.6,5.5,5.9,6,6.4,6.6,7.5,7.2,7.5,7.7,7.9,7.9,7.9,7.9,8.3,8.3,8.8,9.3,9.6,9.6,10.4,10,10.6,10.7,10.6,10.4,10.7,10.5,10.8,11,11.2,11.3,11.6,11.8,12.1,12.9,13.3,13.7,13.7,14.3,13.4,14.1,13.7,13.6,13.7,13.7,12.9,12.8,12.6,12.3,12.3,12.5,12,12.3,11.9,11.7,11.6,12,12.4,12.2,12.6,12.5,12.1,11.7,11.6,10.6,10.8,10.4,10,9.6,9.6,8.8,9.1,8.7,8.9,8.8,8.7,8.3,8.2,8.2,8.2,7.9,7.9,8,7.9,7.8,8.7,8.7,8.9,9.6,10,9.9,10.8,11.5,11.2,11.3,11.9,10.9,11.1,11.3,11.6,11.7,12.4,12,12,11.7,11.4,12.1,12,12.5,12.8,13.3,12.7,12.7,13.2,13.2,13.6,13.5,14.1,13.2,12.9,12.1,12.5,11.6,11.4,11.6,11.1,10.8,10.4,10.4,9.6,9.8,9.1,9.5,9.3,9.5,9.2,9.2,8.8,9,8.9,8.7,9,9.2,8.7,8.9,9.2,8.9,8.7,8.5,8.6,8.3,8.3,7.9,8.1,7.7,7.5,7.5,7.6,7.9,7.8,7.9,7.8,7.8,7.5,7.5,7.4,7.2,7.1,7.2,7.5,7.7,7.5,7.5,7.1,7.1,6.7,6.6,6.4,6.3,6.1,6.3,6.3,6.5,6.5,6.4,6,5.7,5.4,5.1,5.2,5.2,5.1,5.1,5.2,5,5.3,5.1,5.2,5.2,5.2,4.3,4.8,4.6,4.5,4.8,5.3,5.2,5.6,5.7,5.5,5.6,5.6,5.5,5.6,5.8,5.7,5.8,5.9,6,5.8,5.7,5.6,5.4,5.2,5.2,5,5.2,5.5,5.3,5.4,5.4,5.2,5,4.8,4.7,4.8,4.8,4.9,5,5.1,5.2,5.1,5.1,5.2,5.4,5.1,5.4,5.4,5.6,5.8,6.3,6.3,6.4,6.3,6.3,6.3,6.5,6.5,6.8,6.7,6.6,6.6,6.8,6.7,7,7.1,7.1,6.8,7.1,7.6,7.2,7.6,7.8,7.9,7.1,7.8,7.3,7.4,7.1,7.1,6.9,7.1,6.8,7.1,7.5,7.3,7.1,7.2,6.9,6.6,6.7,6.7,6.6,6.6,6.7,6.7,6.7,6.7,7.1,6.8,6.7,6.7,7.1,6.6,6.5,6.7,6.5,5.9,6.1,6.4,6.3,6.2,6.6,6.8,7.1,7,7.7,7.7,7.9,7.9,7.9,8.3,8.5,7.7,7.6,7.9,7.1,7.2,7.4,7,6.7,6.7,6.3,6.5,6.4,6.5,6.6,6.6,6.4,6.5,6.4,6.3,6.5,6.7,6.7,7,7,7.3,7.5,7.9,8,8.4,8.3,8.4,8.3,7.9,8.3,8.3,8.3,8.2,8.3,7.9,7.9,7.3,7.6,7.5,7.9,7.5,7.7,7.1,7.1,6,6.2,6.2,6.2,6.7,6.9,7.5,8,8.9,9.1,10.2,10.8,11,11.6,12.3,12.6,12.9,13.5,13.6,13,12.9,12.5,12,11.9,12,12.1,11.7,11.4,10.7,10.4,9.5,8.8,9.4,9.1,8.8,8.8,8.8,7.9,7.9,7.9,7.9,8.2,7.9,7.9,7.5,7.5,7.1,6.7,6.7,7.3,7.1,7.1,7.4,7.1,6.6,6.3,6.3,6.3,6.3,6.5,6.4,6.2,6,6,5.7,5.7,5.7,5.7,5.6,5.6,5.5,5.5,5.5,5.5,5.3,5.4,5.3,5.5,5.4,5.3,5.4,5.3,5.3,5,5.1,5,5.5,5.5,6.2,6.4,6.7,7.3,7.9,8.1,8.3,8.7,8.3,8,8.6,8.3,8.3,8.1,8.3,7.6,7.9,8,8.2,8.3,8.3,8.3,7.9,7.9,7.3,6.8,6.2,6,5.3,5,4.4,3.8,3.6,3.9,4.1,4.7,5.1,5.6,6,6.3,6.7,7.5,7.7,7.5,7.9,7.9,8.3,8.3,9.1,9.5,10,10,10.4,10,10,10.4,10,10,10.2,10,9.6,9.8,9.6,9.3,9.2,9.2,8.5,8.3,8.3,8.3,7.9,8.3,8.3,8.3,8.3,8.3,8.3,8.4,8.7,8.7,8.3,8.3,8.3,7.5,7.2,7.9,7.9,7.6,7.6,7.8,7.1,6.7,7,7,7.2,7.4,7.5,7.1,7.1,6.9,6.6,6.7,6.7,6.6,6.5,6.5,6.3,6.4,6.9,6.9,7,7,6.9,6.4,6.3,6.3,6.3,6.3,6.3,6.1,6.5,6.5,6.5,6.3,6.5,6,6.1,6,6.2,6.2,6.2,6.4,6.3,6.7,6.7,6.8,6.9,7.1,6.7,6.7,6.6,6.4,6.6,6.7,6.4,6.9,7,6.8,6.7,7,6.5,6.3,6.2,5.9,5.4,6,5.9,5.6,6,6.2,5.6,5.8,6.2,5.8,5.8,5.8,5.9,5.6,6.5,6.6,6.6,6.6,6.5,6.2,6,6,6,6.3,6,6.2,6.2,6.3,6.2,6.3,6.2,5.8,6.2,6.2,6.2,6.3,6.8,6.6,6.3,6.3,6.3,6.1,6.2,6.4,6.3,6.4,6.4,5.9,6.6,6.7,6.8,6.8,7.1,6.7,7.5,7.6,7.7,7.9,8.3,7.9,7.9,8.3,7.9,8.3,8.1,8.3,8,8.7,8.3,9,8.7,9.5,9.1,9.6,9.1,10,9.6,10,9.8,10.3,9.5,10,10,10.1,10.1,10.4,10.8,10.8,10.7,10.8,10.8,10.4,10.4,10.6,10.8,10.8,10.8,10.5,10.7,10,10,9.6,9.4,8.7,9.2,8.7,8.4,8.6,8.3,7.9,7.9,8.1,7.7,8.3,8.3,8.3,8.5,8.3,7.9,7.8,8,7.9,8.1,8.2,8.4,8.1,7.9,7.8,8,7.8,8.1,8.3,8.6,8.3,8.4,8.3,7.8,7.9,8.3,8.3,7.9,8.4,7.9,7.5,7.5,7.9,7.7,7.9,7.5,7.5,7.1,7.3,7.2,7.3,7.1,7.1,7.1,7,7.5,7.6,7.9,7.6,7.9,7.3,7.4,7.1,7.3,7.1,7.1,7.1,7.5,7.3,7.1,7.1,6.7,6.2,6,6,6,5.9,5.9,6.5,6.4,6.6,6.7,6.7,6.3,6.4,6,6.1,5.9,5.9,5.9,6,6,6.2,6.2,6.4,6.2,6.3,6.3,6.3,5.8,6,6,5.8,5.5,5.7,5.6,5.4,5.6,6.3,6.1,6,6,5.8,5.5,5.4,5.6,5.6,5.6,5.8,5.6,5.6,5.4,5.6,5.2,5.4,5.4,5.4,5.2,5.1,5,4.6,4.5,4.8,4.8,4.8,4.7,5,4.4,4.5,4.4,4.6,4.2,4.4,4.2,4.1,3.9,4.1,4.2,4.1,4.1,4,3.8,3.7,3.7,3.5,3.5,3.9,3.8,3.8,4.1,4.1,4.2,4.1,4.1,4.2,4.1,4.1,4.2,4.2,4.3,4.6,4.4,4.6,4.6,4.7,4.8,5,5,5.2,5.2,5.4,5.6,5.6,5.7,6.1,6.1,6.2,6.5,6.4,6.4,6.8,6.7,6.7,7.3,7.5,7.6,7.9,8.2,8.3,8.7,9.1,9.6,10.1,10.4,10.4,10.5,10.4,10.4,10.4,10.8,10.8,10.8,10.8,10.8,10.1,10.6,11.2,11,11.2,11.9,12.1,11.6,11.9,11.6,11.1,11,10.8,11.1,10.8,10.9,10,9.6,8.8,8.8,8.8,8.7,8.7,8.5,8.5,7.9,8.3,8.1,8.2,7.9,7.9,7.1,7.1,7.1,7.4,7.1,7.1,7,7,6.5,6.3,6.2,6.2,6,6,6.3,6.4,6.2,6.2,6.2,6.2,6.3,6.3,6.2,5.8,5.6,5.4,5.1,4.8,4.5,4.2,3.8,3.6,3.5,3.8,4.1,4.5,4.7,5.2,5.4,5.5,5.6,6,5.8,5.6,5.6,5.3,4.8,4.6,5,4.8,4.5,4.6,5,5.2,5.4,6.1,6.2,6.2,6,6.4,6.3,6.4,6.3,6.4,6.2,6.3,6.7,6.7,6.7,6.8,6.7,6.7,6.7,6.7,6.5,7,6.8,7.1,7,7.1,7.1,7,6.7,7.1,7.1,6.9,7.1,7.1,7.1,7.1,7.3,7.4,7.4,7.5,7.5,7.5,7.6,8,7.9,7.9,8.3,8.3,8.3,8.7,9.1,9.2,9.1,9.6,9.2,9.2,8.7,9,8.7,8.7,8.7,8.2,8.1,7.9,7.9,7.9,7.9,8,7.9,8.3,8.4,8.5,8.3,8.3,8,7.9,8.3,8.3,8.3,8.3,7.6,7.9,7.9,8.3,8.1,9,8.7,8.4,8.3,8.6,8.2,7.9,7.7,6.7,6.3,6,5.8,6.1,6.6,6.6,7.1,6.9,7.4,7.1,7.5,7.5,7.7,7.4,7.5,7.5,7.1,7.5,7.5,7.5,7.5,7.9,7.9,8,8,7.9,7.9,7.5,7.5,7.7,7.5,7.5,7.5,7.5,7.3,7.5,7.1,7.5,7.5,7.5,7.5,8.3,7.7,7.9,8.3,8.3,7.5,8.1,7.5,7.5,7.2,7.5,7.5,7.8,7.5,7.5,7.9,7.9,8.1,8.3,8.7,8.1,8.1,7.9,8.3,8.3,8.8,8.7,9.1,8.8,8.3,8.1,8.2,8,8.3,8.7,8.4,8.3,8.3,7.9,7.9,8.2,8.3,8.3,8.3,8.3,8.3,8.3,7.9,8,7.9,7.9,7.5,7.9,7.6,7.5,7.5,7.9,7.5,8.2,8.3,8,7.9,8.3,7.5,7.5,7.4,7.5,7.1,7.5,7.5,7.5,7.5,7.9,7.9,7.5,8.3,8.3,7.9,7.9,8.3,7.5,7.5,7.5,7.5,7.5,7.9,7.5,7.9,7.6,7.5,7.5,7.9,7.9,8.2,8.3,8.3,8.3,8.2,7.9,8.1,7.9,7.5,7.3,7.5,7.3,7.1,7.3,7.9,7.5,7.5,7.5,7.1,7.1,7,6.7,6.8,7.1,6.7,6.7,7,7,6.9,7.4,7.5,6.8,7.3,7.5,6.8,6.7,7.4,7.1,7.1,7.5,7.5,7.5,7.6,7.9,8,8.7,8.7,8.7,9.2,8.4,8.3,8.7,8.7,8.3,8.6,8.3,7.7,7.5,7.5,7.4,7.9,7.7,7.5,7.5,7.5,6.7,6.9,7,6.7,6.8,7.4,7.1,7.1,7.2,7.3,6.7,7.2,7.1,7.3,7.1,7.3,7.6,7.9,7.9,8.7,8.9,9.6,9.6,10,10,10,9.6,10,9.8,9.6,9.6,9.6,9.9,9.8,10,10,10,9.6,9.6,9.2,9.5,8.8,9.2,9.8,10.2,10.1,10.7,10.8,10.6,10.5,10.7,10.8,10,10,9.8,9.6,9.1,9.6,9.5,9.8,9.6,9.6,9.1,9.2,8.7,8.7,8.8,8.8,8.3,8.3,8.3,8.3,8.3,8.8,8.7,9.1,8.8,9.6,9.5,10,10,10.7,10,10.1,10,10,10,10,10,9.6,10,10,10.3,10.8,11.2,10.8,10.8,10.8,10.5,10.8,10.8,10.8,10.7,11,10.4,10.4,10.4,10.5,9.9,10,10.4,10.4,10.8,11,11.2,10.4,10.8,10.4,10.9,11.2,11.7,11.4,11.3,10.5,10.1,9.8,9.4,9,9,8.3,8.7,9,9.5,10.3,11.9,11.6,12.6,13.7,14,13.8,14.1,12.5,11.2,12.3,12.5,13.3,15,15.5,14.6,14.5,13.9,13.6,13.6,12.7,13.1,12.6,12.2,12.3,12.3,11.3,11.2,11.4,10.9,10.9,11.4,11.3,11.1,10.4,10.6,10,10.4,10.8,11.2,10.4,10.9,10.5,10.1,9.7,10.8,10.7,10.7,10.7,10.8,10.1,9.9,10,10,9.9,9.7,9.8,9.6,9.2,9.2,9.1,8.6,8.3,8.2,7.9,7.9,7.5,7.5,7.7,7.5,7.5,7.9,7.5,7.5,7.9,7.9,7.8,7.9,7.9,7.9,8.2,8.9,9.1,9.2,9.2,9.7,9.2,9.7,10,10.4,10,10.4,10.4,10.8,10.8,10.8,10.8,10.9,10.8,11,11.2,11.8,12,11.9,11.8,11.9,11.5,11.7,11.8,12.1,11.8,12,11.5,11.7,11.7,12.1,12.1,12.5,12.4,11.6,12.1,12.2,12,11.6,12.2,11.6,11.2,11.7,11.8,12.1,12,12.3,11.8,12.3,12.1,12.1,11.9,11.8,11.6,11.7,11.6,11.5,11.6,11.3,11.3,11.2,11.4,11.2,11.8,11.6,11.7,11.7,11.7,11.4,10.7,11.6,11.2,10.9,10.4,10.9,10.4,10.1,10.2,10.4,10.4,10,10.3,10.7,10.4,10.4,10,10,9.9,10,10,10.2,10.1,10.3,10.8,11,11.5,11.9,12,12.2,12.2,12.4,12.6,12.6,12.5,12.7,12.6,13,12.7,13,12.7,12.7,12.1,12.1,12.1,12,12,11.9,12.1,12.1,12,12.1,11.5,11.2,10.4,10,8.7,8.2,7.2,6.3,6,5.8,5.5,5.6,5.7,5.3,5.4,5.4,5.4,5.2,5.4,5.6,5.6,5.6,5.8,5.4,5.4,5.6,5.4,5.3,5.4,5.4,5.2,5.4,5.5,5.6,5.5,5.6,5.6,5.5,5.6,5.8,5.6,5.8,5.9,6,5.9,6.2,6.2,6.7,7.1,7.1,7.5,8.3,8.3,8.7,9.2,9.6,8.7,8.9,8.4,8.7,8.3,8.8,8.6,8.7,8.3,8.4,8.3,8.3,8.3,8.3,8.3,8.7,8.3,8.3,8.3,7.9,7,7,7.1,6.9,7.1,7.1,8,7.5,7.3,7.1,7.1,6.3,6.4,6.6,6.4,6.5,6.7,6.4,6.1,6.2,6,5.7,5.6,5.7,5.6,5.6,5.6,5.4,5.4,5.4,5.4,5.2,5.4,5.4,5.4,5.4,5.4,5.6,5.4,5.7,5.9,6,5.8,5.8,5.5,5.3,5.2,5.2,5.2,5.3,5.2,5.6,6,6.4,6.7,7.4,7.7,8.3,8.6,9,9.6,9.6,9.7,10,10.4,10.1,10.7,10.7,10.8,10.5,10.1,10,9.8,10,9.6,9.8,9.1,9.2,8.7,8.7,8.6,8.7,8.4,7.9,7.9,8.1,7.5,7.5,7.9,8.3,8.3,9.1,9.2,9.6,9.1,9.2,8.8,9.2,8.3,8.7,8.3,8.1,7.4,7.5,7.1,7.1,6.8,6.8,6.7,6.6,5.8,6.1,6.1,6.3,5.7,6.2,6,5.6,5.2,5.2,5.4,5.2,5.6,5.7,6,6,6,5.8,5.7,5.2,5,5.4,5.8,5.5,6.4,7,6.8,7,7.8,7.5,7.5,7.7,7.4,7.3,7.1,6.9,6.8,7.3,6.8,7.1,6.9,6.7,6.6,6.5,6.4,6.7,7.1,6.9,7.1,7,6.9,6.7,6.4,6.3,6.3,6,5.7,5.6,5.8,5.6,5.6,5.5,5.6,5.4,6,5.9,5.9,6,5.9,5.5,5.7,5.5,5.5,5.7,5.5,5.5,5.7,5.5,5.4,5.4,5.2,5.2,5.2,5.2,5.4,5.6,5.4,5.4,5.7,5.3,5,5.4,5.6,5.2,5.3,5.2,4.8,4.7,4.8,4.6,4.6,4.6,4.3,4.2,4.2,4.1,4.4,4.5,4.6,4.6,4.8,4.7,4.6,4.6,4.8,4.6,4.7,4.4,4.6,4.6,4.8,4.6,4.9,5,5,5,5,5.2,5.2,5.2,5.2,5.3,5.4,5.5,5.6,5.4,5.6,5.6,5.5,5.7,5.8,5.8,5.6,5.9,5.8,5.8,5.8,6,5.5,5.4,5.4,5.2,5,5.4,5.4,5.5,5.3,5.4,5.3,5.3,5.3,5.4,5.4,5.5,5.5,5.4,5.4,5.2,5.2,5.2,5.2,5.3,5.5,5.2,5.4,5.4,5.2,5.3,5.4,5.3,5.2,5.4,5.4,5.4,5.5,5.6,5.9,5.9,5.8,5.8,6,5.7,5.8,5.8,5.8,5.9,6,6,6.3,6.5,6.7,6.7,6.7,6.7,6.4,6.4,6.5,6.4,6.7,6.8,6.2,6.6,7,6.7,6.4,6.6,6.3,5.7,5.4,4.8,4.7,4.2,4.2,4.2,4.8,5.1,5.4,6.1,6.3,6.5,6.9,6.9,7.1,7.1,7.2,7.5,7.9,7.5,7.9,8.2,7.6,7.4,7.5,7.2,7.1,7,7.2,7.1,7.3,7.5,7.5,7.3,7.3,7.3,6.9,7.1,6.9,7.3,7.1,7.1,7.1,7.1,7,7.1,7,7.1,7.4,7.2,7.5,7.8,7.8,7.6,7.9,7.9,8.3,8.4,8.8,8.7,8.8,8.4,8.4,8.3,8.4,8.3,8.9,9.1,9.1,8.8,9.2,9,8.5,8.7,9.4,9.1,8.7,9.4,9.2,8.8,9.2,9.1,8.3,8.3,8,7.5,7.1,7.5,7.5,7.7,7.5,7.6,7.9,7.9,8,7.9,7.8,7.1,7,6.4,6.3,6.4,6.6,6.3,6.6,7.1,7,7.2,6.7,7,7.5,7.3,7.1,8.2,8.3,7.7,8.5,8.7,8.3,7.9,8.1,7.9,7.9,7.9,7.9,7.9,7.6,7.9,8.2,8.3,8.3,8.8,8.8,8.7,8.7,8.7,9.4,9.2,9.5,9.6,10,9.6,10,10.1,10.4,10.8,11.2,11.8,12,12,12,12.4,12,12.2,12.6,12.2,11.2,11.1,10.3,9.9,9.4,9.1,9,8.7,8.3,8.3,7.9,7.6,7.9,7.7,7.5,7.5,7.1,6.9,6.8,6.7,6.9,7,7.3,7.1,7.1,6.9,6.8,6.4,6.6,6.6,6.6,6.6,6.5,6.7,6.7,6.6,6.4,6.3,6.3,6.7,6.9,6.9,7,7.1,6.7,7.1,7.5,7.4,7.5,7.9,7.5,7.5,8,7.8,7.5,7.9,7.9,7.7,7.6,7.9,7.9,7.9,8.5,8.6,8.7,8.8,8.7,8.7,8.9,9.2,9.2,8.8,9.2,9.1,8.8,9.1,9.6,9.1,9.5,9.5,9.1,9.6,9.2,9.6,9.6,9.6,9.6,9.5,9.1,9.2,9.6,9.2,9.6,8.8,9.5,9.1,9.6,9.5,9.9,10.1,10,10,10,10.4,9.6,10,9.4,9.6,9.7,9.9,9.7,10.6,10.2,9.7,10.1,10.2,9.8,10,10.5,10.1,10,10.2,10.1,9.6,9.7,10,9.6,9.6,10,10,10,10.4,10,9.5,9.6,10,9.6,10,10.1,10,9.6,9.8,9.6,9.8,10.1,9.6,9.8,10,9.7,9.4,9.6,9.6,9.2,9.5,9.2,9.1,9.1,9.1,9.2,9.2,9.5,9.6,9.9,9.6,10,9.6,9.6,9.3,9.6,9.5,9.6,9.1,9.6,9.2,8.8,9.2,9.2,8.7,8.7,9.1,8.7,8.3,8.7,9.1,8.8,9.2,9.6,9.1,8.7,8.7,8.3,8.3,8.1,7.9,7.5,7.1,6.4,5.8,5.3,5,4.9,5,5.3,5.1,5.9,6,6.2,6.7,7.4,7.5,7.9,8.3,8.3,8,8.3,8.8,8.8,9.2,9.6,9.2,8.7,8.7,8.7,8.7,8.4,8.7,8.7,8.3,8.4,8.6,8.3,8.3,8.3,8.3,7.9,8.3,8.7,8.7,8.7,9.5,9.1,8.7,8.7,8.7,8.3,8.3,8.7,8.5,8.8,8.8,8.7,9.1,9.4,9.2,9.5,9.6,8.8,9.1,9.2,8.8,8.7,9.1,9.2,9,9.2,9.2,9.2,8.7,8.9,8.4,8.7,8.7,8.7,8.8,9.4,9.6,9.2,9.3,9.3,9.5,8.7,9,9.4,9.4,9,9.5,9.3,8.8,9.1,9.2,9.3,9.2,9.1,9.2,9.1,8.8,9.2,9.5,9.2,9.1,9.5,9.1,9.2,9.1,8.9,9.1,9.1,8.7,9.2,9.4,8.6,8.8,9.2,9,9.2,9.7,9.6,9.1,8.9,9.1,8.7,8.7,9.6,9.6,9.1,9.1,9.5,8.7,9.1,9.2,9.6,9.2,9.5,9.6,10,9.6,9.8,9.6,9.1,8.9,9.1,8.9,9.6,9.6,9.4,9.3,9.6,8.7,8.7,9.2,9,8.7,9.2,9.5,9.1,9.1,9.2,9.2,8.8,8.7,9.6,9.6,9.1,9.2,9.6,9,9.2,9.2,9.1,8.7,8.5,8.6,8.7,8.8,8.7,9.1,8.8,8.7,8.7,8.7,8.3,8.5,9.2,9.2,9.1,9.2,8.5,7.9,7.7,8,8,8.8,8.6,9,9,9.2,8.7,9.2,9,9.2,9.1,9.2,9.2,9.3,9.2,9.6,9.6,9.6,9.9,10,10,10,9.7,10.1,10.1,10.1,10.3,10.6,10.8,10.7,10.9,11.1,10.9,10.7,10.7,10.5,10.9,11.1,11,10.9,10.9,10.9,10.4,10.8,10.8,10.4,10.4,10.8,10.4,10.3,11.2,11,10.8,11.1,11.7,11.2,10.7,11.6,11.1,10.8,10.8,11,10,9.8,9.6,9.4,9.2,8.7,8.7,8.3,8.1,8,8,8.3,8.3,8.3,8.4,8.8,8.3,8.4,8.3,8.3,8.3,8.3,8.2,8.3,8.2,8.3,8.3,8.4,8.3,8.5,8,7.9,7.9,7.9,7,7.3,6.7,6.1,5.5,5.9,5.2,5.4,5.7,6.3,6.7,7.1,7.5,7.5,7.5,7.5,7.5,7.1,7.1,7,7.2,7.1,6.9,7.1,7,6.3,6.7,6.9,7,7.1,7.5,7.5,7.5,7.4,7.7,7.9,7.9,8.3,8.4,8.3,8.4,8.8,8.9,8.7,8.8,9.1,9.2,9.2,9.8,10.2,10.3,10.2,10.9,10.9,11.4,11.7,12.2,12.1,12.1,12.4,11.7,11.9,12,12,11.6,12.2,12.3,12.1,12.2,12,12.4,11.9,11.6,11.5,11.5,11,10.9,10.8,11.2,11,10.9,10.7,11.1,10.8,10.4,10.4,10.4,10.1,10,10.4,10.4,10.4,10,10,10,10.4,10,10.4,10.2,10,9.8,10.4,10,10.2,9.7,10.2,9.5,10,9.6,10.1,9,9.6,9.2,9.2,8.7,8.9,8.3,8.3,7.9,7.9,7.9,7.9,7.7,7.9,7.9,8.3,8.3,9,9.6,9.6,9.6,9.8,10,10.4,10.8,11.1,11.7,11.2,11.2,11,10.5,9.6,10,9.3,9,8.5,8.7,7.6,7.7,7.5,7.4,7,7.4,6.7,6.7,7,7.1,7.1,7.1,7.1,6.7,6.4,6.7,6.7,6.7,6.6,7,7,7.1,7.1,7.1,6.6,6.6,6.2,5.8,5.6,5.2,4.5,3.9,3.6,3.6,3.5,4.2,5.2,5.8,5.9,6.6,6.9,6.6,6.9,7,6.8,6.5,6.5,6.4,6.3,6.1,6.3,6.1,6,5.8,6,5.9,6,6.4,6.1,6.3,6.6,6.7,6.5,7.3,7.2,7.2,7.6,7.7,7.5,7.8,7.5,7,7.1,6.9,6.7,6.5,6.2,5.9,5.8,5.6,5.8,6.3,6.7,7.3,7.3,7.7,7.9,8,7.9,8.3,8.4,8.3,7.8,7.9,7.9,7.9,7.9,8.2,7.9,7.9,7.8,7.9,8,8.3,8.3,8,8.3,8.3,7.9,7.9,8.3,8.2,8.3,9.2,9.2,9.6,9.7,10,10,10.4,10.4,10.2,9.9,10,10.3,9.6,10.1,10,10,9.6,10,10,9.6,10,9.6,10,9.2,10,9.3,9.5,9.6,9.7,10,9.8,9.7,9.7,9.9,9.2,9.2,9,9,9.2,9.4,9.6,10,9.6,9.8,9.7,10,9.6,10,9.3,10,9.2,9.6,9.5,9.6,8.7,9.2,8.9,8.8,8.5,9.1,9.5,9.4,9.1,9.8,9.1,8.8,9.2,9.2,8.7,8.7,8.7,8.7,8.7,8.7,9.6,9.5,9.1,9.2,9.1,8.3,8.3,8.1,7.9,7.9,7.9,7.9,8.3,8.3,8.7,9.2,9.2,9.5,10,10,10.2,10.8,11,10.9,11.6,11.3,11.6,11.9,12.7,12,12.4,12.5,13.1,12.5,13.3,13.3,12.9,12.5,13.2,12.5,12.6,13,12.6,12.5,12.5,12.6,12.6,12.2,12.4,12.9,12.5,12.4,12.5,12,11.2,10.4,10.1,9.9,9.2,9.1,9.4,8.7,8.4,8.4,8.7,9,9.1,9.2,9,9.2,8.7,8.8,8.7,9.2,8.7,8.4,8.7,8.7,8.3,7.9,9.1,8.7,8.5,8.3,8.7,7.9,7.9,8.2,7.9,7.9,7.9,7.8,7.5,7.9,8.3,8,8.1,7.9,7.9,7.3,7.4,7.1,7.5,7.3,7.3,7.1,7.5,7.1,7.3,7.5,7.5,7.5,7.9,7.9,7.9,8.3,8.3,8.3,8.3,7.9,7.9,7.9,7.9,8,8.3,8.7,8.5,8.4,8.6,8.2,7.9,8.1,7.9,8,8.5,8.3,7.9,8.3,7.5,7.1,7.1,7.1,6.8,7.1,7.5,7.1,7.5,7.6,7.5,7.1,7.2,7.1,6.8,6.6,6.5,6.2,5.9,5.8,5.6,5.4,5.8,5.7,5.5,5.6,5.4,5,4.8,4.9,4.5,4.4,4.4,4,3.5,3.4,2.9,1.8,0,0.1,0.2,0.2,0.3,0.3,3.6,4.3,5,5.6,6.1,5.8,6.2,6.1,6.2,6.4,7.4,7.4,7.7,7.9,7.9,7.9,8.4,8.7,8.7,9,9.2,9.3,9.2,9.6,9.3,9.6,9.2,9.8,9.6,10.2,10,10.4,10.2,10.4,10.2,10.4,10.8,10.8,10.8,11.2,11.2,10.8,11.3,11.2,11.3,11.2,11.5,11.2,11.2,10.8,11.5,11.3,11.2,11.6,11.6,10.5,10.8,10.8,10.4,10.3,10.8,10.4,10.3,10.4,10.4,10.4,10.3,10.5,10,10.4,10,9.2,8.7,8.3,7.1,6.8,7.1,6.8,6.7,7.1,7.3,7.1,7.5,8.1,7.9,8.3,8.3,8.1,8.1,8.3,8,7.9,8,7.9,7.9,7.9,8.3,8.1,7.9,7.5,7.4,6.7,6.5,6.7,6.7,6.8,7.5,7.9,7.9,8.3,8.3,8.3,8.7,8.7,8.7,8.9,9.1,8.7,8.8,9.2,9.4,9.2,9.1,9.2,8.3,7.9,8.3,8,7.5,7.6,7.2,5.8,5.5,5.3,4.5,4.9,5.5,5.4,5.9,6.8,6.7,6.9,7.4,7.1,7.4,8,8.1,8.3,8.7,8.7,8.3,8.3,8.7,8.7,8.7,9.1,9.2,8.7,8.9,8.8,8.7,8.3,8.4,7.7,7.4,6,5.6,4.9,4,3.2,2.8,2.2,1.8,2.4,3.3,4.3,5.2,5.9,6,5.9,5.5,4.7,3.8,3.1,2.2,1.7,1.5,1.8,2.4,2.7,3.5,4.2,4.6,4.9,5.1,5.4,5.6,5.7,6.3,6.3,6.2,6.2,6.1,5.4,5.3,5.4,4.9,4.4,3.4,2.6],"series_type":"distance","original_size":7347,"resolution":"high"},"distance":{"data":[0,2,4.8,8.1,11.8,16,20,23,28.2,33.4,38.6,42.4,47,52.2,58.4,64.6,70.2,75.1,81.5,87.7,94,100.3,105.9,111.3,117,125.3,129.9,135.6,140.3,146.4,150.4,155,159.8,163.2,167.4,169.1,172.6,176.8,180.9,183.5,187.5,192.4,197.9,202.3,206.4,211.1,216.9,223.3,227.3,233.4,237.9,242.3,247.9,252.3,257,261.7,267.5,270.8,276.7,282.9,287.8,293.2,299.9,305.6,311.1,316.6,322.2,328.9,334.4,340,346.6,353.4,360,366.5,371.8,378,384.6,390.8,396.4,402,408.5,413.9,419.9,426.4,430.9,435.3,440,444.3,448.7,453,457.4,463.8,469.3,474.7,481.1,487.7,493.5,499.6,505.7,511.8,518.1,524.6,529.3,536.5,542.2,548.9,555.4,562,568.5,575,581.6,588.1,594.7,601.2,609.5,616.5,622.9,628.5,634.8,641.3,648.2,655.1,662.6,668,674.2,679.6,685,690.7,696.1,700.3,702.4,706.7,711,714,719.2,724.5,730.4,734.3,741.1,746.9,754,760.7,766.8,773.3,779.7,785.2,790.6,796.8,803.2,807.6,815.1,822.5,826.7,835.3,841.6,847.3,853.1,858.7,865.1,871.5,880,886.3,892.2,898.5,903.8,909.1,914.4,920.3,924.9,931.2,936.8,943.7,950,956.5,962.8,969.1,976,981.9,989.2,996.5,1003,1009.4,1017.7,1024,1031.6,1039.8,1045.4,1053.8,1060.1,1068,1074.8,1081.1,1087.4,1095.8,1102.5,1108.8,1116.8,1125.2,1131.7,1139.1,1146.2,1154.6,1160.9,1169.3,1175.7,1184,1192.4,1198.6,1207.1,1215.5,1223.9,1232.3,1240.4,1247.1,1255.5,1263.9,1270.6,1280.7,1288,1295.4,1303.8,1310.2,1318.6,1324.9,1331.6,1341.8,1348.1,1355.3,1362.8,1369.2,1375.5,1382.9,1390.3,1396.6,1402.8,1411.3,1419.6,1426,1433.2,1440.8,1447,1453.9,1461.8,1469.8,1474.4,1484.3,1491.2,1497.8,1503.8,1509.7,1517.9,1526.5,1532.5,1539,1545.3,1551.3,1556.5,1563.8,1569.1,1575.3,1581.6,1586.9,1591.4,1596.3,1600,1603.4,1606.6,1606.6,1606.6,1606.6,1608.3,1613.1,1615.9,1618.1,1621.8,1627.6,1633.2,1639.2,1645.5,1653.8,1660.4,1668.6,1677,1683.3,1691.7,1700.1,1706.2,1716.8,1723.2,1731.5,1742,1750.3,1759,1769.2,1777.8,1788.1,1796.5,1806.9,1817.4,1829.6,1840.3,1850.8,1861.3,1873.2,1882.2,1894.6,1906.9,1915.8,1930.4,1940.9,1953.4,1965.9,1978.3,1991.2,2001.8,2012,2024.9,2037.5,2050.1,2062.3,2072.8,2085.4,2096.6,2108.4,2119.6,2130.3,2142.9,2154.4,2163.9,2174.5,2185.8,2196.3,2206.7,2217.2,2225.6,2237.8,2248.3,2257,2267.2,2275.7,2284.2,2296.7,2305.1,2313.5,2323.9,2332.2,2340.6,2348.9,2357.4,2365.8,2376.3,2385.3,2394.7,2402.9,2411.9,2420.2,2428.6,2437,2445.2,2453.7,2462.1,2470.4,2478.9,2487.2,2495.6,2504,2512.3,2520.7,2529.1,2537.4,2545.8,2554.1,2562.4,2570.9,2578.1,2585.5,2593.9,2603.4,2612.7,2621.1,2629.4,2637.8,2646.2,2652.4,2660.8,2667.5,2679.3,2686.8,2694.3,2702.6,2708.9,2717.4,2725.3,2734,2740.2,2748.6,2754.9,2761.2,2769.5,2775.7,2783,2790.3,2796.6,2803,2811.1,2817.7,2824.7,2831.1,2837.1,2844.9,2851.1,2859.5,2866.2,2872.5,2878.7,2884.6,2891.2,2899.5,2905.5,2911,2916.8,2922.4,2929.8,2934.9,2940.1,2944.3,2948.5,2952.7,2958.9,2962.7,2966.2,2969,2973.4,2976.6,2978.6,2981.1,2985.2,2986.6,2990.4,2993.3,2996.1,2998.9,3001.7,3005.1,3010.3,3015.5,3019,3024.5,3028,3034.2,3040.5,3045.7,3052,3057.2,3063.5,3069.8,3076.1,3082.4,3088.7,3095.7,3101.9,3109.6,3115.9,3124.2,3130.5,3138.3,3145.1,3153.4,3159.7,3166.4,3174.3,3180.8,3188.2,3193.4,3201.5,3207.9,3216.1,3222.4,3230.7,3237,3243.1,3251.6,3257.9,3264.2,3271.2,3277.4,3285.1,3291.8,3299.3,3305.9,3312.2,3319.1,3326.3,3333.1,3339.9,3347.7,3354.3,3361.5,3370.7,3376.9,3384.4,3391.6,3397.8,3405.3,3412.5,3418.6,3425,3434.3,3439.6,3448,3454.2,3461.4,3468.6,3475.1,3481.4,3488.4,3496,3502.3,3510.1,3516.5,3523.1,3531,3537.8,3546.1,3553.8,3560.6,3565.3,3574.6,3581.6,3587.8,3596.2,3602.4,3608.8,3617.1,3623.1,3631.6,3637.9,3646.3,3653.1,3660.9,3669.1,3675.5,3683.7,3692.1,3698.4,3706.7,3715,3723.4,3731.8,3738,3746.4,3754.6,3761,3769.3,3776.4,3783.9,3791.4,3798.5,3805.6,3813.1,3819.4,3827.7,3833.9,3842.3,3848.6,3856.9,3864.1,3871.3,3877.6,3886.1,3894.4,3902.7,3911.1,3919.3,3927.8,3934.1,3942.4,3950.8,3958,3965.4,3973.7,3982,3988.3,3996.6,4005,4013.2,4021.7,4030,4037.7,4044.6,4053,4061.3,4068.6,4075.9,4084.3,4092.6,4097.2,4107.2,4115.5,4123.8,4131.9,4138.5,4146.5,4155.3,4161.6,4172,4180.3,4186.6,4194.9,4201.2,4208.7,4215.9,4223.4,4230.4,4236.9,4245.1,4251.4,4259.7,4268,4275.3,4282.6,4288.9,4295.1,4301.3,4306.1,4312,4318,4323,4326.6,4329.8,4333,4334.8,4336.3,4336.3,4336.5,4337.9,4341,4344.4,4349.6,4355.5,4360.8,4368.3,4375.6,4381.8,4390.1,4396.4,4404.6,4411,4419.1,4425.6,4434.2,4442.3,4449.7,4456.9,4463.2,4471.5,4477.8,4486.1,4492.3,4500.6,4507.3,4515.3,4523.6,4529.9,4538.2,4545.3,4555,4562.3,4569.6,4578,4584.2,4592.5,4598.8,4607.1,4613.5,4621.8,4630,4636.5,4644.5,4649.4,4659.5,4665.8,4674.1,4683.8,4690.4,4699.1,4705.3,4713.7,4722.1,4728.4,4736.6,4745.1,4751.4,4760.5,4768.1,4774.4,4782.7,4793.1,4799.3,4807.7,4815.9,4822.4,4830.6,4837,4845.4,4852.3,4860,4868.3,4876.6,4885,4891.6,4899.7,4907.4,4914.2,4921.8,4928.9,4937.2,4945.6,4952.1,4960.2,4967.7,4974.9,4983.2,4991.6,4997.8,5006,5016.6,5024.8,5031.1,5039.4,5047.9,5056.2,5062.5,5070.9,5079.2,5087.6,5095.9,5103.8,5110.6,5118.9,5127.2,5135.5,5143.9,5152.3,5160.6,5169,5177.4,5185.7,5194,5204.5,5212.8,5221.2,5231.3,5239.9,5248.3,5256.5,5264.6,5273,5281.7,5289.1,5298.4,5306.7,5317.1,5325.5,5333.8,5342.2,5350.5,5358.8,5366.9,5375.6,5383.9,5394,5402.7,5411,5421.4,5429.8,5440,5448.6,5456.9,5469.4,5477.7,5486,5496.3,5504.7,5515.1,5523.4,5534,5542.6,5553.2,5562.9,5571.5,5583.4,5592.4,5600.6,5609,5618.9,5624,5630.3,5635.5,5640.7,5646.2,5651.8,5656.8,5661.5,5664.4,5666.8,5668.5,5669.7,5671.5,5676.2,5680.4,5685.6,5693.1,5699.8,5707.7,5716.1,5724.4,5734.8,5743.2,5753.6,5762.9,5773.9,5782.7,5793.2,5804.1,5814,5824.4,5834.8,5847.3,5857.5,5867.3,5880.4,5889,5901.4,5911.8,5924.2,5934.8,5947.2,5957.5,5970.1,5980.9,5995.1,6007.6,6014.6,6030.5,6043,6053.5,6065.7,6078.3,6088.6,6101.4,6110.1,6122.2,6134.7,6145.1,6155.8,6169.7,6180.1,6188.9,6200.9,6211.8,6222.2,6232.6,6243.1,6251.5,6259.8,6268.5,6279.4,6286.7,6295.2,6305.4,6312,6320.4,6328.4,6335,6343.3,6349.6,6358,6366.4,6372.6,6383,6389.5,6397.7,6403.2,6412,6418.6,6426.9,6433.2,6441.6,6449.8,6456.2,6464.4,6470.7,6477.9,6485.4,6492.9,6500,6506.3,6513.3,6520.9,6527.2,6537.3,6543.9,6550.2,6557,6564.8,6571.1,6578.8,6585.7,6592,6600.3,6606.5,6612.9,6620.4,6627.5,6633.8,6641.1,6648.2,6656.7,6662.8,6669.1,6675.4,6679.7,6687.9,6692.1,6696.5,6701.6,6705,6709.1,6712.1,6714.3,6717.6,6722.4,6725.8,6730.3,6735.9,6740.3,6746.3,6753.3,6759.6,6767.9,6774.1,6782.5,6790.8,6799,6807.6,6815.7,6824.3,6834.6,6843,6851.3,6859.7,6870.1,6876.9,6886.8,6897.2,6905.6,6913.9,6926.4,6934.7,6941.3,6948.8,6954,6961.9,6968.2,6974,6978.3,6984.9,6991.2,6999.5,7009.7,7016.3,7026.5,7037.1,7045.5,7054.7,7068.5,7079,7089.4,7099.9,7110,7119.1,7130.8,7141.9,7151.5,7162,7172.5,7180.8,7191.2,7203.7,7212.7,7222.4,7232.9,7243.2,7253.1,7261.9,7272.3,7284.7,7294.8,7305.4,7315.9,7326.3,7336.7,7347,7357.7,7369.9,7380.3,7391.7,7403.1,7413.4,7426,7438.4,7448.9,7459.4,7471.3,7480.2,7488.6,7499,7509.4,7517.1,7524.4,7532.4,7542.8,7549.1,7557.4,7565.2,7572.1,7580.4,7586.7,7594.9,7603.4,7610.6,7618,7624.1,7632.5,7638.8,7645.2,7653.5,7659.7,7667.5,7674.4,7680.7,7688.8,7695.4,7702.1,7709.4,7716.2,7722.5,7728.7,7738.5,7745.5,7751.9,7758.2,7765.8,7772.7,7779,7785.9,7793.1,7799.9,7806.1,7814.4,7820.7,7826.9,7835.1,7841.6,7847.8,7856.3,7864.6,7870.9,7877.8,7885,7891.8,7898.1,7904.8,7910.7,7918.3,7923.5,7931.5,7937.8,7945.3,7950.5,7956.7,7962.9,7969.2,7975.5,7981.5,7988,7996.3,8001.2,8007.7,8013.9,8020.2,8027.5,8032.7,8039.4,8046.2,8052.9,8059.2,8065.5,8071.8,8078,8084.3,8090.4,8097.1,8103.3,8109.4,8113.8,8122,8130.3,8136.7,8144.9,8153.3,8161.6,8170,8178.3,8184.6,8191.7,8201.3,8209.5,8217.9,8226.3,8232.6,8241.7,8249.3,8257.6,8263.9,8271.2,8278.5,8284.8,8291.4,8301.5,8309.8,8318.2,8326.5,8334.9,8341.3,8352.8,8360.7,8370.2,8380.8,8389.1,8397.4,8405.9,8418.3,8428.6,8436.9,8445.2,8455.8,8462.1,8470.4,8476.7,8483.3,8492.9,8499.6,8508,8516.3,8524.6,8533,8542.8,8549.7,8558,8565.5,8572.6,8581,8588,8595.6,8601.9,8610.2,8616.6,8625.8,8632.9,8639.4,8647.8,8653.1,8662.2,8668.7,8677.1,8683.3,8691.3,8697.7,8704.2,8714.2,8718.9,8728.7,8735.6,8743.3,8750.2,8756.5,8764.9,8771.1,8779.5,8784.9,8792.1,8798.4,8805.7,8810.9,8817,8823.4,8830.2,8837.9,8844.1,8850.5,8856.9,8863.2,8869.5,8874.3,8881.6,8886.2,8892.5,8897.2,8903,8908.6,8914.8,8919.7,8925,8930.2,8935.7,8940.3,8944.9,8951.2,8957.4,8964.5,8972.1,8978.3,8986.6,8995,9003.4,9009.6,9017.9,9028.4,9036.8,9047.1,9055.5,9065.2,9074.2,9084.7,9093,9105.5,9113.8,9122.1,9130.5,9141,9149.3,9155.8,9166,9174.3,9180.6,9188,9195.2,9203.6,9211.6,9220.2,9226.5,9233.7,9241.2,9247.8,9255.5,9262,9269,9276.3,9283,9289.2,9297.6,9305.4,9313.7,9320.5,9328.3,9335.2,9341.5,9349.8,9356.1,9363.8,9370.7,9379,9383.4,9393.7,9399.9,9410.3,9416.6,9424.9,9433.2,9439.6,9447.9,9454.1,9462.5,9470.6,9477.2,9485.5,9493.8,9500.2,9508.5,9516.8,9525.1,9533.2,9539.8,9548.2,9556.5,9564.9,9571.4,9581.5,9592,9599.9,9608.7,9617,9625.1,9633.7,9642,9650.4,9658.7,9667.3,9679.5,9687.8,9696.2,9704.5,9715,9723.3,9733.8,9742.1,9752.5,9760.9,9771.3,9779.6,9792.1,9800.5,9808.8,9818.5,9827.5,9835.9,9846.3,9856.8,9864.8,9875.4,9882.8,9892.1,9902.6,9911,9920.2,9929.7,9938.1,9950.6,9958.9,9967.2,9977.7,9986,9995.2,10004.8,10013.1,10023.5,10031.9,10040.2,10052.7,10063.1,10071.4,10081.8,10090.2,10100.6,10109,10119.4,10129.4,10138.2,10148.5,10159,10169.4,10179.8,10190.2,10200.6,10212.1,10222,10233.9,10244.3,10256.8,10267.2,10276.4,10287.5,10297.5,10307.9,10319.3,10329.7,10340.1,10349.2,10360.4,10369.3,10379.7,10390.1,10400.3,10410.7,10419.3,10429.6,10440.1,10448.5,10458.8,10471.3,10480.9,10490.4,10500.5,10510.9,10521.3,10530.4,10542.2,10551.4,10560.8,10571.3,10581.7,10592.1,10600.5,10608.8,10619.2,10627.6,10635.9,10646.3,10654.7,10661,10669.2,10678.7,10685.6,10692.2,10699.5,10706.8,10713.2,10721.4,10727.7,10736,10742.4,10750.3,10757,10763.3,10771.6,10777.9,10784.7,10792.5,10799.5,10806.5,10814.3,10819.7,10828.3,10834.6,10841.8,10847.1,10855.3,10861.2,10867.7,10873.9,10880.3,10888.5,10894.1,10901.2,10907.4,10913.7,10920.2,10928.3,10936.4,10943,10949.2,10955.9,10961.8,10968.4,10975.9,10982.6,10988.9,10995.2,11001.8,11009.1,11016.1,11022.3,11028.9,11036.8,11043.1,11049.6,11057.8,11064.1,11072.5,11079.7,11087.1,11095.4,11102.2,11110,11118.3,11126.7,11133.3,11141.3,11149.7,11158,11166.3,11174.7,11183,11190.4,11200.8,11210,11218.5,11226.8,11235.1,11245.5,11253.8,11264.3,11274.6,11282.9,11291.3,11301.7,11310.1,11318.4,11328.8,11339.3,11347.6,11355.9,11366.3,11374.7,11383.8,11392,11401.8,11410.1,11420.5,11428.9,11437.2,11445.5,11456,11464.2,11472.6,11485,11493.5,11503.3,11512.1,11522.2,11530.9,11541.3,11551.6,11560.1,11570.5,11580.9,11591.3,11601.7,11612.1,11622.5,11632.9,11643.3,11653.7,11664.5,11678.7,11689.9,11701.5,11710.8,11724.4,11735.9,11748.4,11759.6,11773.5,11784,11800.1,11811.7,11824.2,11834.5,11847.1,11855.2,11867.9,11876.2,11884.6,11895,11903.3,11913.7,11924.1,11932.4,11940.8,11949.1,11959.5,11967.9,11976.2,11984.6,11990.9,12000.7,12007.5,12014.8,12022.1,12028.7,12035.4,12040.9,12049.2,12055.5,12061.8,12069.3,12076.4,12082.8,12090.8,12097.3,12104.6,12111.9,12118.2,12126.5,12132.8,12140.9,12147.4,12154.4,12162,12168.9,12178.7,12184.9,12193,12199.5,12207.9,12214.6,12221.7,12230.1,12237.1,12244.7,12253.5,12260,12268.4,12276.7,12284.1,12291.3,12297.6,12305.9,12314.3,12322.6,12330.9,12338.7,12345.4,12353.8,12360.9,12368.5,12376.8,12384.2,12393.5,12400.3,12408.1,12415.9,12424.7,12430.9,12439.3,12446,12453.8,12462.3,12469.8,12476.9,12486.7,12493.6,12499.9,12508.2,12514.4,12522.8,12529,12537.4,12544.9,12551.9,12559,12566.6,12573.4,12581.2,12589.5,12597.8,12605.7,12612.4,12620.7,12630.7,12637.4,12645.7,12654,12661.3,12668.7,12677,12685.1,12693.7,12699.9,12708.3,12714.6,12722.9,12729.2,12737.5,12745.8,12752.1,12760.4,12766.6,12772.9,12781.3,12787.5,12792.3,12801.8,12808.4,12814.2,12822.5,12829.7,12837,12843.5,12850,12856.4,12863,12869.2,12876.5,12883.5,12889.8,12896,12901.7,12908.6,12916.3,12923.2,12929.4,12935.6,12942,12948.2,12954.5,12960.8,12967.5,12973.3,12979.6,12985.9,12992.1,12998.4,13004.2,13010.9,13017.2,13023.5,13029.7,13036.3,13042,13050.6,13056.9,13062.9,13069.4,13077.7,13084.1,13091.7,13098.6,13104.8,13111.1,13118,13124.5,13131.8,13138.2,13144.5,13151.5,13158.8,13165.4,13171.7,13177.9,13183.7,13191,13197.1,13202.9,13210.7,13217.6,13223.8,13230.1,13236.6,13244.7,13251,13259.2,13265.6,13271.9,13278.1,13284.4,13291.6,13298.9,13305.1,13311.5,13317.7,13324,13330.3,13336.6,13345.6,13351.8,13359.1,13365.3,13372,13378.3,13384.6,13390.9,13397.1,13402.7,13409,13415.2,13421.4,13426.6,13432.8,13439,13447.3,13453.5,13459.8,13465.4,13472.3,13477.5,13483.7,13489.1,13495.8,13501.7,13507,13513.9,13519,13524.6,13530.5,13536.7,13541.9,13548.2,13555.6,13561.5,13566.9,13573,13578.3,13583.5,13589.3,13595.7,13601.2,13605.3,13612.5,13618.8,13625,13630.3,13635.5,13641.7,13646.8,13652.1,13656.8,13664.6,13669,13675,13680.5,13685.7,13691.6,13696.7,13702,13707.2,13713.4,13719.2,13724.9,13730.1,13737.3,13743.5,13748.8,13754.8,13761.1,13765.4,13771.6,13777.8,13783,13789.3,13795.5,13800.8,13807.1,13813.2,13818.3,13824.6,13830.1,13836.3,13842.1,13848.5,13854.7,13861,13866.1,13872.4,13880.2,13886.5,13892.8,13899.3,13906.6,13915.2,13922,13928.2,13934.5,13940.8,13946.1,13953.3,13959.6,13965.8,13974.1,13980.4,13986.7,13992.9,14001.1,14007.6,14014.6,14020.8,14028.4,14034.7,14042.6,14049.3,14055.6,14066,14072.3,14078.8,14086.2,14093,14100.3,14106.9,14114,14122.3,14128.6,14136.9,14145.3,14151.5,14159.9,14168.2,14176.5,14184.8,14193.2,14201.5,14209.9,14220.3,14228.6,14239,14248,14258.5,14269.1,14280.9,14290.9,14302.5,14313.8,14325.5,14335,14348.6,14361.6,14371.2,14382.4,14392.8,14405.3,14415.7,14424,14434.4,14446.9,14455.2,14465.6,14474,14484.6,14494.7,14503.1,14513.5,14521.8,14532.2,14540.6,14551,14559.3,14569.7,14579.1,14588.4,14598.8,14608.5,14617.6,14628.5,14639.7,14650.8,14661.2,14671.5,14679.9,14690.4,14700.8,14711.2,14721.5,14731.9,14741.1,14752.7,14763.1,14775.4,14786,14796.4,14806.8,14817.2,14827.5,14837.9,14847.3,14857.7,14868.2,14878.8,14890,14901.1,14912.9,14923.3,14933.7,14945.8,14956.5,14966.9,14979.2,14989.8,15000.2,15014.7,15025.2,15035.7,15048,15059.3,15070.8,15081.2,15092.1,15102,15111,15121.5,15129,15136.9,15143.3,15148.6,15153.3,15157.2,15160,15162.1,15164.5,15167.8,15170.3,15173,15177.6,15181.8,15187.3,15194.2,15200.4,15206.7,15213.5,15219.2,15226.7,15233.8,15242,15248.4,15256.7,15265,15273.4,15282.2,15292.1,15300.4,15305.1,15315,15323.3,15331.7,15339.9,15348.3,15356.6,15365,15374.9,15385.7,15394.1,15402.4,15410.7,15419.1,15427.4,15433.7,15441.8,15448.3,15457.8,15464.9,15471.1,15478.2,15485.5,15491.7,15498.1,15504.2,15510.8,15517.1,15525.2,15531.2,15537.4,15542.6,15548.3,15554.7,15559.8,15563.5,15571.4,15577.9,15583.4,15588.3,15593.1,15597.3,15602.8,15607.6,15612.6,15617.9,15622.5,15627.8,15632,15636.1,15640.3,15644.8,15650.7,15655.3,15660,15665.2,15669.9,15675.4,15680.4,15685,15690.8,15695,15700.6,15705.8,15711.2,15716.1,15721,15726.5,15731.7,15736.9,15743.1,15749.4,15754.5,15759.8,15764.1,15770.2,15774.3,15778.8,15784.7,15789.7,15794.1,15798.2,15803.4,15808.1,15813.8,15819,15824.8,15829.4,15835.3,15841.6,15847.8,15853.3,15859.5,15864.7,15871.6,15878.2,15885.4,15891.7,15900,15906.3,15912.6,15920.8,15927.1,15934.2,15941.8,15948.8,15956.3,15964.7,15973,15979.9,15985.9,15992.3,16001.7,16006.4,16013.7,16019,16026.6,16033.6,16041.9,16048.2,16054.5,16060.7,16066,16072.3,16077.5,16083.7,16089.9,16096.2,16101.3,16107.6,16112.9,16119.3,16125.5,16131.7,16138.1,16145.7,16151.2,16157.4,16163.1,16168.9,16173.6,16180.3,16187.4,16195.6,16202.8,16209.9,16215.5,16223.7,16229.9,16237.1,16244.4,16252.2,16259.2,16267.5,16273.7,16282.1,16290.3,16296.7,16305,16311.2,16319.6,16327.9,16334.2,16340.7,16350.8,16359.2,16365.4,16373.8,16382.2,16390.5,16398.8,16407.2,16415.5,16423.9,16432.2,16440.5,16450.6,16459.3,16467.6,16476.9,16486.3,16496.7,16507.3,16517.7,16527.9,16538.3,16549.1,16561.2,16569.6,16580,16592.4,16599.5,16609,16615.2,16621,16624.3,16631.5,16634.3,16637.8,16642.6,16646.6,16651.1,16657.3,16662.7,16667.9,16675.2,16682.4,16687.7,16692.9,16701.2,16707.5,16713.7,16722.1,16728.3,16734.6,16739.8,16747.9,16755.5,16762.4,16770.1,16778.7,16785.6,16793,16801.3,16807.6,16813.9,16822.5,16830,16836.8,16843.1,16849.5,16857.7,16863.9,16870.3,16879.1,16886.9,16893.1,16901.4,16909.8,16918.1,16928.5,16936.8,16947.2,16955.6,16966,16976.4,16986.7,16997.1,17006.8,17015.9,17026.3,17035.1,17046.3,17055.4,17065.8,17073.4,17081.9,17090.8,17099.1,17107.5,17115.6,17124.1,17131.5,17138.7,17147,17153.3,17159.6,17166.8,17172.9,17181.3,17187.5,17193,17200,17206.2,17212.4,17218.1,17224.2,17230.1,17236.3,17243,17249.8,17255.6,17259.9,17266.2,17272.4,17278.9,17285.1,17293.3,17299.5,17305.8,17313.5,17320.3,17326.7,17335.9,17342,17351.7,17360,17366.1,17374.6,17382.9,17390.3,17397.5,17405.9,17414.1,17420.5,17428.8,17437.1,17445.4,17451.7,17460.1,17468.4,17476.7,17485.1,17493.4,17503.8,17512.1,17520.4,17528.8,17539.2,17547.5,17557.9,17564.6,17576.9,17586.9,17599.3,17608.3,17619.8,17629.3,17641,17651.5,17661.9,17670.8,17681.6,17694.2,17705.5,17715.8,17727.6,17740.2,17751.3,17761.7,17772.9,17782.5,17792.8,17804.2,17813.7,17826.8,17836.5,17846.9,17857.3,17867.7,17878,17889.3,17898.8,17911.4,17921.8,17932.1,17940.8,17952.9,17963.3,17972.6,17982.1,17993.4,18004.9,18013.2,18023.6,18032,18041.8,18050.7,18059,18066.8,18071.7,18079,18084.2,18088.3,18095.6,18102.9,18111.2,18118.4,18125.8,18132.1,18140.4,18150.8,18159.2,18167.5,18174.4,18182.1,18190.4,18198.7,18207.1,18215.4,18224.8,18234.1,18242,18250.1,18259.1,18267.5,18275.8,18283.3,18290.5,18298.7,18308,18317.5,18325.8,18332,18340.4,18347.5,18354.8,18363.3,18371.6,18380,18388.3,18396.2,18403.3,18412.1,18421.6,18428.9,18436.3,18444.6,18451.1,18458.5,18465.4,18473.8,18480,18490,18495.9,18504.9,18511.4,18518.7,18525.9,18534.2,18540.5,18548.8,18556.1,18563.4,18570.5,18578,18586.7,18595.2,18603,18610,18617.6,18624.5,18632.2,18638.5,18646.8,18653.1,18661.4,18667.7,18676,18682.3,18691.4,18698.9,18705.3,18713.5,18721.8,18728.2,18736.4,18744.8,18750.9,18759.3,18767.6,18773.9,18782.2,18788.5,18796.8,18805.1,18811.5,18819.8,18830.2,18836.4,18844.3,18851,18857.3,18864,18871.9,18878.2,18886.5,18892.7,18900.3,18907.3,18913.6,18921,18928.2,18936.5,18940.7,18950,18957.4,18965.7,18971.9,18980.2,18988.5,18996.9,19005,19011.5,19019.5,19026.1,19034.4,19040.7,19049,19055.2,19063.6,19071.3,19078.2,19087.4,19094.8,19101.9,19109.4,19115.7,19121.9,19129.3,19136.5,19142.8,19151.1,19159.4,19165.7,19171.8,19178.2,19185.7,19192.7,19197.5,19206.1,19213.3,19219.9,19226.2,19234.5,19240.8,19247,19255.4,19261.6,19270,19278.3,19285.4,19292.8,19298.3,19307.4,19313.7,19321.8,19328.4,19336.6,19342.9,19351.2,19358.1,19365.8,19373.9,19380.4,19390.5,19397,19405.4,19412.3,19420,19427.9,19434.6,19442.9,19450.7,19457.5,19465.8,19473.5,19480.4,19488.7,19496.3,19505.4,19513.7,19520,19528.3,19536.6,19542.9,19551.2,19559.5,19565.8,19574.1,19581.3,19588.7,19597,19603.3,19611.6,19619.7,19626.2,19634.6,19641.6,19651.2,19657.5,19665.8,19672.1,19680.4,19686.7,19693.3,19700.1,19707.5,19714,19721.6,19728.3,19734.8,19742,19751.3,19757.5,19763.1,19771.1,19778.1,19784.6,19790.8,19797.2,19803.4,19810.2,19817.8,19824.3,19830.6,19836.8,19843.1,19849.9,19856.2,19862.3,19868.4,19875.4,19882.7,19888.9,19895.3,19903,19909.1,19916.1,19922.5,19928.6,19934.9,19941.9,19947.5,19953.7,19960.9,19967.1,19973.7,19978.7,19985.8,19992.1,19998.3,20004.5,20011.8,20018,20024.6,20030.9,20036.7,20043.5,20050.9,20056,20064.7,20070.6,20077.1,20084.4,20089.6,20096.4,20102,20108.3,20115.5,20122.1,20127.9,20134.2,20141.3,20147.8,20154,20160.2,20166.5,20174.8,20181.2,20188,20196.4,20202.7,20210.7,20218.2,20223.4,20231.7,20239.6,20247.2,20254.1,20260.4,20268,20275,20281.5,20288.7,20295.8,20302.1,20310.4,20318.8,20325,20333.4,20339.3,20347.9,20355,20362.5,20370.8,20378.9,20385.5,20393.8,20402.1,20409.5,20416.7,20427.1,20435.4,20443.7,20452.1,20460.4,20468.7,20475.3,20483.3,20491.6,20499.9,20507.4,20516.6,20524.9,20531.2,20537.5,20545.8,20552.1,20561.7,20568.7,20575,20581.2,20587.5,20595.9,20602.1,20610.1,20616.7,20623.6,20631.3,20638.6,20645.9,20654.2,20661.9,20668.1,20677.1,20685.5,20693,20700.1,20708.4,20716.7,20725.1,20731.3,20739.6,20748,20756.3,20764.6,20770.9,20779.1,20787.5,20795.7,20802.1,20810.5,20818.8,20827.1,20835.5,20843.8,20850.1,20858.3,20866.7,20873.4,20881.3,20889.6,20896.2,20906.3,20912.5,20920.9,20929.2,20937.5,20945.9,20955.1,20963.4,20972.9,20981.2,20989.4,20997.9,21004.3,21014.5,21022.8,21031.2,21039.4,21047.9,21056.2,21066.6,21074.9,21081.8,21091.6,21099.9,21108.3,21116.5,21124.9,21133.2,21141.5,21149.9,21158.2,21168.6,21176.8,21187.1,21195.7,21204,21212.3,21220.7,21229,21237.6,21247.6,21257.3,21266.4,21276.8,21287.2,21297.6,21308,21318.4,21328.8,21340.2,21349.6,21360,21370.4,21378.7,21387.4,21397.4,21405.8,21416.2,21424.4,21432.8,21441.1,21451.3,21459.8,21468.2,21478.3,21487,21497.3,21505.6,21513.9,21520.9,21531.4,21541,21549.3,21557.6,21566,21574.3,21582.6,21590.9,21599.3,21607.6,21615.9,21624.3,21630.5,21636.8,21643.3,21649.5,21657.6,21661.2,21669.2,21673.4,21676.5,21679.3,21680.8,21685,21689.2,21696.7,21702.6,21708.7,21716.3,21724.3,21730.9,21739.2,21747.5,21753.8,21762.1,21769.9,21776.7,21785.1,21793.3,21800.6,21808,21814.5,21822.6,21828.9,21835.1,21843.2,21849.7,21855.9,21862.2,21869.5,21876.8,21883.1,21890.2,21897.6,21903.9,21910.8,21918.5,21925.3,21932.1,21941.1,21947.7,21953.9,21962.3,21968.6,21976.3,21983.2,21991.5,21997.8,22006.1,22012.3,22020.7,22026.9,22035.3,22041.5,22049.9,22055.9,22062.4,22070.6,22077.9,22085.5,22091.7,22101.9,22108.1,22114.5,22122.6,22129.1,22137,22143.6,22151.9,22158.3,22165.5,22172.8,22177.4,22185.2,22191.6,22199.9,22208.3,22214.5,22224.9,22231.2,22239.5,22247.9,22254.1,22262.4,22270.7,22277,22285.3,22291.6,22299.9,22308.2,22314.4,22322.6,22327.8,22335.4,22340.2,22347.8,22354.2,22361,22368.2,22375,22381.3,22387.6,22395.2,22402.1,22408.4,22414.9,22422.9,22429.3,22437.6,22445.9,22452.9,22460.5,22467.8,22475.1,22481.4,22489.6,22496.8,22504.2,22511.3,22518.9,22525.8,22533.5,22541.8,22550.1,22556.4,22564.7,22573,22580.8,22587.6,22594.3,22606,22612.6,22620.9,22628.5,22635.5,22643.3,22652.2,22658.6,22666.8,22673,22683.4,22689.7,22696,22702.8,22709.8,22715.6,22721.8,22728.1,22733.6,22739.8,22746.7,22752.4,22757.1,22762.8,22768.5,22773.3,22777.3,22783.7,22789.3,22794.5,22800.7,22806.7,22812.2,22818.4,22823.6,22829.8,22836,22842.3,22847.4,22853.7,22859,22865.1,22870.3,22875.7,22882,22888,22894.5,22898.7,22906.7,22911.8,22917.5,22922.2,22928,22934.2,22941.9,22947.1,22953.9,22959.2,22965,22971.1,22978.1,22984.2,22990.7,22996.9,23002.2,23008,23013.6,23019.9,23028.1,23034.4,23040.7,23047,23053.3,23060.3,23067.5,23074.1,23080.4,23087.2,23095,23101.2,23107.5,23115.2,23122.1,23128.3,23138.1,23145,23151.5,23157.8,23165.9,23172,23179.8,23186.7,23193,23199.3,23206.4,23213.9,23220.1,23228.3,23234.6,23241.5,23248,23255.2,23261.8,23268.1,23276,23282.2,23288.9,23295.2,23301.9,23309.2,23316.1,23322.3,23328.6,23336.9,23343.2,23349.4,23359,23365.8,23373.1,23379.7,23387,23393.2,23399.5,23407.7,23414.1,23421.6,23427.8,23432.9,23439.4,23446.5,23453.4,23461.5,23466.3,23474.6,23480.8,23486.1,23493.3,23499.6,23505.8,23512.2,23518.4,23524.4,23531.8,23539.2,23545.6,23551.8,23558,23565.4,23570.6,23577.9,23585.1,23591.4,23597.9,23604.3,23610.5,23617.2,23624.8,23630.8,23637.4,23643.7,23651,23658.2,23664.5,23671.3,23679.1,23685.3,23693.7,23700,23707.1,23714.5,23721,23727.3,23735.4,23743.6,23750,23758.3,23765.6,23772.9,23779.2,23787.5,23793.8,23801.9,23808.2,23815.4,23822.8,23829.2,23837.6,23843.8,23852.2,23858.4,23867.7,23874.8,23883.3,23890.1,23898,23906.3,23912.9,23920.9,23929.3,23935.4,23943.8,23954,23960.5,23968.8,23977.1,23983.4,23990.7,24000.1,24006.3,24014.6,24021.2,24031.3,24038.3,24045.9,24054.3,24062.6,24070.4,24079.2,24087.6,24095.8,24104.2,24111.9,24118.8,24127.2,24135.5,24143,24149.9,24158.3,24164.7,24173,24181.3,24187.6,24195.9,24202.2,24209.4,24216.6,24223,24229.3,24235.9,24245.6,24251.9,24258.5,24265.9,24272.6,24279.3,24284.5,24291.9,24298.6,24305.7,24312.7,24319,24325.3,24331.8,24339.1,24346.1,24354.2,24360.7,24367,24373.3,24380.1,24385.7,24393,24399.2,24405.2,24412.7,24418.9,24425.4,24431.7,24438.4,24443.8,24451.1,24457.4,24465.1,24471.9,24477.6,24483.3,24490.1,24496.7,24503,24507.3,24513.4,24520.7,24526.9,24534,24541,24548.6,24554.9,24563.2,24569.5,24576.7,24584,24590.7,24598.6,24604.8,24611.9,24619.5,24625.7,24634.1,24639,24649.5,24653.7,24663.8,24669.9,24677.9,24684,24692.4,24700.8,24709.1,24716.3,24723.7,24732.1,24738.3,24746.7,24755,24761.3,24769.6,24775.8,24784.1,24793.5,24801.7,24809.1,24816.2,24823.7,24832,24838.4,24846.3,24854.9,24863.4,24870.2,24877.8,24886.3,24892.6,24900.9,24908.5,24915.7,24923.8,24932.1,24938.4,24946.7,24955.1,24961.3,24969.7,24978,24985.3,24992.6,24998.9,25006,25013.5,25019.7,25026,25034.3,25040.9,25046.8,25055.1,25061.5,25069.8,25078.1,25084.2,25091.1,25099,25105.1,25112.4,25121.2,25128.2,25136.5,25144.8,25151.1,25159.4,25167.8,25178.2,25186.5,25193.8,25201.1,25208.3,25214.5,25222.8,25230.2,25238.3,25244.8,25253,25261.4,25269.8,25276.1,25284.4,25292.3,25299.1,25306.8,25313.7,25321.6,25328.3,25336.6,25343,25351.2,25359.5,25369,25376.2,25383.5,25390.8,25398.1,25405.3,25413.6,25419.9,25428.1,25434.5,25442.9,25451.7,25459.4,25465.8,25474.2,25482.1,25488.6,25496.7,25503.3,25510.6,25517.9,25524.2,25533.9,25540.9,25547.1,25553.7,25561.8,25566.8,25574.8,25581.7,25588.9,25595.2,25602.8,25609.7,25615.9,25622.8,25632.4,25638.8,25645.7,25651.9,25659.8,25666.1,25674,25680.7,25686.9,25695.1,25701.5,25709.2,25716.1,25723.8,25730.6,25737,25745.2,25751.6,25761.6,25767.9,25775.7,25781.9,25789.1,25795.3,25801.6,25807.8,25812.1,25820.3,25827.5,25835,25841.3,25847.3,25853.8,25859.7,25865.4,25872.6,25881,25887.7,25895.6,25901.3,25908.1,25916.4,25924.8,25931,25939.4,25945.6,25953.1,25960.2,25966.6,25975.9,25983.2,25989.4,25997.7,26005,26011.2,26018.6,26026.1,26033,26041.4,26047.8,26052.7,26060,26066.8,26073.5,26080.7,26085.9,26093.2,26098.4,26104.5,26110.5,26116,26120.8,26127.2,26133.5,26138.9,26145.1,26151.3,26156.5,26163.8,26169,26176.3,26183.5,26189.8,26196,26202.3,26210.6,26219.1,26225.3,26232.3,26238.5,26246.1,26252.4,26259.3,26266.6,26273.3,26280,26287.9,26294.1,26300.4,26307,26314.2,26321.3,26327.5,26335,26342.1,26348.4,26356.7,26364,26373.3,26379.6,26387.8,26396.1,26404.9,26412.9,26420.5,26429.6,26437.6,26446.2,26454.6,26462.9,26469.7,26481.3,26490,26498.3,26506.6,26514.9,26525,26533.7,26541.5,26554.1,26562.8,26573.2,26583.6,26591.8,26604.3,26614.7,26625,26637.5,26647.8,26658.3,26668.8,26679.7,26688.2,26701.3,26712.4,26722.7,26733.2,26743.6,26752.4,26763.4,26772.7,26783.1,26795.6,26803.9,26813.7,26822.7,26830.9,26839.3,26851.8,26860.1,26868.4,26876.7,26887.1,26895.4,26905.9,26914.2,26924.6,26935,26943.3,26953.7,26962.6,26972.4,26982.8,26993.8,27003.6,27013.9,27020.8,27032.7,27041,27051.5,27059.8,27070.2,27080.6,27088.9,27097.3,27105.6,27115.7,27124.3,27132.6,27142,27151.3,27159.6,27170.1,27180.4,27187.1,27197,27207.8,27217.9,27226.3,27236.7,27245.1,27255.4,27264,27274.1,27282.3,27292.9,27303.2,27313.6,27322,27330.3,27340.7,27349,27357.4,27369.5,27378.2,27390.4,27401,27411.3,27425.9,27436.3,27446.7,27459.2,27467.7,27477.9,27490.3,27499.1,27509.1,27519.3,27529.9,27539.1,27549.5,27561.1,27571.5,27581.9,27592.3,27602.6,27611,27621.4,27629.7,27640.1,27652.2,27660.9,27669.2,27677.6,27687.5,27696.3,27704.4,27715,27723.3,27733.5,27742,27754.5,27762.9,27773.2,27781.4,27789.9,27800.3,27808.5,27819.1,27827.4,27837.8,27850.2,27858.5,27866.9,27876.6,27883.9,27891.8,27900.4,27908.5,27918.9,27927.3,27935.6,27941.8,27952.3,27960.6,27966.8,27975.2,27981.4,27991.7,27998,28004.4,28012.3,28019,28027.3,28035.7,28040.4,28049.1,28054.9,28064.3,28071.1,28078.8,28085.7,28093.3,28100.3,28108.1,28117,28124.4,28131.5,28139.9,28148.2,28154.5,28164.2,28172.1,28179.5,28187.8,28196,28204.3,28212.8,28221.1,28228.1,28237.8,28246.1,28252.4,28260.7,28267.4,28273.2,28281,28287.8,28296.1,28300.7,28308.7,28315.8,28323.3,28329.5,28337.9,28346.1,28352.3,28357.8,28365,28371.3,28377.6,28383.8,28390.1,28396.3,28402.6,28408.7,28416.9,28423.5,28431.4,28438.1,28446.4,28453.7,28461,28467.7,28477.7,28483.9,28490.2,28496.5,28504.1,28509,28515.3,28521.5,28525.2,28529.1,28531.5,28534.7,28537.7,28540.5,28541.3,28542.2,28544,28546.3,28548.8,28550.8,28550.8,28550.8,28552.1,28553.6,28555.3,28558,28560.4,28562.9,28565.7,28569,28574.4,28579.4,28586.3,28593.6,28598.1,28606.2,28612.5,28621.9,28629.2,28635.4,28641.7,28648,28654.2,28658.7,28666.7,28673,28681.1,28687.6,28695.1,28701.3,28709.1,28715.4,28721.6,28727.3,28733.6,28739,28743.4,28748.4,28754.8,28761.1,28768.3,28774.6,28781.6,28787.9,28794.2,28800.5,28808.8,28815.1,28823.3,28829.7,28836.8,28844.3,28850.4,28858.6,28865.1,28873.2,28879.7,28888.1,28896.4,28903.7,28911,28918.8,28925.6,28933.9,28940.3,28948.5,28954.7,28961,28971.4,28977.5,28985.7,28990.4,29000.7,29006.9,29013.2,29019.4,29026.3,29033.9,29040.2,29045.3,29052.7,29059.1,29065.1,29071.3,29077.6,29082.7,29090.8,29097.3,29105.1,29113.4,29121.7,29130,29140.4,29150.8,29161.2,29170.9,29184.1,29198.3,29210.8,29223.6,29237.9,29251.5,29267.1,29283.8,29296.9,29313,29327.3,29339.7,29352.1,29360.8,29371.3,29379.2,29389.7,29398.1,29405,29412.9,29418.9,29426.9,29431.9,29437.6,29444,29450.3,29455.7,29462,29467,29473.3,29478.4,29483.8,29489.9,29496.3,29503.3,29508.8,29513.9,29518.5,29523.5,29529.6,29535.8,29541,29546.4,29552.8,29558.7,29565.5,29569.5,29577.8,29583.4,29588.3,29594,29600.2,29605.4,29611.6,29615.8,29623.4,29630.2,29637.6,29644.7,29653.1,29659.3,29667.7,29676,29684.3,29692.6,29698.8,29707.3,29717.6,29726,29736.4,29745.1,29755.1,29765.5,29777.9,29786.3,29798.3,29808.6,29818.7,29829.8,29839.8,29850.7,29862.6,29873.6,29885.7,29896.4,29908.9,29921.4,29933.9,29950.4,29962.9,29977.5,29990.1,30005.2,30017.5,30033.4,30046.1,30058.2,30073.5,30086.1,30097.8,30110.3,30121.4,30135.2,30147.6,30160.1,30170.4,30183,30194.6,30205.9,30218.3,30230.3,30244.9,30255.7,30269.1,30280.6,30291,30303.5,30313.9,30322.3,30334.7,30343.2,30353.4,30361.7,30370.1,30378.7,30388.8,30397.1,30406,30414.3,30422.1,30430.4,30438.2,30447,30455.4,30461.6,30470,30478.3,30486.7,30494.6,30505,30513.7,30523,30534.5,30544.8,30554.3,30567.8,30580.3,30590.7,30601.3,30613.7,30622.3,30635.6,30647,30659.2,30672.2,30684.1,30695.4,30707,30717.6,30729.2,30744.4,30755.2,30769.3,30781.7,30795.6,30807.8,30818.9,30835.3,30847.9,30863.7,30875.2,30889.6,30901.1,30912.6,30924.2,30937.5,30947.8,30958.2,30970.7,30979.8,30991.5,30999.8,31010.3,31018.5,31028.9,31037.2,31047.3,31057,31065.8,31074.8,31083.1,31091.4,31101.8,31110.1,31118.5,31128,31137.2,31145.5,31154.6,31164.3,31172.6,31180.9,31188.1,31197.5,31205.9,31214,31220.4,31228.8,31235.8,31243.4,31251.7,31258.6,31268.3,31274.7,31283,31290.8,31297.6,31306,31312.2,31319.8,31326.8,31333.3,31342.2,31349.8,31358.1,31364.4,31370.7,31377.6,31385.2,31391.4,31397.6,31402.8,31409,31415.7,31422.7,31429.1,31435.3,31441.6,31447.5,31452.6,31457.8,31462.4,31467.2,31473.3,31478.7,31483.5,31488,31493.2,31498.2,31505.4,31508.8,31514,31519.1,31524.1,31526.9,31532.7,31536.9,31541.8,31548.3,31553.5,31558.6,31564.9,31570.1,31575.6,31581.6,31586.8,31592.3,31598.2,31604.4,31610.1,31615.8,31621.6,31628.3,31633.5,31638.7,31643.9,31648.8,31654.5,31659.5,31663.7,31669.7,31676.1,31681.1,31686.5,31690.7,31695.8,31701,31705.1,31710,31714.6,31719.7,31725.4,31730.1,31735.3,31740.4,31745.1,31750.9,31756.1,31762.2,31766,31771.9,31777.9,31784.1,31791.1,31797.4,31803.6,31810,31815.7,31822.4,31828.8,31836,31842.6,31849.5,31855.8,31861.9,31868.8,31876.4,31882.9,31891,31897.5,31904.4,31910.5,31918.4,31928.8,31933.5,31942.3,31949.6,31957.9,31964.2,31972.5,31978.8,31986.4,31993.4,31999.7,32007.1,32014.3,32020.5,32028.8,32037.2,32043.4,32049.6,32056.5,32063.1,32070.2,32076.7,32083,32089.3,32096.3,32103.5,32110.2,32116.4,32122.7,32131.6,32137.3,32143.6,32149.8,32158.2,32164.4,32170,32176.9,32182.4,32187.6,32194.9,32202,32208.3,32213.6,32220.8,32229.1,32237.4,32243.4,32252,32259.1,32268.4,32276.9,32283.1,32293.7,32301.6,32306.8,32315.1,32322.5,32329.1,32337.4,32343.7,32350,32356.2,32362.8,32369,32376.3,32382.1,32388.8,32395.9,32402.1,32408.4,32414.6,32421,32427.2,32434.4,32441.7,32448,32456.2,32462.3,32470.9,32479.2,32487.7,32496,32504.3,32512.6,32521,32529.3,32535.6,32545.9,32554.2,32562.6,32570.3,32577.2,32585.5,32593.8,32599.2,32608.4,32614.8,32625.1,32631.3,32637.6,32643.9,32650.1,32655.3,32662.5,32668.7,32674.9,32683.6,32689.7,32699.8,32708.5,32719.3,32729.3,32740.7,32753.7,32763.7,32777.1,32790.8,32803.7,32818.3,32831,32845.1,32855.9,32868,32880.6,32891.2,32904.5,32916.1,32928.6,32939,32948.1,32957.8,32968,32976.1,32983.2,32995.2,33003.5,33011.8,33020.1,33027,33034.7,33043.1,33051.4,33059.7,33068,33074.3,33082.6,33088.9,33097.2,33103.5,33107.9,33116.1,33125.5,33132.6,33138.9,33145.1,33151.4,33158.3,33164,33170.5,33176.4,33182.8,33190.8,33196,33201.6,33206.6,33212.6,33219.3,33224.6,33230.3,33235,33240.7,33247.4,33252.1,33258,33262.5,33268.4,33273.9,33279.1,33284.3,33290.1,33295.6,33300.6,33306,33310.9,33316.5,33320.6,33326.3,33331.2,33338.3,33343.8,33351.4,33358.3,33364.6,33375,33383.4,33391.7,33400,33408.3,33416.7,33423.3,33434.7,33441.7,33449.8,33457.1,33464.6,33472.9,33481.2,33489.6,33497.9,33506.1,33514.5,33522.8,33529.1,33537.3,33542.5,33548.3,33553.9,33559.2,33563.8,33567.3,33570.4,33572.7,33577.4,33583.1,33587.8,33594.1,33598.3,33605.5,33612.9,33619.1,33627.5,33635.8,33644.1,33650.4,33658.7,33667,33677.3,33685.8,33696.1,33706.2,33716.9,33727.3,33737.7,33746.2,33756.3,33768.9,33777.2,33787.6,33797.3,33806.3,33816.7,33826.4,33835.4,33843.7,33852.1,33862.5,33868.7,33877.1,33885.4,33893.7,33902,33910.3,33918.4,33926.9,33935.3,33943.6,33951.9,33960.3,33970.6,33979,33985.3,33993.6,34001.9,34008.2,34015.2,34024.9,34033.2,34039.9,34046.1,34054,34060.3,34066.6,34074.9,34081.2,34089.8,34097.1,34104.1,34110.3,34116.8,34124.2,34130.2,34137.5,34143.7,34150,34156.9,34162.5,34168.8,34175.9,34184.6,34191.4,34197.6,34203.9,34210.5,34216.8,34223,34229.3,34235.5,34241.8,34248.1,34253.5,34262,34267.8,34274.5,34279.7,34285.9,34292.1,34298.1,34304.3,34310.8,34317,34323.3,34330.2,34335.8,34344.1,34350.4,34357.4,34364.8,34371.2,34377.5,34383.8,34390.4,34396.9,34404.2,34410.9,34415.8,34424.7,34431.7,34438,34444.2,34450.7,34457,34463,34468.8,34473.7,34477.9,34487.2,34492.3,34496.6,34503.8,34509,34515.3,34521.4,34527.7,34532.8,34538.1,34544.3,34550.8,34555.7,34565.1,34571.3,34577.5,34583.7,34588.4,34596.2,34601.3,34607.6,34613.5,34620,34626,34632.5,34638.7,34644.9,34651.2,34657.3,34663.5,34667.8,34676.1,34682.3,34688.5,34694.8,34702,34709.2,34713.7,34719.9,34726.2,34732.5,34740.4,34745.6,34751.3,34758.1,34764.3,34770.1,34778.4,34784.6,34792.3,34798.5,34805.5,34811.8,34822.1,34830.5,34836.8,34845.1,34853.4,34861.7,34870.1,34878.4,34884.8,34895,34902.1,34911.7,34918.4,34928.4,34936.7,34947.1,34955.4,34965.8,34974.1,34984.5,34992.8,35005.3,35013.6,35024,35033.7,35044.4,35053,35063.5,35073.9,35084.3,35094.7,35105.1,35117.3,35127.9,35137.6,35148.7,35159.1,35169.5,35179.9,35190.6,35202.7,35213.1,35223.5,35232.6,35244.3,35252.6,35263,35271.4,35279.7,35288,35298.4,35306.7,35313.3,35322.6,35329.6,35337.9,35346.3,35353.8,35361,35371.3,35379.6,35387.7,35396.3,35402.6,35410.8,35418.8,35427.5,35435.9,35443.3,35452,35460.9,35468.2,35475.4,35482.3,35492.1,35499.9,35508.8,35517,35525.4,35533.7,35542.1,35550.4,35556.1,35565,35575.4,35583.7,35590,35598.1,35604.6,35612.8,35621.1,35629.5,35636.7,35644.1,35650.4,35658.8,35665,35673.1,35680,35686.7,35694.2,35700.4,35708.8,35715,35724.4,35732.1,35740,35746.6,35754.6,35760.9,35769.2,35775.6,35782.9,35790.1,35796.2,35804.6,35813,35819.2,35825.5,35831.7,35837.9,35844.2,35849.3,35855.5,35861.8,35867.3,35873.5,35881.9,35887.7,35894.9,35900.7,35907,35913.2,35919.5,35925.1,35931.2,35936.5,35942.7,35948.9,35955.1,35961.3,35967.5,35973.7,35981.1,35986.3,35992.6,35998.8,36005,36010.1,36016.4,36022.4,36027.8,36032.3,36038.6,36044.4,36049.6,36055.8,36063.6,36069.3,36074.5,36079.7,36084.9,36091.1,36096.3,36102.6,36107.6,36112.9,36120,36124.4,36130.6,36134.8,36141,36146.2,36151.5,36157.6,36161.9,36167,36171.6,36176.3,36180.8,36184.6,36190.9,36195.4,36200.1,36204.4,36209.6,36212.8,36217.9,36222.3,36227.3,36230.8,36235,36239.1,36242.9,36246.8,36251.1,36255.8,36259.6,36263.4,36266.8,36269.9,36274.1,36278.3,36280.8,36284.5,36289.2,36293.2,36297.5,36301.1,36304.9,36310.1,36313.5,36317.8,36322,36325.2,36330.4,36334.6,36338.7,36343.5,36348.1,36352.3,36357.4,36361.5,36366.8,36371.9,36377.2,36382.4,36387.5,36392.8,36399,36405.2,36410.4,36415.9,36423.3,36429.5,36436.4,36443,36448,36455.4,36463.5,36470.1,36476.3,36484.7,36492.9,36501.3,36509.7,36517.4,36526.3,36536.6,36546.7,36557.5,36567.7,36578.2,36588.6,36599,36609.4,36619.7,36630.4,36642.6,36653,36663.4,36673.8,36684.2,36693.2,36705.8,36719.5,36728.7,36740.3,36752.8,36766.4,36777.7,36788.1,36798.4,36808.1,36821.3,36831.7,36843.8,36852.3,36862.7,36871.2,36879.5,36887.8,36896.1,36906.5,36914.9,36923.2,36930.3,36938.6,36946.1,36956.5,36963.5,36971.1,36977.9,36985.6,36991.9,36998.9,37006.5,37014.8,37021.1,37027.4,37034,37041.5,37047.5,37052.5,37058.2,37065.1,37071.3,37077.6,37083.8,37090,37096.3,37102.5,37108.8,37114.9,37121.3,37127.9,37133.6,37137.8,37142.9,37148.4,37153.3,37157.5,37160.5,37163.8,37167.5,37171.4,37175.2,37179.6,37184.3,37189.8,37194.9,37201.1,37206.4,37211.6,37217.7,37225.1,37230.2,37234.4,37239.6,37244.4,37249,37253.3,37259.3,37263.4,37266.7,37272.1,37278.3,37285.1,37290.5,37297.2,37303,37309.2,37315.1,37322.7,37328.6,37334.8,37340.8,37347.3,37353.6,37359.9,37368.2,37374.4,37380.7,37387.7,37393.3,37401.6,37407.8,37414.1,37420.4,37428.5,37435.4,37443.3,37449.3,37455.7,37463.9,37470.4,37476.6,37485,37491.2,37498.5,37505.8,37511.9,37520.4,37526.7,37535,37542.6,37549.1,37557.9,37564.3,37572.5,37580.8,37589.2,37597.5,37603.8,37614.1,37622.4,37630.8,37641.1,37649.5,37659.9,37668,37678.6,37686.9,37695.3,37703.6,37712.8,37722.3,37730.6,37739,37744.4,37753.1,37761.9,37770.2,37778.4,37784,37793.1,37801.4,37811.6,37820.2,37826.4,37834.7,37843.1,37851.4,37859.7,37868,37876.3,37884.7,37892.8,37897.8,37907.6,37915.9,37926.3,37933.3,37943,37951.3,37958,37968,37976.2,37983.9,37990.9,37996.7,38001.6,38007.8,38013.9,38020.1,38027.1,38034.7,38041,38049.3,38054.4,38063.9,38070.1,38078.4,38086.6,38093.1,38101.1,38107.7,38116,38122.3,38130.6,38138.5,38145.2,38153.5,38161.8,38170.2,38178.5,38185.1,38193.1,38201.4,38207.9,38216,38223.5,38230.6,38238.9,38245.2,38253.5,38259.8,38268.1,38274.4,38282.7,38290.9,38297.2,38305.6,38316,38321.2,38330.4,38338.9,38347.3,38353.5,38361.8,38368,38376.4,38383.1,38391,38399.3,38406.9,38414,38420.4,38430.6,38438.9,38447.3,38455.6,38463.9,38470.9,38479.5,38486.9,38497.1,38505.6,38514.8,38523,38532.4,38540.9,38547.2,38555.4,38563.9,38572.2,38582.5,38590.9,38597.6,38605.5,38613.8,38622.1,38630.5,38638.8,38647.1,38655.5,38663.4,38672.1,38680.4,38688.8,38695.1,38703.4,38711.7,38720,38726.3,38734.6,38741.4,38749.2,38757.5,38765.9,38772.1,38782.5,38790.9,38797.7,38805.5,38813.8,38820,38828.4,38834.6,38843,38849.2,38857.6,38865.9,38872.2,38880.5,38888.8,38897.2,38903.4,38913.8,38922.1,38928.4,38936.6,38945,38951.3,38959.6,38965.9,38974.2,38982.6,38990.9,38997.1,39005.5,39012.3,39020.1,39028.4,39036.8,39044.9,39053.4,39061.8,39070.1,39078.4,39085.9,39093,39102.5,39109.7,39116,39122.2,39130.5,39138.8,39145.1,39152.3,39161.8,39168,39176.1,39182.6,39187.8,39197.2,39203.2,39209.8,39216.6,39223.3,39230.6,39236.9,39244.8,39251.5,39257.8,39267.4,39274.4,39278.9,39288.2,39295.3,39301.5,39307.9,39316.1,39323.8,39330.7,39339.1,39345.3,39353.6,39361.9,39370.2,39379.1,39389,39397.3,39405.6,39416,39421,39430.6,39441,39449.3,39457.6,39464.2,39472.3,39479.4,39486.9,39495.2,39501.4,39511.8,39518.1,39524.5,39532.7,39539,39545.2,39552.5,39559.7,39566.1,39573.2,39582.4,39587.8,39595.3,39602.3,39609.9,39616.1,39624,39630.7,39639,39645.3,39652.6,39661.9,39670.3,39678.6,39689,39697.3,39709.8,39718.1,39728.5,39738.9,39747.2,39757.6,39768,39777.3,39786.7,39795.2,39805.4,39817.6,39826.2,39836.6,39845.4,39855.3,39865.7,39874,39882.4,39892.7,39899.5,39911.5,39923,39933.2,39943,39953,39965.5,39975.9,39985.8,39996.7,40007.1,40015.3,40025.7,40034.9,40044.5,40052.8,40063.2,40073.4,40084,40092.3,40100.6,40108.9,40119.2,40127.7,40136,40144.4,40152.7,40160.9,40169.4,40177.7,40186,40194.3,40204.7,40213,40223.4,40230,40242.2,40252.1,40262.9,40273.3,40283.6,40292.1,40302.4,40312.8,40323.3,40333.6,40342.2,40352.6,40361,40373.1,40383.5,40393.9,40406.4,40417,40427.2,40437.6,40447.9,40458.8,40470.8,40481.2,40491.6,40501.3,40513.8,40522.7,40533,40543.4,40553.9,40563.5,40572.6,40585.1,40595.5,40607.9,40618.3,40628.7,40637.2,40649.4,40660.1,40672.9,40684.8,40695.9,40706.4,40716.7,40725.2,40735.3,40745.1,40753.4,40761.8,40770.1,40776.7,40788.8,40798.4,40809.3,40821.6,40836.2,40846.9,40861.2,40877.9,40891.4,40905,40917.5,40923.7,40933.9,40953.1,40967.4,40983.9,40998.5,41011.5,41026.1,41039.9,41053.3,41066.4,41079.4,41089.8,41105.5,41116.4,41127.2,41141,41151.5,41161.8,41172.4,41184.2,41195.7,41206.2,41218.7,41229.1,41239.5,41247.8,41259.2,41268.8,41280.9,41293.5,41303.9,41311.1,41323.1,41333.4,41344,41352.4,41365.1,41376.7,41387.1,41397.5,41406.2,41415.6,41426.2,41437,41447.4,41455.7,41464.1,41475.3,41484.9,41493.2,41501.5,41509.7,41518.2,41526.5,41534.1,41541.1,41549.4,41555.7,41564,41572.4,41578.5,41587,41595.1,41601.6,41609.9,41618.2,41626.6,41634.3,41641.1,41649.5,41657.8,41667.5,41678.6,41686.4,41695.3,41703.6,41716.1,41724.4,41734.8,41745.2,41755.6,41766.1,41776.5,41786.7,41799.2,41809.6,41820,41830.4,41841.4,41853.1,41864.4,41876.1,41889.5,41901.5,41912.4,41923.4,41935.4,41946.8,41959.8,41971.6,41983.9,41994.3,42006.6,42017.4,42029.9,42042.3,42054.6,42067.1,42079.7,42092.1,42100.3,42115.2,42128.1,42139.9,42150.3,42161.2,42173.2,42184.3,42198.5,42209.3,42221.9,42233.4,42245.8,42257.3,42270.7,42282.4,42293.7,42305.5,42316.5,42328.5,42341,42351.8,42363.2,42374.7,42385.1,42397.5,42407.9,42420.3,42430.8,42444.2,42455.7,42466.4,42478.6,42489.3,42501.4,42509.1,42524.3,42534.7,42543.9,42553.4,42563.8,42576.2,42585.2,42595,42605.4,42615.8,42626.2,42636.6,42648.3,42657.4,42667.7,42676.1,42686.5,42697.9,42707.2,42717.7,42727.3,42737,42749.2,42761.3,42772.8,42784.8,42796.7,42809.1,42822.4,42833.7,42846.9,42859.9,42872.2,42885.1,42897.1,42909.8,42924.8,42935.8,42949.9,42960.8,42973.2,42985.4,42996.1,43010.5,43021,43033.3,43044.9,43056.5,43070.8,43081.2,43093.6,43102.5,43112.7,43122.8,43131.1,43137,43143.7,43148.6,43154.1,43160.9,43166.1,43171.3,43176.5,43182.7,43187.6,43193.1,43198.3,43203.5,43208.7,43214.8,43221.2,43226.3,43231.6,43237.8,43242,43248.3,43254.4,43258.7,43264.2,43269.2,43275.2,43280.4,43285.9,43291.8,43297,43302.6,43308.4,43313.7,43319.4,43325.1,43331.5,43336.5,43342.7,43348.7,43355,43361.2,43367.5,43373.8,43382.1,43390.4,43396.7,43405,43415.4,43423.7,43434.1,43442.8,43452.8,43459,43468,43476.2,43486.2,43494.4,43502.9,43511.2,43519.5,43527.8,43536.2,43544.5,43552.8,43561.2,43569.5,43577.8,43588.2,43594.5,43602.8,43611.1,43617.4,43623.4,43629.3,43638.2,43645.5,43652.8,43659.1,43669.4,43675.7,43682,43688.3,43694.6,43700.9,43707.8,43715,43720.2,43726.9,43734.2,43739.9,43745.6,43751.2,43756.8,43762.8,43767.7,43773.9,43779.4,43784.6,43790.7,43794.9,43801.1,43806.3,43811.5,43816.7,43822.1,43828.2,43833.3,43838.6,43843.8,43849.9,43855.2,43861.8,43868.1,43873.8,43879.1,43884.3,43889.5,43894.6,43899.9,43905,43910.1,43916.2,43920.7,43927.9,43934.9,43942,43949.6,43957.9,43966.2,43976.4,43984.9,43994.7,44005.7,44014.3,44024.7,44035,44046.5,44056.1,44068,44078.3,44088.8,44099.2,44106.5,44118,44127.4,44138.7,44147.1,44155.4,44163.7,44173.6,44182.4,44190.8,44198.2,44207.4,44215.7,44222,44230.3,44238.6,44245,44253.2,44261.6,44272,44280.2,44290.6,44299,44309.4,44317.7,44326.1,44334.8,44344.8,44351.1,44361.4,44367.7,44375.4,44381.9,44388.6,44396.9,44403.3,44409.6,44415.9,44421.9,44430,44432.5,44440.1,44446.3,44453.2,44458.4,44463.7,44469.9,44474.1,44479.1,44484.6,44490.6,44495.8,44502.1,44507.6,44514.5,44520.7,44525.9,44531.1,44536.1,44540.5,44545.7,44552.9,44559.9,44563.8,44572.4,44580.7,44587,44594.7,44602.7,44609.9,44618.1,44625.5,44631.7,44639,44645.3,44652.4,44659.7,44668,44673.2,44680.8,44687.1,44693.3,44701.1,44705.9,44712.6,44720.4,44728.8,44735.4,44741.3,44747.5,44755.1,44762.1,44767.6,44772.8,44778.9,44785.1,44790.7,44795.6,44801.8,44807,44812.9,44818.4,44823.6,44828.9,44837.1,44842.3,44847.8,44853.7,44858.6,44864.5,44870.8,44875.5,44881.2,44886.9,44892.1,44898.3,44903.8,44908.8,44913.9,44919.1,44924.4,44929.6,44934.7,44939.7,44946.2,44952.4,44956.6,44961.7,44968,44972.5,44977.4,44983.6,44989.8,44993.9,44999.1,45003.3,45007.5,45013.2,45017.9,45022,45026.1,45030.3,45034.5,45038.7,45042.8,45046.7,45052.1,45057.1,45061.6,45065.6,45070.9,45075.4,45080.3,45084.4,45089.6,45093.8,45099,45102.4,45107.3,45112.4,45117.7,45122.1,45127.1,45132.3,45137.4,45142.6,45147.3,45153,45158.2,45163.4,45168.6,45173.8,45180,45185.8,45191.2,45195.6,45201.9,45207.9,45213.3,45219.5,45224.7,45230.9,45236,45242.7,45248.5,45253.7,45260.1,45266.2,45270.4,45275.6,45280.8,45286,45291.2,45297.4,45302.6,45308.3,45312.5,45318.4,45323.9,45329.1,45334.8,45339.7,45345.2,45351.4,45356.6,45361.8,45366.9,45371.2,45377.3,45382.5,45387.7,45393.4,45398.9,45403.3,45409.3,45414.8,45419.2,45425.2,45430.4,45435.9,45440.7,45446.4,45452.2,45457.4,45463.6,45468.8,45475.7,45481.5,45486.5,45492.6,45498.6,45504.1,45510.4,45515.5,45521.7,45527.9,45534.2,45540.4,45546.8,45554.3,45561.2,45567.6,45573.8,45580.1,45586.4,45593.4,45600,45605.8,45613.6,45620.3,45624.5,45633.2,45640.6,45646.9,45652.5,45657.7,45664.9,45668.9,45674.1,45676.5,45681.2,45685.7,45689.9,45695.1,45700.3,45706.6,45712.8,45720.2,45726.4,45732.7,45741,45747.3,45755.6,45761.9,45768.8,45778.5,45786.9,45793.1,45801.4,45809.7,45816.5,45823.7,45830.6,45837.2,45845,45851.5,45859.8,45866.1,45873.5,45882.7,45888.9,45896.3,45902.6,45909.9,45917,45924.4,45930.7,45938.9,45945.2,45952.4,45959.9,45966.2,45974.1,45980.8,45987.6,45995.3,46003.1,46010,46018.3,46026.6,46034.3,46041.1,46049.5,46057.8,46068.1,46076.4,46084.9,46093.1,46101.6,46109.9,46118.2,46126.6,46134.9,46143.1,46154.4,46163.8,46172.3,46179.1,46189,46199.4,46206.4,46216,46226.3,46234.7,46243.1,46253.4,46261.8,46270.1,46280.5,46288.8,46295.1,46303.4,46309.9,46318,46324.4,46332.6,46340.9,46348.6,46355.6,46362.4,46372.1,46380.5,46388.7,46394.9,46401.2,46407.7,46415.7,46420.9,46426.4,46433.3,46440.6,46447.3,46454.1,46461.9,46468.2,46476.4,46480.7,46489,46499.4,46504.9,46512.1,46521.5,46530.7,46538,46547.3,46555.6,46562.9,46570.3,46578.6,46586.9,46595.2,46602.2,46609.8,46618.2,46625.1,46634.6,46643.2,46651.5,46659.8,46669.2,46678.4,46686.8,46695.2,46703.4,46716,46724.3,46734.1,46743,46753.4,46763.8,46774.2,46784.6,46795,46807.5,46820,46833.3,46844.6,46855.1,46867.4,46882.1,46893.1,46905.6,46917.9,46928.6,46938.3,46948.6,46957,46967.3,46975.7,46984,46993.8,47000.6,47009,47017.3,47023.5,47031.9,47039.9,47047.7,47054.9,47061.1,47067.4,47074.6,47081.9,47088.2,47095.4,47102.6,47110.9,47117.2,47123.7,47129.7,47136.7,47143.1,47150.3,47156.6,47162.8,47169.6,47175.8,47183.8,47190,47195.6,47201.8,47207.4,47215.5,47223.5,47230.1,47236.4,47242.6,47251,47257.2,47265.5,47273.9,47279.8,47288.4,47296.6,47303,47311.4,47319.7,47327.6,47334.3,47342.6,47350.9,47358.3,47365.4,47373.9,47382,47390.5,47400.9,47408.5,47417.4,47425.9,47434.2,47444.6,47453,47463.2,47471.7,47478,47490.4,47498.7,47507.1,47517.4,47525.8,47536.1,47546.3,47554.8,47563,47573.6,47581.9,47594.4,47602.7,47611,47621.4,47629.6,47640.1,47648.5,47658.9,47667.2,47677.6,47684.1,47695.9,47704.6,47715,47725.2,47733.8,47746.2,47754.6,47764.9,47775.3,47785.7,47794.3,47804.4,47811.7,47823.2,47834.2,47843.9,47853.1,47864.7,47874.1,47882.9,47894.6,47904.1,47913.7,47924.1,47935.4,47945.2,47954.1,47964.5,47974.5,47983.2,47993.6,48004,48012.3,48022.7,48033.2,48043.5,48053.9,48064.3,48072.6,48080.9,48091.3,48103.8,48112.1,48122.5,48131.6,48141.1,48151.6,48160.9,48170.3,48180.5,48191.7,48199.4,48209.8,48220.2,48228.8,48238.9,48247.3,48257.7,48266.1,48276.2,48284.7,48293,48303.4,48311.7,48322.1,48330.5,48340.7,48351.2,48361.1,48370,48380.3,48388.7,48399.1,48407.4,48417.8,48428,48436.5,48444.8,48455.3,48463.6,48471.9,48482.3,48490.6,48498.9,48507.3,48517.6,48526,48532.3,48542.6,48553,48561.4,48571.8,48580.1,48588.2,48596.7,48605.1,48613.1,48621.7,48628.6,48636.3,48642.6,48648.8,48653.5,48657.7,48662.9,48667.7,48673.3,48678.5,48684.4,48688.6,48697,48703.2,48709.5,48717.8,48725.5,48734.4,48742.7,48751.1,48759.4,48765.7,48776.1,48786.5,48795,48805.2,48813.5,48821.9,48830.2,48838.5,48848.9,48857.1,48864,48873.9,48882.2,48890.5,48898.9,48907.2,48915.5,48923.9,48932.2,48940.5,48946.9,48957.2,48967.6,48975.9,48984.2,48994.6,49002.9,49011.3,49019.6,49027.8,49036,49044.6,49055,49061.9,49071.6,49079.9,49088.3,49100.6,49109.1,49117.4,49127.4,49136.1,49144.5,49154.8,49163.2,49171.5,49179.8,49189.9,49200.6,49208,49217.3,49225.6,49236,49244.3,49252.6,49259.1,49269.3,49279.7,49288,49296.4,49305.9,49317.2,49325.5,49334.5,49343,49353.4,49360.8,49370.5,49381.3,49390,49398.3,49408.1,49417,49425.4,49435.3,49444.1,49454.5,49462.8,49471.1,49481.5,49489.8,49498.3,49508.7,49518.8,49527.3,49535.5,49545.9,49554.3,49564.7,49573,49580,49591.6,49600,49608.3,49618.8,49627.1,49634.8,49643.8,49654.2,49663.9,49672.9,49683.3,49691.6,49699.9,49708.3,49718.6,49727,49735.3,49747.7,49756.1,49764.3,49772.5,49783,49791.4,49801.8,49810.1,49820.5,49828.8,49838.9,49849.7,49860.1,49868.4,49877.8,49887.1,49895.4,49904.4,49914.1,49922.5,49934.9,49943.3,49951.6,49960.5,49970.3,49978.6,49987,49997.4,50005.7,50013.9,50024.4,50034.7,50043.1,50051.4,50059.7,50070.2,50078.5,50086.8,50099.3,50107.6,50115.9,50124.3,50134.7,50144.2,50153.4,50161.7,50170,50178.4,50186.7,50196.6,50205.4,50213.8,50222.1,50232.4,50240.8,50249.1,50257.4,50265.8,50273.8,50283.4,50294.9,50303.2,50311.3,50319.6,50326,50334.4,50341.5,50351.1,50359.4,50369.8,50377.2,50386.5,50396,50405.2,50413.5,50423.3,50431.4,50442.2,50450.9,50459.3,50469.4,50478,50488.4,50498.8,50507.2,50517.5,50527.7,50538.2,50548.7,50557.2,50566.1,50578,50588.6,50599.3,50608.9,50619.3,50631.8,50642.2,50653.7,50664.2,50674,50685.1,50695.6,50706,50718.6,50729.4,50739.9,50750.2,50760.6,50773,50781.4,50793.9,50804.2,50812.5,50824.9,50835.2,50846.1,50855.9,50868.6,50879.7,50889.4,50901.4,50914.4,50924.8,50933.4,50947.6,50957.1,50968.4,50978.8,50988.4,50997.5,51005.9,51016.2,51025.7,51034.4,51040.8,51049.6,51057.9,51066.2,51074.4,51080.6,51091.2,51099.3,51107.9,51116.2,51124.5,51132.8,51141.2,51149.5,51157.8,51166.1,51174.5,51182.3,51191.1,51198.6,51207.8,51216.1,51224.4,51232.7,51241.1,51247.6,51255.7,51263.7,51272,51275.9,51283.9,51289,51294.2,51299.4,51305.6,51309.9,51316.2,51322.9,51330.9,51338.9,51345.4,51353.8,51360.4,51368.4,51376.2,51382.9,51389.2,51395.9,51403.2,51412.1,51418.4,51423.5,51431.2,51438.4,51443.4,51451.8,51458,51466.4,51473.7,51480.9,51489.3,51495.5,51503.6,51512.2,51520.5,51528.6,51537.2,51545.5,51553.8,51562.4,51572.5,51581.8,51589.2,51597.8,51607.9,51618.3,51627.9,51638.4,51648.8,51659.3,51669.4,51682.5,51693.1,51706,51717.8,51730.5,51742.9,51753.4,51767.9,51776.1,51790,51803.1,51813.6,51826,51837.1,51851.5,51863.4,51874.5,51886.2,51899.1,51911.1,51921.5,51931.9,51943.5,51954,51965.8,51975.5,51988,51998.3,52008.7,52019.1,52031,52041.8,52050.3,52060.7,52071.1,52081.3,52092,52102.2,52112.6,52122.9,52131.4,52141.8,52152.4,52164.6,52172.9,52183.3,52192.6,52202.6,52213.5,52224.9,52233.2,52243.6,52251.3,52264.4,52272.6,52283.1,52291.4,52301.8,52309.2,52320.5,52328.9,52337.2,52345.5,52353.9,52362.1,52370.4,52376.7,52385,52393.4,52401.8,52408.7,52416.3,52424.7,52435,52443.4,52453.8,52464.2,52472.5,52482.9,52492.5,52503.7,52516.1,52526.5,52538.5,52551.1,52559.8,52572.2,52581.5,52590.9,52599.3,52609.7,52618.9,52626.3,52633.5,52642.9,52647.6,52657.6,52663.8,52670.6,52677.9,52684.7,52690.9,52697.2,52705.5,52713.3,52720.1,52726.3,52732.6,52739.2,52745.5,52753.5,52759.7,52766,52772.3,52780.6,52788.3,52795.2,52801.5,52807.8,52813.8,52821.1,52826.4,52830.6,52835.8,52839.9,52843.4,52845.7,52848.5,52853.9,52857.6,52864.4,52871.7,52877.3,52883.6,52890.8,52898.7,52904.9,52911.6,52918.6,52924.9,52931.1,52937.5,52943.7,52949.9,52955.2,52962.4,52968,52973.8,52979.1,52985.4,52991.7,52997.9,53006,53009.4,53016.8,53024.7,53031.4,53038.4,53045.9,53052.7,53060.5,53069.3,53076.9,53083.4,53091.7,53098,53104.5,53112.6,53117.9,53125.3,53130.4,53135.6,53141.9,53147,53153.3,53159.4,53166.9,53175.2,53183.4,53189.8,53198,53206.4,53215.4,53223.1,53231.4,53239.8,53248.1,53254.6,53262.6,53271,53279.3,53287.6,53295.4,53302.2,53310.5,53318.4,53327.1,53335.5,53343.8,53352.1,53358.4,53368.8,53377.1,53383.3,53391.7,53400,53409.6,53418.7,53429.1,53437.5,53447.9,53458.3,53468.9,53479,53489.3,53499.8,53509.4,53518.5,53528.9,53540.7,53547.6,53560.1,53568.4,53578.8,53588.9,53597.5,53609.9,53616.2,53628.7,53637,53647.4,53655.7,53666.1,53675.4,53684.6,53695.2,53704.1,53716,53724.3,53733.3,53743.9,53753.4,53761.8,53770.1,53778.4,53788.8,53799.2,53808.9,53817.9,53828.3,53836.6,53848.1,53857.4,53867.8,53876.1,53886.5,53894.6,53907.3,53913.8,53923.9,53934,53942.6,53951,53959.7,53968.2,53978,53985.1,53996.7,54007.1,54015.4,54023.7,54034.1,54042.4,54051.1,54061.2,54069.5,54077.8,54086.1,54094.4,54104.8,54113.1,54121.5,54133.9,54142.1,54150.5,54158.9,54167.2,54175.5,54183.7,54190.9,54198.5,54206.8,54215.1,54223.4,54232.4,54240,54250.3,54260.9,54269.2,54279.9,54289.9,54300.3,54312.1,54323.2,54335,54344.6,54358.4,54368.8,54381.3,54394.7,54408.2,54418.6,54430.9,54443.8,54460.1,54470.9,54485,54497.5,54508.4,54522.8,54536.7,54547.3,54560.5,54573.2,54585.7,54599.2,54609.6,54623.4,54636.3,54646.9,54661.4,54673.9,54686.1,54698.4,54709.2,54721.4,54730,54738.1,54748.7,54758.8,54767.4,54775.7,54784.9,54792.4,54800.7,54809.6,54819.4,54829.8,54838.1,54846.5,54854.7,54865.2,54873.5,54881.9,54890.2,54900.6,54908.9,54915.5,54925.6,54933.8,54942.1,54948.6,54960.9,54969.2,54976.2,54983.7,54992.1,55000.5,55008.8,55017,55023.4,55031.7,55040.1,55047.7,55054.6,55062.9,55073.3,55080.2,55088,55094.2,55102.5,55109.8,55117.1,55123.6,55131.7,55139,55146.3,55152.8,55160.9,55167.3,55175.3,55183.8,55190.1,55198.4,55206.7,55215,55223.4,55231.7,55240,55248.3,55256.5,55262.9,55271.3,55279.6,55287.8,55296.3,55304.6,55314.9,55322.3,55330,55339.3,55345.4,55354.5,55362.8,55369.3,55379.5,55387.8,55396.2,55402.5,55410.8,55417,55423.1,55431.6,55437.9,55445,55452.5,55460.8,55467.1,55475.4,55482.8,55489.8,55496.5,55503.3,55510.8,55516.6,55522.8,55529.1,55534.3,55540.1,55545.7,55550.9,55556.1,55563.1,55568.5,55573.1,55578.9,55583.1,55588.3,55592.4,55597.6,55601.3,55605,55610.1,55612.6,55615.3,55618.4,55619.3,55619.3,55619.3,55621.7,55624,55626.7,55630.2,55634.7,55639.8,55645.3,55651.5,55658.4,55665.4,55668.9,55676.1,55682.2,55689.3,55697.6,55705.9,55713.1,55720.5,55728.9,55737.2,55745.4,55755.2,55764.1,55772.5,55782.3,55791.3,55801.6,55809.9,55820.4,55828.7,55839.1,55847.4,55858.8,55868.2,55879.7,55889,55899.4,55909.8,55920.2,55930.5,55940.9,55953.4,55963.6,55974.2,55986.3,55997,56007.4,56019.9,56030.2,56042.7,56052.8,56064.9,56075.9,56086.3,56096.9,56110.5,56121.6,56132,56144.5,56154.9,56163.2,56175.7,56185.9,56196.4,56206.6,56217.2,56227.6,56237.2,56248.4,56258.8,56269,56279.3,56289.9,56298.3,56310.7,56319.1,56325.4,56333.6,56339.9,56346.2,56353.2,56360.8,56367.7,56373.3,56381.6,56389.9,56396.2,56405.1,56413.9,56421.2,56431.2,56437.8,56445.5,56454.5,56462.8,56471.1,56477.4,56485.7,56494.1,56502.2,56510.7,56519,56526.3,56533.6,56539.8,56547.5,56552.3,56558.6,56566.9,56573.2,56581.6,56589.9,56598.3,56606.6,56614.9,56623.2,56631.6,56642,56650.1,56658.6,56667.6,56677.3,56685.7,56693.9,56704.4,56714.7,56723.1,56731.4,56739.7,56746,56754.3,56764.7,56771.5,56777.4,56784,56790.2,56793.8,56799,56804,56806.6,56814.5,56821.2,56826,56833.7,56840.5,56847.9,56855.8,56862.9,56869.2,56877.5,56887.9,56896.2,56904.5,56912.9,56921.2,56929.5,56937.8,56948.2,56956.6,56964.9,56975.2,56983.6,56991.8,57001.1,57008.7,57018.7,57025.3,57033.6,57039.8,57045.7,57048.6,57053.5,57058.2,57059.6,57061.6,57062.8,57064.3,57067.1,57071.8,57078.1,57084.1,57090.5,57096.6,57101.9,57107.6,57111.7,57114.2,57115.8,57117.2,57118.6,57120,57121.8,57124.8,57129.1,57132.3,57137.4,57142.6,57147.8,57153.5,57157.7,57164.5,57170.7,57176.4,57184.8,57189.4,57195.6,57201.6,57207,57212,57215.7,57222.5,57226.1,57228.9,57228.9,57228.9],"series_type":"distance","original_size":7347,"resolution":"high"},"altitude":{"data":[67.8,67.8,67.8,67.6,67.6,67.6,67.6,67.6,67.6,67.6,67.8,67.8,67.8,67.8,67.8,67.8,67.8,67.8,68,68,68,68.2,68.2,68.4,68.6,68.6,68.8,69,69,69.2,69.2,69.4,69.4,69.6,69.6,69.8,69.8,70,70,70.2,70.4,70.6,70.8,71,71.4,71.6,71.8,72,72.4,72.6,73,73.2,73.4,73.6,74,74.2,74.4,74.6,74.8,75,75.2,75.4,75.8,76,76.2,76.4,76.6,76.8,77,77.2,77.4,77.6,77.8,78,78.2,78.2,78.4,78.6,78.8,78.8,79,79.2,79.2,79.4,79.4,79.4,79.6,79.6,79.6,79.6,79.6,79.6,79.8,79.8,79.8,80,80,80,80,80,80,80,80,80.2,80.2,80.2,80.2,80.2,80.2,80.2,80.2,80,80,80,80,80,80,80,80,80.2,80.2,80.2,80.4,80.4,80.6,80.6,80.8,81,81,81.2,81.2,81.4,81.4,81.4,81.6,81.6,81.8,81.8,82,82.2,82.4,82.4,82.6,82.8,82.8,83,83,83.2,83.2,83.4,83.4,83.6,83.6,83.8,84,84,84.2,84.4,84.4,84.6,84.6,84.8,85,85,85.2,85.2,85.4,85.4,85.6,85.6,85.6,85.6,85.8,85.8,85.8,85.8,85.8,85.8,85.8,86,86,86,86,86,86,86.2,86.2,86.2,86.4,86.4,86.4,86.4,86.4,86.6,86.6,86.6,86.4,86.4,86.4,86.4,86.4,86.4,86.2,86.4,86.2,86.2,86.2,86.2,86,86,86,86,86,86,86,86,86.2,86.2,86.4,86.4,86.6,86.6,86.8,87,87,87.2,87.4,87.4,87.6,87.6,87.8,88,88,88.2,88.2,88.4,88.4,88.6,88.6,88.8,88.8,88.8,89,89,89,89.2,89.2,89.2,89.4,89.4,89.4,89.6,89.6,89.6,89.6,89.8,89.8,89.8,90,90,90,90,90.2,90.2,90.2,90.2,90.4,90.4,90.4,90.4,90.4,90.4,90.4,90.4,90.2,90.2,90.2,90.2,90,90,90,89.8,89.6,89.6,89.4,89.2,89,88.8,88.4,88.2,87.8,87.4,87.2,86.8,86.4,86,85.6,85,84.6,84.2,83.6,83.2,82.6,82,81.2,80.8,80.2,79.6,79.2,78.6,78,77.6,77.2,76.8,76.2,75.8,75.6,75.2,74.8,74.6,74.4,74.2,74,74,73.8,73.8,73.6,73.6,73.6,73.6,73.6,73.6,73.6,73.8,73.8,73.8,73.8,73.8,73.8,74,74,74,74.2,74.2,74.4,74.4,74.6,74.8,74.8,74.8,75,75,75,75,75.2,75.2,75.2,75.2,75.4,75.4,75.4,75.4,75.4,75.4,75.4,75.4,75.2,75.2,75.2,75.2,75.2,75.2,75.2,75.2,75.2,75.2,75.2,75.2,75.4,75.4,75.6,75.6,75.6,75.8,76,76,76.2,76.2,76.4,76.6,76.6,76.6,76.8,77.2,77.4,77.6,77.8,78,78.2,78.6,78.8,79,79.4,79.8,80.2,80.6,81,81.4,81.8,82,82.4,82.8,83.2,83.6,84.2,84.6,85,85.2,85.6,86,86.4,86.8,87.2,87.6,87.8,88.2,88.4,88.8,89,89.2,89.6,89.8,90,90.2,90.4,90.6,90.6,90.8,91,91.2,91.2,91.4,91.4,91.4,91.4,91.6,91.8,92,92,92.2,92.2,92.4,92.4,92.4,92.4,92.4,92.4,92.2,92.2,92.2,92.2,92.2,92.2,92.2,92.2,92.2,92.2,92.4,92.6,92.6,92.8,93,93.2,93.2,93.4,93.4,93.6,93.6,93.8,93.8,93.8,94,94,94,94,94.2,94.2,94.2,94.2,94.2,94.2,94.2,94.2,94.2,94.2,94.2,94.2,94.4,94.4,94.4,94.4,94.6,94.6,94.6,94.8,94.8,94.8,95,95,95.2,95.2,95.4,95.4,95.4,95.6,95.8,95.8,96,96,96.2,96.4,96.4,96.4,96.8,96.8,96.8,96.8,97,97.2,97.2,97.4,97.4,97.4,97.4,97.4,97.4,97.4,97.4,97.4,97.2,97.2,97.2,97,97,97,97,97,97,97,97,97,97.2,97.2,97.4,97.6,97.8,98,98.2,98.6,98.8,99.2,99.4,99.8,100,100.2,100.4,100.4,100.6,100.6,100.6,100.6,100.6,100.6,100.6,100.6,100.6,100.6,100.6,100.6,100.4,100.4,100.4,100.2,100.2,100,99.8,99.8,99.6,99.6,99.6,99.4,99.2,99.2,99,99,99,99,98.8,98.8,98.8,98.8,98.8,98.8,98.8,99,99,99.2,99.2,99.4,99.6,99.6,99.8,99.8,100,100.2,100.4,100.6,100.6,100.8,101,101.2,101.4,101.6,101.8,102,102.2,102.4,102.4,102.6,102.6,102.8,102.8,103,103,103,103,103.2,103.2,103.2,103.2,103.4,103.6,103.8,104,104,104.2,104.4,104.4,104.6,104.8,104.8,104.8,105,105,105,105.2,105.2,105.2,105.4,105.4,105.4,105.6,105.6,105.6,105.8,105.8,106,106,106,106,106,106.2,106.2,106.2,106.4,106.4,106.4,106.4,106.6,106.6,106.6,106.6,106.6,106.6,106.6,106.6,106.6,106.6,106.6,106.6,106.6,106.6,106.6,106.6,106.6,106.6,106.6,106.6,106.6,106.6,106.6,106.6,106.6,106.6,106.6,106.6,106.8,106.8,106.8,106.8,106.8,106.6,106.8,106.6,106.8,106.6,106.6,106.8,106.8,106.8,106.8,106.8,106.8,106.8,106.8,106.8,106.8,106.6,106.6,106.6,106.6,106.4,106.4,106.4,106.2,106.2,106,106,106,106,105.8,105.8,105.8,105.8,105.8,105.6,105.6,105.6,105.6,105.6,105.4,105.4,105.4,105.4,105.4,105.4,105.4,105.4,105.2,105.2,105.2,105,105,104.8,104.8,104.6,104.6,104.6,104.4,104.2,104,103.8,103.6,103.4,103.4,103.2,103,103,102.8,102.6,102.4,102.2,102,101.8,101.4,101.4,101,100.6,100.4,100.2,100,99.8,99.6,99.4,99.2,99,98.8,98.8,98.6,98.4,98.4,98.2,98.2,98.2,98,98,97.8,97.8,97.6,97.4,97.4,97.2,97,97,96.8,96.6,96.2,96,95.6,95.2,94.8,94.4,94,93.6,93.2,92.8,92.4,92,91.4,91,90.6,90,89.4,89,88.6,88,87.6,87,86.4,85.8,85.2,84.6,84,83.4,83,82.4,82.2,81.8,81.6,81.2,81,80.6,80.4,80.2,80.2,80.2,80.2,80.4,80.4,80.6,80.8,81,81.4,81.8,82.2,82.6,83.2,83.6,84.2,84.8,85.4,86,86.4,87,87.4,87.8,88.2,88.6,89,89.4,89.8,90,90.4,90.8,91.2,91.4,91.8,92.2,92.6,92.8,93.2,93.4,93.8,94,94.2,94.6,94.8,95,95.2,95.4,95.8,96,96.2,96.4,96.6,96.8,97,97.2,97.4,97.6,97.8,98,98.2,98.4,98.4,98.6,98.6,98.8,99,99.2,99.2,99.4,99.4,99.6,99.8,99.8,100,100,100.2,100.2,100.4,100.4,100.4,100.4,100.4,100.4,100.2,100,99.8,99.6,99.2,99,98.8,98.4,98.2,97.8,97.6,97.2,97,96.6,96.2,96,95.8,95.4,95.2,95,94.8,94.6,94.4,94.2,94,94,94,94,93.8,93.8,93.6,93.4,93.2,92.8,92.4,92,91.4,91,90.6,90.2,89.8,89.6,89.4,89,89,88.8,88.8,88.6,88.6,88.6,88.6,88.6,88.6,88.6,88.6,88.6,88.6,88.6,88.6,88.6,88.4,88.2,88,87.8,87.6,87.4,87,86.6,86.2,85.6,85.2,84.8,84.4,84,83.8,83.6,83.6,84,84.2,84.6,85.2,85.8,86.4,87,87.6,88,88.6,89,89.6,90,90.6,91,91.4,91.8,92.2,92.6,93,93.2,93.6,94,94.4,94.6,94.8,95.2,95.4,95.6,95.8,96.2,96.4,96.6,96.8,97.2,97.4,97.6,98,98.4,98.6,98.8,99.2,99.4,99.6,100,100.2,100.4,100.8,101,101.4,101.6,101.8,102,102.4,102.6,103,103.4,103.8,104,104.4,104.8,105.2,105.6,106,106.4,106.8,107.2,107.8,108.2,108.6,109,109.4,109.8,110.2,110.6,111,111.4,111.6,112,112.2,112.4,112.4,112.6,112.8,113,113,113.2,113.2,113.2,113.2,113.2,113.2,113.2,113.2,113,113,112.8,112.6,112.6,112.4,112.4,112.2,112.2,112,112,111.8,111.8,111.6,111.6,111.4,111.4,111.2,111.2,111.2,111,110.8,110.8,110.4,110.2,109.8,109.6,109.2,108.8,108.4,108.2,107.8,107.4,107,106.6,106.2,105.8,105.4,105.2,104.8,104.4,104.2,103.8,103.4,103.2,102.8,102.6,102.2,102,101.8,101.6,101.6,101.4,101.4,101.4,101.4,101.4,101.4,101.4,101.6,101.6,101.8,101.8,102,102,102.2,102.2,102.2,102.4,102.6,102.8,103,103.2,103.4,103.4,103.6,103.8,104,104.2,104.4,104.6,104.8,105.2,105.4,105.6,106,106.2,106.6,106.8,107,107.4,107.8,108,108.4,108.8,109,109.4,109.8,110.4,110.8,111.4,111.8,112.4,112.8,113.2,113.6,113.8,114.2,114.4,114.4,114.4,114.4,114.4,114.2,114,113.8,113.6,113.2,112.8,112.4,112,111.6,111,110.6,110.2,109.8,109.4,109,108.8,108.6,108.4,108.2,108.4,108.4,108.8,109,109.4,109.8,110.2,110.4,110.8,111.2,111.6,112,112.4,112.8,113.2,113.6,114,114.4,114.8,115.2,115.4,115.6,115.8,116,116.2,116.4,116.6,116.8,116.8,117,117.2,117.2,117.2,117.4,117.4,117.4,117.4,117.4,117.6,117.6,117.6,117.6,117.6,117.6,117.6,117.4,117.4,117.2,117.2,117,117,116.8,116.6,116.6,116.4,116.2,116,115.8,115.8,115.6,115.4,115.2,115,114.8,114.6,114.4,114.2,114,113.6,113.4,113.2,113,112.6,112.4,112,111.6,111.4,111,110.6,110,109.6,109.4,109,108.8,108.4,108,107.8,107.6,107.2,107,106.8,106.6,106.4,106.2,106,105.6,105.4,105,104.8,104.4,104.2,103.8,103.6,103.4,103,102.8,102.4,102.2,101.8,101.6,101.2,101,100.6,100.2,99.8,99.4,99,98.6,98,97.6,97.2,96.8,96.2,95.8,95.2,94.6,94.2,93.6,93,92.6,92,91.8,91.4,91.2,91,90.8,90.6,90,89.8,89.4,89.2,88.8,88.6,88.4,88.4,88.2,88,88,87.6,87.4,87,86.6,86.2,85.8,85.4,85,84.6,84.2,83.8,83.4,83,82.8,82.6,82.4,82.4,82.2,82.2,82.2,82.2,82.4,82.8,83.2,83.6,84.2,84.8,85.4,86,86.8,87.4,88,88.6,89,89.6,90,90.6,91,91.4,92,92.4,92.8,93.2,93.6,94,94.4,94.8,95.2,95.6,96,96.4,96.6,97,97.4,97.6,98,98.2,98.6,98.8,99,99.2,99.4,99.6,99.8,100,100.2,100.2,100.4,100.6,100.8,100.8,101,101.2,101.2,101.4,101.4,101.4,101.4,101.6,101.6,101.6,101.6,101.6,101.6,101.6,101.6,101.4,101.4,101.2,101.2,101,101,100.8,100.8,100.6,100.6,100.4,100.2,100,99.8,99.8,99.6,99.4,99.2,99,98.8,98.6,98.4,98.2,98.2,98,97.8,97.6,97.6,97.4,97.2,97,96.8,96.6,96.6,96.4,96.4,96.2,95.8,95.6,95.4,95,94.8,94.6,94.2,93.8,93.4,93.2,92.8,92.4,92.2,91.6,91.2,90.8,90.4,90,89.6,89,88.6,88.2,87.8,87.2,86.8,86.4,86,85.4,84.6,84,83,82.2,81.4,80.6,80.2,79.8,79.8,79.6,79.8,79.8,80,80.2,80.2,80.2,80.2,80.2,80,80,79.8,80,80,80,80,80.2,80.4,80.6,81,81.2,81.4,81.6,81.8,82,82.2,82.4,82.6,82.6,82.8,82.8,83,83.2,83.2,83.4,83.4,83.4,83.4,83.4,83.4,83.4,83.4,83.4,83.4,83.6,83.6,83.6,83.4,83.4,83.4,83.4,83.4,83.4,83.4,83.4,83.2,83.2,83.2,83.2,83.2,83.4,83.4,83.6,83.8,84,84,84.2,84.4,84.4,84.4,84.4,84.6,84.6,84.6,84.8,84.8,85,85,85.2,85.2,85.4,85.6,85.6,85.8,86,86.2,86.4,86.6,86.6,86.8,86.8,87,87,87.2,87.2,87.4,87.4,87.4,87.4,87.4,87.2,87.2,87.2,87.2,87.2,87.2,87.2,87,87,87,87,87,87,87.2,87.2,87.2,87.2,87.2,87.4,87.4,87.6,87.6,87.8,88,88.2,88.4,88.6,88.8,89.2,89.4,89.6,89.8,89.8,90,90.2,90.4,90.6,90.6,90.8,90.8,90.8,91,91,91.2,91.4,91.4,91.6,91.6,91.8,91.8,91.8,92,92,92.2,92.2,92.4,92.6,92.6,92.8,93,93,93.2,93.2,93.4,93.4,93.6,93.6,93.8,94,94,94.2,94.4,94.4,94.4,94.6,94.8,94.8,95,95.2,95.2,95.4,95.6,95.6,95.8,95.8,96,96.2,96.2,96.4,96.6,96.6,96.8,97,97.2,97.2,97.4,97.4,97.6,97.8,97.8,98,98.2,98.4,98.6,98.8,99,99.2,99.4,99.6,99.8,100,100,100.2,100.4,100.6,100.8,101,101.2,101.4,101.6,101.8,102,102.2,102.4,102.6,102.8,103.2,103.4,103.6,104,104.2,104.6,104.8,105.2,105.6,105.8,106.2,106.6,107,107.2,107.6,107.8,108.2,108.4,108.8,109.2,109.4,109.8,110,110.4,110.8,111.2,111.4,111.8,112.2,112.6,113,113.2,113.6,114,114.4,114.8,115,115.4,115.6,116,116.2,116.6,116.8,117.2,117.4,117.8,118,118.4,118.6,119,119.2,119.4,119.8,120,120.4,120.6,121,121.2,121.6,121.8,122.2,122.4,122.8,123,123.2,123.4,123.8,124,124.2,124.4,124.4,124.6,124.6,124.8,124.8,125,125,125,125,125,125,125,125,125,125,125,124.8,124.8,124.8,125,125,125.2,125.2,125.4,125.6,125.6,125.8,125.8,125.8,125.8,125.8,125.8,125.8,125.8,125.8,125.8,125.8,125.8,125.6,125.6,125.4,125.2,125,124.8,124.6,124.2,124,123.8,123.4,123,122.4,122,121.4,120.8,120.2,119.6,119,118.2,117.4,116.6,116,115.6,115.2,114.8,114.4,114.2,113.8,113.6,113.4,113.2,113,112.8,112.6,112.4,112.2,112,111.8,111.6,111.4,111.2,111,110.8,110.6,110.4,110.2,110,109.8,109.4,109.2,108.8,108.4,108.2,107.8,107.6,107.2,106.8,106.6,106.2,105.8,105.4,105,104.6,104.2,103.8,103.4,103.2,102.8,102.6,102.2,101.8,101.4,101,100.6,100.2,99.8,99.4,99,98.6,98,97.4,96.8,96.4,95.8,95.4,94.8,94,93.6,93.2,92.6,92,91.4,90.6,89.8,89.2,88.6,88,87.4,87,86.6,86.2,86,85.8,85.6,85.6,85.4,85.2,85.2,85,84.8,84.8,84.6,84.6,84.6,84.6,84.6,84.6,84.6,84.6,84.6,84.6,84.4,84.2,83.8,83.6,83.4,83,83,82.8,82.8,82.8,82.8,82.8,82.8,82.6,82.6,82.6,82.6,82.6,82.6,82.8,83,83.2,83.6,84,84.4,84.8,85,85.4,85.8,86.2,86.6,87,87.4,87.8,88.2,88.6,88.8,89.2,89.6,90,90.4,90.8,91.2,91.6,92.2,92.6,93,93.6,94.2,94.6,95.2,95.6,96.2,96.6,97.2,97.6,98,98.4,98.8,99.2,99.6,100,100.4,100.8,101.2,101.6,101.8,102.2,102.6,103,103.4,103.8,104.2,104.4,104.8,105.2,105.6,106,106.4,106.8,107.2,107.6,108,108.4,109,109.6,110,110.6,111,111.6,112,112.4,113,113.2,113.6,114,114.2,114.4,114.6,114.6,114.8,114.8,114.8,114.8,114.8,114.6,114.6,114.6,114.4,114.4,114.4,114.2,114.2,114.2,114.4,114.4,114.6,114.8,115,115.4,115.6,115.8,116,116,116.2,116.6,116.8,117.2,117.6,118.2,118.6,119,119.4,119.8,120,120.2,120.4,120.6,120.8,120.8,120.8,121,121,121.2,121.2,121.2,121.2,121,120.8,120.8,120.8,120.6,120.4,120.4,120.2,120,119.8,119.6,119.4,119.2,119,119,118.8,118.6,118.4,118.2,118,117.8,117.8,117.6,117.4,117.2,117,116.8,116.6,116.4,116.2,116,115.8,115.6,115.2,115,114.6,114.2,114,113.4,113,112.4,111.8,111.2,110.6,109.8,109.2,108.2,107.4,106.6,105.6,104.8,104,103.4,102.8,102.4,102.2,102,101.8,101.8,101.6,101.8,101.8,101.8,102,102,102.2,102.2,102.4,102.6,102.8,103.2,103.4,103.6,103.8,104,104,104.2,104.2,104.2,104.2,104.4,104.6,104.8,105,105.2,105.4,105.8,105.8,106,106,106,106,105.8,105.6,105.4,105.2,104.8,104.4,104,103.6,103,102.6,102,101.6,101,100.4,99.8,99.4,99,98.6,98.6,98.4,98.4,98.6,98.8,99,99.2,99.6,100,100.4,100.8,101.4,101.8,102.4,102.8,103.4,103.8,104.4,105,105.4,106,106.4,106.8,107.2,107.6,108.2,108.6,109,109.2,109.6,109.8,110,110,110,110,110,109.8,109.6,109.4,109.4,109.2,109,108.6,108.4,108.2,107.8,107.6,107.4,107.2,106.8,106.6,106.6,106.4,106.2,105.8,105.6,105.4,105,104.6,104.4,104,103.8,103.4,103.2,102.8,102.6,102.2,102,101.6,101.2,100.8,100.4,100,99.4,99,98.4,98,97.6,97,96.4,95.8,95.2,94.6,94.2,93.6,93.2,92.8,92.2,91.8,91.4,91,90.6,90.2,90,89.6,89.2,88.8,88.6,88.2,88,87.6,87.2,87,86.6,86.2,86,85.8,85.4,85,84.8,84.4,84,83.6,83.2,82.8,82.6,82.2,82,81.8,81.6,81.4,81.2,81,80.8,80.8,80.6,80.6,80.4,80.2,80.2,80,79.8,79.6,79.4,79.2,79,79,78.8,78.6,78.6,78.4,78.2,78,77.8,77.8,77.6,77.6,77.4,77.4,77.4,77.4,77.6,77.8,77.8,78,78,77.8,77.8,77.6,77.6,77.6,77.4,77.4,77.4,77.4,77.4,77.2,77.2,77.2,77.2,77.2,77.2,77,77,77,77,77,77.2,77.2,77.2,77.2,77.2,77.2,77.2,77.2,77.4,77.4,77.4,77.6,77.6,77.8,77.8,77.8,78,78,78.2,78.2,78.2,78.4,78.4,78.4,78.6,78.6,78.6,78.6,78.4,78.4,78.4,78.4,78.6,78.6,78.6,78.6,78.6,78.8,78.8,78.8,78.8,79,79,79.2,79.4,79.4,79.4,79.6,79.6,79.6,79.6,79.6,79.6,79.6,79.4,79.4,79.4,79.4,79.4,79.4,79.4,79.4,79.4,79.4,79.4,79.4,79.4,79.6,79.6,79.8,79.8,79.6,79.6,79.6,79.6,79.8,79.8,80,80.2,80.4,80.6,80.8,81,81.2,81.2,81.4,81.6,81.6,81.8,81.8,82,82,82,82.2,82.2,82.2,82.2,82.4,82.4,82.4,82.4,82.4,82.6,82.6,82.6,82.6,82.6,82.8,82.8,83,83,83.2,83.2,83.2,83.4,83.4,83.4,83.4,83.6,83.6,83.8,83.8,84,84,84,84.2,84.2,84.4,84.4,84.6,84.6,84.8,85,85,85.2,85.2,85.4,85.4,85.6,85.6,85.8,85.8,86,86.2,86.2,86.4,86.4,86.6,86.6,86.8,86.8,87,87.2,87.2,87.4,87.6,87.8,87.8,88,88,88.2,88.4,88.6,88.8,89,89.2,89.4,89.6,89.8,90,90.2,90.4,90.6,91,91.2,91.4,91.6,92,92.2,92.4,92.8,93,93.4,93.8,94,94.4,94.6,94.8,95.2,95.4,95.8,96,96.4,96.6,96.8,97.2,97.4,97.6,98,98.2,98.6,99,99.2,99.6,100,100.2,100.4,100.8,101,101.2,101.4,101.8,102,102.2,102.4,102.6,102.8,103,103.2,103.4,103.4,103.6,103.6,103.8,103.8,103.8,104,104,104,104.2,104.2,104.2,104.2,104.2,104.2,104.2,104.2,104.2,104.2,104,104,104,103.8,103.8,103.8,103.6,103.4,103.4,103.2,103.2,103,103,102.8,102.8,102.6,102.6,102.6,102.4,102.4,102.2,102,101.8,101.8,101.8,101.6,101.6,101.4,101.4,101.2,101.2,101,101,100.8,100.8,100.6,100.6,100.4,100.4,100.2,100.2,100.2,100,100,100,100,100,99.8,99.8,99.8,99.6,99.6,99.6,99.6,99.8,99.8,99.8,99.8,99.8,99.6,99.6,99.8,99.8,99.8,99.8,99.8,100,100,100,100,100,100,100.2,100.2,100.2,100.2,100.2,100.4,100.4,100.6,100.6,100.8,100.8,101,101,101.2,101.2,101.4,101.4,101.6,101.6,101.6,101.6,101.8,101.8,101.8,101.8,101.8,101.8,101.8,101.8,101.8,102,102,102,102.2,102.2,102.2,102.2,102.2,102.2,102.2,102.2,102,102,102,101.8,101.8,101.8,101.6,101.6,101.4,101.4,101.2,101,100.8,100.4,100.2,99.8,99.4,98.8,98.4,97.8,97.4,96.8,96.4,96.2,96,95.8,95.8,95.8,96,96.2,96.2,96.4,96.4,96.2,96.2,95.8,95.6,95.6,95.4,95.4,95.4,95.4,95.2,95.2,95.2,95.2,95.2,95.2,95,95,94.8,94.6,94.6,94.4,94.4,94.4,94.4,94.2,94.2,94.2,94,93.8,93.8,93.8,93.6,93.6,93.6,93.4,93.4,93.2,93,93,92.8,92.6,92.6,92.4,92.2,92.2,92.2,92.2,92.2,92.4,92.4,92.6,92.4,92.4,92.4,92.4,92.4,92.6,92.8,92.8,93,93.2,93.2,93.4,93.6,93.6,93.8,93.8,94,94,94.2,94.2,94.4,94.4,94.4,94.4,94.4,94.4,94.4,94.4,94.4,94.4,94.4,94.4,94.4,94.4,94.4,94.4,94.4,94.4,94.4,94.6,94.6,94.8,94.8,94.8,95,95,95.2,95.2,95.2,95.2,95.2,95.2,95,95,94.8,94.6,94.4,94.4,94.4,94.2,94.2,94.2,94.2,94,94,94,94,94.2,94.2,94.4,94.4,94.6,94.8,95.2,95.4,95.6,95.8,96,96.2,96.4,96.6,96.6,96.8,97,97,97.2,97.4,97.4,97.6,97.6,97.6,97.8,97.8,97.8,98,98,98,98,98,98,98,98,97.8,97.6,97.6,97.6,97.6,97.6,97.6,97.6,97.6,97.6,97.8,97.8,97.8,97.8,98,98,98.2,98.2,98.4,98.6,98.8,99.2,99.4,99.6,99.8,100,100.4,100.6,101,101.2,101.6,102,102.2,102.4,102.8,103,103.4,103.6,104,104.2,104.6,104.8,105.2,105.6,106,106.4,106.8,107,107.4,107.8,108.2,108.6,109,109.4,109.8,110.4,110.8,111.2,111.6,112,112.4,112.8,113.2,113.6,114,114.2,114.6,115,115.2,115.6,115.8,116.2,116.4,116.8,117,117.4,117.6,117.8,118.2,118.4,118.8,119,119.4,119.6,119.8,120,120.2,120.6,120.8,120.8,121,121.2,121.4,121.6,121.8,122,122.4,122.6,123,123.2,123.6,124,124.2,124.4,124.8,125.2,125.4,125.8,126,126.4,126.6,126.8,127,127.4,127.6,127.8,128,128.2,128.4,128.6,129,129.2,129.4,129.6,129.8,130,130.2,130.6,130.8,131,131.4,131.6,131.8,132,132.2,132.6,132.8,133.2,133.4,133.8,134,134.4,134.6,134.8,135.2,135.4,135.8,136,136.2,136.6,136.8,137,137.2,137.6,137.8,138,138.2,138.4,138.8,139,139.2,139.4,139.6,139.8,140.2,140.4,140.6,140.8,141,141,141.2,141.4,141.4,141.6,141.8,141.8,142,142.2,142.4,142.6,142.8,143,143.4,143.6,143.8,144.2,144.4,144.8,145,145.4,145.6,146,146.2,146.4,146.6,146.8,147,147,147.2,147.4,147.4,147.6,147.8,147.8,148,148,148.2,148.2,148.4,148.4,148.6,148.6,148.6,148.8,148.8,149,149,149.2,149.2,149.2,149.4,149.4,149.4,149.4,149.4,149.6,149.6,149.6,149.8,150,150,150.2,150.4,150.6,150.8,151,151.4,151.6,152,152.2,152.6,152.8,153.2,153.6,153.8,154.2,154.4,154.6,155,155.2,155.6,155.8,156.2,156.4,156.8,157.2,157.4,157.8,158,158.2,158.6,158.8,159,159.4,159.6,160,160.2,160.6,161,161.2,161.6,161.8,162,162.2,162.4,162.8,163,163.2,163.4,163.6,163.8,164,164.2,164.4,164.6,164.8,165,165.2,165.4,165.6,165.8,166,166.2,166.4,166.4,166.6,166.8,167,167,167.2,167.4,167.6,167.8,168,168.4,168.6,168.8,169,169.2,169.4,169.6,169.6,169.8,170,170.2,170.4,170.6,170.6,170.8,171,171.2,171.2,171.4,171.6,171.6,171.8,172,172.2,172.2,172.4,172.6,172.8,173,173.4,173.6,173.8,174,174.2,174.4,174.6,174.8,175,175.2,175.2,175.4,175.6,175.8,176,176.2,176.2,176.4,176.4,176.4,176.4,176.4,176.6,176.6,176.6,176.6,176.6,176.6,176.6,176.6,176.6,176.8,176.6,176.6,176.6,176.4,176.2,176,175.8,175.6,175.4,175,174.8,174.6,174.6,174.4,174.4,174.4,174.6,174.6,174.8,174.8,175,175.2,175.2,175.4,175.4,175.6,175.6,175.8,175.8,176,176,176,176.2,176.2,176.2,176,176,175.8,175.6,175.6,175.4,175.4,175.4,175.4,175.4,175.4,175.4,175.2,175.4,175.4,175.4,175.4,175.6,175.6,175.6,175.6,175.8,175.8,176.2,176.4,176.6,177,177.2,177.6,177.8,178,178.2,178.4,178.8,179,179.2,179.4,179.6,179.6,179.8,180,180.2,180.2,180.2,180.2,180.2,180.4,180.4,180.4,180.6,180.6,180.8,181,181.2,181.4,181.6,181.8,182,182.2,182.6,183,183.4,183.8,184.2,184.6,185,185.2,185.4,185.6,185.8,186,186.2,186.4,186.6,186.8,187,187.2,187.4,187.6,187.6,187.8,187.8,187.8,187.8,187.8,187.8,187.8,187.8,188,188,188,188.2,188.4,188.6,188.8,189,189.4,189.8,190.2,190.6,191,191.4,191.8,192.2,192.6,193,193.4,193.8,194.2,194.4,194.8,195,195.4,195.6,196,196.2,196.4,196.6,196.8,197,197.2,197.4,197.6,197.6,197.8,198,198,198.2,198.2,198.4,198.4,198.6,198.6,198.6,198.4,198.4,198.4,198.4,198.2,198.2,198,198,198,197.8,197.8,197.6,197.6,197.4,197.4,197.4,197.2,197.2,197,197,196.8,196.6,196.4,196.2,196,195.8,195.8,195.6,195.4,195.2,194.8,194.6,194.2,193.8,193.6,193.4,193,192.8,192.6,192.4,192.4,192.2,192.2,192,191.8,191.8,191.8,191.8,191.8,192,192.2,192.4,192.4,192.6,192.8,193,193.2,193.2,193.4,193.4,193.6,193.4,193.2,193.2,193,193,192.8,192.6,192.4,192.2,192,191.8,191.6,191.4,191.4,191.2,190.8,190.6,190.2,190,189.8,189.6,189.4,189.4,189.2,189,189,188.8,188.8,188.8,188.8,188.6,188.6,188.6,188.4,188.4,188.2,188.2,188,188,187.8,187.8,187.8,187.6,187.6,187.6,187.4,187.4,187.2,187.2,187,186.8,186.8,186.6,186.6,186.4,186,185.8,185.6,185.4,185,184.6,184.4,184.2,184.2,184,184,184,184,184,184,183.8,183.6,183.2,183,182.8,182.6,182.2,182,181.8,181.8,181.8,181.6,181.6,181.6,181.6,181.6,181.6,181.6,181.4,181.4,181.2,181,180.8,180.6,180.4,180.2,180.2,180,180,179.8,179.6,179.4,179,178.8,178.4,178,177.8,177.6,177.4,177.2,177.2,177,176.6,176.6,176.4,176.2,176.2,176,176,176,175.8,175.8,175.8,175.8,175.8,175.8,175.8,175.8,175.6,175.6,175.6,175.6,175.6,175.6,175.6,175.4,175.4,175.2,175.2,175.2,175,175,175,174.8,174.8,174.8,174.6,174.4,174.4,174.2,174.2,174.2,174,173.8,173.8,173.8,173.6,173.6,173.4,173.4,173.2,173.2,173.2,173.4,173.4,173.6,173.6,173.6,173.8,174,174,174,174,174,173.8,173.8,173.6,173.6,173.4,173.2,173,172.8,172.6,172.4,172,171.8,171.6,171.6,171.4,171.4,171.6,171.6,171.6,171.6,171.8,171.8,171.8,171.8,171.8,171.8,171.8,171.8,171.8,171.8,171.8,171.8,171.8,171.8,171.6,171.6,171.6,171.6,171.6,171.6,171.6,171.4,171.4,171.4,171.4,171.4,171.4,171.6,171.6,171.6,171.6,171.4,171.4,171.4,171.4,171.4,171.4,171.4,171.4,171.4,171.4,171.4,171.4,171.4,171.4,171.6,171.6,171.6,171.6,171.6,171.6,171.8,171.8,171.8,171.8,171.8,171.8,172,172,172,172.2,172.4,172.4,172.6,172.6,172.8,172.8,173,173,173.2,173.2,173.4,173.4,173.4,173.4,173.6,173.6,173.8,173.8,174,174.2,174.4,174.6,174.8,175.2,175.4,175.8,176.2,176.6,177,177.4,177.6,177.8,178,178.2,178.6,178.6,178.8,178.6,178.6,178.2,178,177.4,177,176.4,175.6,174.6,173.6,172.4,171,169.4,167.8,166,164.4,162.8,161.4,160,159.2,159,159.2,159.8,160.4,161,161.6,162.4,163.2,164,164.8,165.6,166.4,167,167.6,168.4,169,169.6,170.2,170.6,171.2,171.6,172,172.6,173,173.4,173.8,174.2,174.6,174.8,175.2,175.4,175.6,175.8,176.2,176.4,176.6,176.6,176.8,176.8,177,177.2,177.2,177.2,177.2,177.2,177.2,177,176.8,176.8,176.6,176.4,176.2,175.8,175.6,175.2,174.8,174.4,174,173.6,173.2,172.6,172.2,171.8,171.2,170.6,170.2,169.8,169.4,168.8,168.2,167.6,167,166.4,165.8,165.2,164.6,164,163.2,162.2,161.4,160.4,159.4,158.4,157.6,156.8,156.2,155.8,155.4,155,154.8,154.6,154.4,154.2,154,153.6,153.4,153.2,152.8,152.4,152,151.2,150.8,150,149.6,149,148.6,148.4,148.4,148.6,148.8,149,149.2,149.6,149.8,150.2,150.4,150.6,151,151.2,151.4,151.8,152,152.4,152.8,153,153.4,153.8,154,154.2,154.2,154.2,154,153.8,153.6,153.2,152.8,152.4,151.8,151.4,150.8,150.4,149.8,149.4,148.8,148.4,148,147.6,147,146.6,146.2,145.4,145,144.4,143.8,143,142.4,141.4,140.8,140,139.4,138.8,138.2,137.8,137.6,137.6,137.4,137.6,137.6,137.6,137.6,137.6,137.8,138,138,138.4,138.6,138.8,139,139.2,139.6,139.8,139.8,140,140.2,140.4,140.4,140.4,140.6,140.6,140.8,141,141.4,141.6,141.8,142,142.2,142.4,142.6,142.8,142.8,143,143,143.2,143.2,143.4,143.4,143.6,143.8,144,144.2,144.4,144.8,145,145.2,145.6,145.8,146,146.2,146.6,146.8,147.2,147.6,148,148.4,148.8,149.2,149.6,150.2,150.6,151.2,151.6,152.2,152.6,153,153.6,154,154.4,154.8,155.2,155.6,156.2,156.6,157,157.4,157.8,158.2,158.6,159,159.2,159.2,159.4,159.6,159.8,160,160.2,160.4,160.6,161,161.2,161.6,161.8,162.2,162.4,162.8,163.2,163.8,164.2,164.8,165.2,165.8,166.2,166.6,167,167.2,167.4,167.6,167.8,168,168.2,168.2,168.4,168.6,168.8,169,169.2,169.2,169.4,169.6,169.6,169.8,169.8,170,170,170.2,170.2,170.4,170.4,170.6,170.6,170.6,170.8,170.8,170.8,170.8,171,171,171,171,171,171,170.8,171,171,171,171,171,171,171,171,171,171,171.2,171.4,171.4,171.6,171.8,172,172.2,172.4,172.6,172.8,173,173.2,173.4,173.8,174,174.2,174.4,174.8,175,175.4,175.6,176,176.4,176.6,177,177.2,177.6,178,178.2,178.4,178.6,178.8,179,179,179,178.8,178.6,178.4,178,177.6,177.2,176.8,176.4,176.2,176.2,176.2,176.4,176.6,177,177.6,178,178.6,179.2,179.8,180.2,180.8,181.2,181.6,182,182.4,182.6,183,183.2,183.2,183.4,183.6,183.6,183.6,183.6,183.4,183.4,183.2,183.2,183,182.6,182.4,182.2,182,181.8,181.6,181.4,181.6,181.8,182,182.2,182.6,183,183.4,183.8,184.4,184.8,185.2,185.6,186,186.4,186.6,186.8,186.8,186.6,186.4,185.8,185.2,184.4,183.6,182.4,181.4,180.2,179,177.6,176.4,175.4,174.4,173.2,172.2,171.2,170.2,169.2,168.2,167.2,166.6,166.2,166,166,166.2,166.4,166.6,166.8,167,167,167,167.2,167.2,167.4,167.6,168,168.2,168.4,168.8,169.2,169.4,169.8,170.2,170.4,170.8,171,171.4,171.6,171.8,172.2,172.4,172.6,173,173.2,173.6,174,174.4,174.8,175.2,175.6,176,176.6,177.2,177.6,178.2,178.6,179.2,179.6,180.2,180.8,181.2,181.6,182.2,182.6,183,183.4,183.8,184,184.2,184.4,184.6,184.6,184.6,184.4,184.2,183.8,183.4,183,182.6,182.2,182,181.8,181.6,181.6,181.6,181.6,181.8,181.8,181.8,181.6,181.4,181,180.6,180,179.4,178.6,178,177.4,177,176.4,175.8,175.4,175,174.6,174.2,174,173.8,173.6,173.4,173.2,173,172.8,172.4,172.2,171.8,171.4,171,170.4,170,169.4,169,168.4,167.8,167.2,166.6,166,165.4,165,164.4,164,163.6,163.2,162.8,162.4,162.2,162.2,162.2,162.2,162.4,162.4,162.6,162.8,163,163,163.2,163,163,162.8,162.8,162.6,162.4,162.4,162.4,162.4,162.6,162.8,163,163.2,163.4,163.6,163.8,164.2,164.4,164.8,165,165.4,165.6,166,166.4,166.6,167,167.2,167.4,167.8,168,168.2,168.4,168.6,168.8,169,169.2,169.4,169.6,169.8,170,170.2,170.4,170.6,171,171.2,171.6,171.8,172.2,172.4,172.8,173,173.4,173.6,173.8,174,174.4,174.4,174.6,174.6,174.6,174.6,174.6,174.6,174.6,174.6,174.6,174.6,174.6,174.6,174.8,174.8,175,175.2,175.4,175.4,175.6,175.6,175.8,176.2,176.4,176.8,177,177.4,177.8,178.2,178.6,178.8,179.2,179.4,179.6,179.8,179.8,180,180,180,180.2,180.2,180.4,180.6,180.8,181,181.4,181.6,181.8,182.2,182.4,182.6,183,183.2,183.4,183.8,184,184.2,184.6,184.8,185,185.4,185.6,185.8,186.2,186.4,186.6,186.8,187,187.2,187.4,187.4,187.6,187.8,187.8,187.8,187.8,187.8,187.8,187.6,187.4,187.2,187,186.8,186.6,186.2,186,185.8,185.6,185.4,185.2,184.8,184.6,184.4,184,183.6,183.4,183,182.6,182.2,181.8,181.2,180.8,180.6,180.2,179.8,179.4,179,178.6,178,177.6,177.2,176.8,176.2,175.8,175.4,175,174.4,174,173.4,173,172.6,172.2,171.8,171.6,171.2,171,170.8,170.8,170.6,170.6,170.6,170.6,170.6,170.8,170.8,171,171.2,171.2,171.4,171.4,171.6,171.6,171.6,171.6,171.6,171.6,171.6,171.6,171.6,171.6,171.6,171.6,171.6,171.6,171.6,171.4,171.2,171,170.8,170.6,170.6,170.4,170.4,170.2,170.2,170.4,170.6,170.8,171.2,171.4,171.8,172,172.2,172.4,172.6,172.8,173,173.2,173.4,173.4,173.6,173.8,174,174,174.2,174.4,174.4,174.6,174.8,175,175.2,175.4,175.4,175.6,175.8,176,176.2,176.4,176.8,177,177.4,177.6,178,178.2,178.6,178.8,179,179.4,179.6,179.8,180,180.2,180.4,180.6,180.8,181,181.2,181.4,181.6,181.8,182,182.2,182.4,182.6,182.8,183,183.2,183.4,183.8,184,184.2,184.6,184.8,185,185.4,185.8,186,186.2,186.6,186.8,187.2,187.4,187.6,187.8,188.2,188.4,188.6,188.8,189,189.2,189.6,189.8,190.2,190.6,191,191.4,191.6,192,192.6,193,193.4,193.8,194.2,194.6,195.2,195.6,196,196.6,197,197.6,198,198.6,199,199.6,200,200.6,201,201.6,202,202.6,203,203.6,204,204.6,205,205.4,206,206.4,206.8,207.4,207.8,208.2,208.8,209.2,209.6,210,210.2,210.6,210.8,211.2,211.4,211.6,211.6,211.8,212,212.2,212.2,212.4,212.4,212.6,212.6,212.6,212.8,212.8,212.8,212.8,212.6,212.6,212.4,212.2,212.2,212,211.8,211.4,211.2,210.8,210.4,209.8,209.4,208.8,208.2,207.6,207,206.4,205.8,205.2,204.8,204.2,203.8,203.4,202.8,202.4,201.8,201.4,200.8,200.2,199.4,198.8,198,197.2,196.6,196.2,195.6,195.2,194.8,194.6,194.4,194.2,194,193.8,193.8,193.6,193.6,193.4,193.4,193.4,193.4,193.6,193.6,193.8,194,194.2,194.6,195,195.4,195.8,196.2,196.8,197.2,197.8,198.4,198.8,199.4,199.8,200.4,200.8,201.4,201.8,202.2,202.6,203,203.2,203.6,203.8,204.2,204.4,204.6,204.8,205,205,205.2,205.4,205.4,205.4,205.6,205.6,205.6,205.6,205.8,206,206,206,206.2,206.2,206.2,206.4,206.4,206.4,206.6,206.6,206.6,206.6,206.6,206.6,206.6,206.6,206.6,206.6,206.6,206.6,206.6,206.6,206.6,206.6,206.6,206.6,206.6,206.6,206.8,206.8,207,207,207.2,207.4,207.4,207.6,207.8,208,208,208.2,208.2,208.4,208.4,208.4,208.4,208.4,208.4,208.4,208.4,208.4,208.4,208.4,208.4,208.4,208.2,208.2,208,208,207.8,207.8,207.8,207.6,207.6,207.4,207.2,206.8,206.6,206.2,205.8,205.4,205.2,204.8,204.6,204.6,204.4,204.4,204.2,204.2,204.2,204.2,204.4,204.4,204.6,204.8,205,205.2,205.2,205.4,205.6,205.6,205.8,205.8,205.8,205.8,205.8,205.8,205.8,205.8,205.8,205.8,205.8,205.8,205.8,205.6,205.4,205.2,205,204.8,204.6,204.4,204.2,204.2,204,203.8,203.6,203.4,203.4,203.4,203.4,203.2,203.2,203.2,203.2,203.2,203.4,203.4,203.6,203.6,203.8,204,204,204,204,204,204,204,204.2,204.2,204.2,204.4,204.4,204.6,204.8,204.8,205,205,205,205,205,205,205,205,205,205,204.8,204.8,204.8,204.8,205,205,205.2,205.2,205.4,205.4,205.4,205.6,205.6,205.6,205.6,205.4,205.4,205.4,205.2,205,205,204.8,204.6,204.2,204,203.8,203.6,203.4,203.2,203.2,203.2,203.2,203.2,203.2,203.2,203.4,203.4,203.4,203.4,203.6,203.6,203.6,203.8,204,204.2,204.2,204.4,204.6,204.8,205.2,205.4,205.6,205.8,206.2,206.2,206.4,206.6,206.8,207,207.2,207.4,207.6,207.8,208,208.2,208.2,208.4,208.4,208.4,208.4,208.4,208.4,208.4,208.4,208.4,208.4,208.6,208.8,209,209,209.2,209.2,209.4,209.6,209.8,210,210,210.2,210.2,210.2,210,209.8,209.6,209.6,209.4,209.4,209.4,209.4,209.8,210,210.2,210.6,210.8,211.2,211.6,211.8,212.2,212.4,212.6,212.8,213,213.2,213.4,213.4,213.6,213.6,213.8,213.8,213.8,213.8,213.8,213.8,213.8,213.8,213.8,213.8,213.8,213.8,213.8,213.6,213.6,213.6,213.4,213.2,213,212.8,212.6,212.2,211.8,211.4,211.2,211,210.8,210.8,210.8,211,211.2,211.4,211.8,212.2,212.6,213,213.4,213.8,214.4,214.8,215.2,215.4,215.6,215.8,216,216,216.2,216.2,216.4,216.4,216.4,216.2,216.2,216.2,216,215.8,215.6,215.2,214.8,214.6,214,213.6,213,212.6,212,211.4,210.8,210.4,209.8,209.4,208.8,208.6,208.2,208,208,207.8,207.8,207.6,207.6,207.6,207.6,207.6,207.6,207.2,206.8,206.4,206,205.4,205,204.4,204,203.6,203.4,203.2,203.2,203.2,203.2,203.2,203.4,203.4,203.6,203.8,203.8,203.8,204,204.2,204.4,204.6,204.6,204.6,204.6,204.6,204.6,204.4,204.2,203.8,203.6,203.2,202.8,202.4,202.2,201.8,201.4,201.2,201,200.8,200.6,200.4,200.2,199.8,199.6,199.2,199,198.6,198.2,197.8,197.6,197.2,196.8,196.6,196.4,196.2,196,195.8,195.6,195.4,195,194.8,194.4,194.2,193.8,193.6,193.2,192.8,192.4,192,191.4,190.8,190.2,189.8,189,188.4,187.8,187.2,186.4,185.8,185.2,184.4,183.8,183,182.4,181.4,180.4,179.2,177.6,176,174.4,172.8,171.2,169.8,168.4,167,165.6,164.6,163.6,162.6,162,161.4,161,160.6,160.2,160,159.8,159.8,159.6,159.6,159.6,159.6,159.8,160,159.8,159.8,159.6,159.4,159.6,159.6,159.8,159.8,160,160,160,160,159.8,159.4,159.2,159,158.8,158.6,158.4,158.2,158.2,158,158,158,158,158.2,158.4,158.4,158.6,158.8,158.8,159,159.2,159.6,159.8,160.2,160.4,160.8,161.2,161.6,162,162.4,162.6,163,163.2,163.4,163.4,163.4,163.6,163.6,163.4,163.2,163.2,163,163,162.8,162.6,162.2,161.8,161.6,161.2,161,160.8,160.4,160,159.4,159,158.6,158.2,157.8,157.4,157,156.6,155.8,155.2,154.8,154.4,154,153.6,153.2,152.6,152.2,151.8,151.2,150.8,150.4,150,149.6,149.2,148.8,148.2,147.8,147.4,147,146.8,146.6,146.4,146.2,146,145.8,145.6,145.2,144.8,144.4,143.8,143.2,142.4,141.8,141.2,140.8,140.4,140,139.6,139.2,138.8,138.2,137.6,137,136.4,136,135.6,135,134.6,134.2,133.8,133.6,133.2,133,132.8,132.6,132.6,132.6,132.6,132.6,132.6,132.6,132.4,132.2,132,131.8,131.4,131.2,130.8,130.6,130,129.6,129.2,128.8,128.2,127.8,127.2,126.6,126.2,125.6,125,124.2,123.6,122.8,122,121.4,120.6,120,119.2,118.4,117.8,117,116.4,116,115.6,115.2,114.8,114.4,114.2,113.8,113.6,113.2,112.8,112.4,112,111.8,111.4,111.2,111,110.8,110.6,110.6,110.4,110.4,110.6,110.8,110.8,111,111.2,111.6,111.8,112.2,112.6,113,113.2,113.6,114,114.4,115,115.4,115.6,116,116.6,117,117.4,118,118.4,118.8,119.2,119.6,120,120.2,120.6,120.8,121.2,121.4,121.6,121.8,121.8,121.8,121.8,121.8,121.8,121.6,121.4,121,120.6,120.2,119.6,119.2,118.6,118,117.4,116.8,116.2,115.4,114.8,114.2,113.6,113,112.4,112,111.8,111.4,111.2,111,110.8,110.6,110.6,110.8,111,111.4,111.8,112.2,112.6,113,113.4,113.8,114.2,114.6,115,115.4,115.8,116.2,116.4,116.8,117.2,117.6,117.8,118.2,118.4,118.6,119,119.2,119.4,119.6,120,120.2,120.6,120.8,121.2,121.4,121.8,122.2,122.4,122.6,123,123.2,123.4,123.8,124,124.4,124.6,125,125.2,125.6,125.8,126.2,126.4,126.6,126.6,126.8,126.6,126.6,126.2,125.8,125.2,124.6,123.8,123,122,121,120,119,118,117,116,115.2,114.6,114.2,113.8,113.4,113,112.8,112.6,112.4,112.2,112,111.8,111.6,111.6,111.6,111.6,111.8,112,112.2,112.6,112.8,112.8,112.8,112.6,112.4,112.2,111.8,111.2,110.8,110.4,110.4,110.2,110.2,110.4,110.6,111,111.4,111.8,112.2,112.6,113,113.6,114,114.4,114.8,115.2,115.6,115.8,116.2,116.6,116.8,117.2,117.4,117.8,118.2,118.6,119,119.4,119.8,120,120.4,120.6,121,121.2,121.2,121.4,121.4,121.4,121.2,121,120.8,120.6,120.2,120,119.8,119.6,119.6,119.6,119.6,119.8,120,120.4,120.8,121,121.4,121.8,122,122.4,122.6,122.6,122.8,123,123.2,123.6,124,124.4,124.8,125.2,125.6,126,126.4,126.8,127.2,127.6,127.8,128.2,128.4,128.8,129,129.4,129.6,129.8,130,130.2,130.4,130.6,130.8,131,131.2,131.4,131.8,132,132.4,132.6,133,133.4,133.8,134,134.4,134.6,135,135.2,135.6,135.8,136,136.2,136.2,136.4,136.6,137,137.4,137.8,138.2,138.6,139.2,139.6,140.2,140.6,141.2,141.8,142.2,142.6,143.2,143.6,144.2,144.6,145,145.4,145.8,146.2,146.6,147,147.4,147.6,148,148.2,148.4,148.6,148.8,149,149.2,149.4,149.6,149.6,149.8,150,150,150.2,150.4,150.6,150.8,151,151,151.2,151.4,151.6,151.8,152,152.2,152.4,152.8,153,153.4,153.8,154.2,154.8,155.2,155.6,156,156.4,156.8,157.2,157.6,158,158.4,158.8,159.2,159.4,159.8,160.2,160.4,160.8,161,161.2,161.6,161.8,162,162.2,162.4,162.6,162.8,163,163.2,163.4,163.6,163.8,163.8,164,164.2,164.2,164.4,164.4,164.6,164.6,164.6,164.8,164.8,165,165,165.2,165.4,165.4,165.4,165.6,165.6,165.6,165.6,165.8,165.8,166,166,166,166,166.2,166.2,166.2,166.2,166.2,166.2,166.2,166.2,166.2,166,166,166,165.8,165.8,165.8,165.8,165.8,165.6,165.6,165.6,165.4,165.2,165,164.8,164.6,164.4,164.2,164,163.8,163.4,163.2,162.8,162.6,162.2,162,161.8,161.8,161.8,161.8,161.8,161.8,162,162.2,162.2,162.2,162.2,162.2,162,162,161.8,161.8,161.8,161.6,161.6,161.4,161.4,161.2,161,160.8,160.8,160.4,160.2,160,159.6,159.4,159.2,159,158.8,158.6,158.4,158.4,158.2,158.2,158,157.8,157.6,157.4,157.2,157,156.8,156.6,156.4,156.4,156.2,156,155.8,155.6,155.4,155.2,155.2,155,155,155,155,155,155,154.8,154.8,154.8,154.8,154.8,154.6,154.6,154.4,154.4,154.2,154.2,154,154,153.8,153.8,153.6,153.4,153.2,153.2,153.2,153.2,153.2,153,153,153,153,153,153,152.8,152.8,152.8,152.6,152.6,152.6,152.4,152.4,152.4,152.4,152.2,152.2,152.2,152,152,151.8,151.8,151.6,151.4,151.2,150.8,150.6,150.2,149.8,149.4,149,148.4,147.8,147,146.4,145.4,144.6,143.6,142.6,141.8,140.8,140,139.2,138.4,138,137.6,137.2,137,137.2,137.2,137.4,137.6,138,138.2,138.6,138.8,139.2,139.6,139.8,140.2,140.6,141,141.4,141.8,142.2,142.6,142.8,143.2,143.6,143.8,144.2,144.4,144.8,145,145.4,145.6,146,146.2,146.2,146.4,146.6,146.8,146.8,147,147,147,147.2,147.2,147.2,147.2,147.2,147.2,147.2,147.2,147,147,146.8,146.8,146.8,146.6,146.6,146.6,146.4,146.4,146.4,146.2,146.2,146,146,145.8,145.6,145.4,145.2,145,144.8,144.6,144.4,144.2,144,144,143.8,143.6,143.6,143.4,143.2,143.2,143,142.8,142.6,142.4,142.2,142,142,141.8,141.6,141.6,141.4,141.2,141.2,141,140.8,140.8,140.6,140.4,140.4,140.2,140.2,140,140,139.8,139.8,139.8,139.8,139.8,139.8,139.6,139.6,139.8,139.6,139.6,139.6,139.6,139.6,139.4,139.4,139.4,139.2,139.2,139.2,139.2,139,139,138.8,138.8,138.8,138.6,138.6,138.6,138.4,138.4,138.4,138.4,138.2,138.2,138,138,137.8,137.8,137.8,137.8,137.8,137.8,137.6,137.6,137.4,137.4,137.4,137.2,137.2,137.2,137.2,137,137,136.8,136.8,136.6,136.6,136.4,136.2,136,136,135.8,135.8,135.6,135.6,135.6,135.4,135.4,135.4,135.4,135.4,135.2,135.2,135.4,135.4,135.4,135.4,135.4,135.4,135.6,135.6,135.6,135.6,135.6,135.6,135.6,135.6,135.6,135.6,135.6,135.6,135.6,135.6,135.6,135.6,135.6,135.6,135.6,135.4,135.4,135.6,135.6,135.6,135.4,135.4,135.2,135.2,135,134.8,134.6,134.4,134.2,134,133.8,133.6,133.4,133.4,133.4,133.4,133.6,133.6,133.8,133.8,134,134,134.2,134.2,134.4,134.4,134.4,134.6,134.6,134.6,134.4,134.6,134.4,134.4,134.4,134.4,134.4,134.4,134.4,134.4,134.2,134.2,134.2,134,134,134,133.8,133.8,133.8,133.6,133.6,133.4,133.4,133.4,133.4,133.4,133.6,133.6,133.6,133.6,133.6,133.6,133.4,133.4,133.4,133.4,133.4,133.4,133.4,133.4,133.4,133.4,133.4,133.4,133.4,133.2,133.2,133.2,133.2,133.2,133.2,133.2,133.2,133.2,133.2,133.2,133.2,133.2,133,133,133,133,133,133,133.2,133.2,133.2,133.2,133.2,133.2,133.2,133.2,133.4,133.4,133.4,133.4,133.4,133.2,133.2,133.2,133.2,133.2,133.2,133.2,133.2,133.2,133.2,133.2,133,133,132.8,132.8,132.6,132.6,132.4,132.4,132.2,132.2,132.2,132.2,132.2,132.2,132.2,132.2,132.2,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,131.8,131.8,131.8,131.8,131.8,131.6,131.6,131.4,131.4,131.4,131.4,131.4,131.4,131.4,131.4,131.4,131.4,131.4,131.4,131.4,131.4,131.4,131.6,131.6,131.6,131.6,131.6,131.6,131.6,131.6,131.4,131.4,131.2,131.2,131,130.8,130.6,130.4,130.2,130.2,129.8,129.6,129.4,129.2,129,128.8,128.6,128.4,128.2,127.8,127.6,127.4,127.2,126.8,126.6,126.2,126,125.6,125.4,125,124.6,124.2,124,123.6,123.4,123,122.6,122.4,122,121.8,121.6,121.4,121,120.6,120.4,120,119.6,119.4,119.2,118.8,118.6,118.4,118.2,118,117.8,117.4,117.2,117,116.8,116.6,116.4,116.2,116,116,115.8,115.6,115.6,115.6,115.6,115.6,115.4,115.4,115.4,115.2,115.2,115,115,114.8,114.8,114.8,114.6,114.4,114.2,114,113.6,113.4,113.4,113.2,113,112.8,112.8,112.6,112.6,112.4,112.2,112,111.8,111.8,111.6,111.4,111.4,111.2,111,111,111,111.2,111.2,111.4,111.6,111.8,112,112.4,112.6,112.8,113,113.2,113.4,113.6,113.6,113.6,113.6,113.6,113.6,113.6,113.4,113.2,113.2,113,113,112.8,112.6,112.6,112.4,112,111.8,111.4,111,110.8,110.4,110,109.6,109.4,109,108.6,108.2,107.8,107.2,106.8,106.2,105.6,105,104.2,103.6,103,102.2,101.6,101,100.2,99.6,99,98.4,98,97.4,97,96.6,96.2,95.8,95.4,95,94.6,94.2,94,93.8,93.6,93.4,93.2,93,92.8,92.6,92.6,92.4,92.4,92.4,92.2,92.2,92.2,92.2,92.2,92.2,92.2,92.2,92.2,92.2,92.2,92.4,92.4,92.4,92.4,92.4,92.4,92.6,92.6,92.6,92.6,92.6,92.6,92.8,92.8,93,93,93.2,93.4,93.6,94,94.2,94.4,94.6,94.8,94.8,94.8,94.6,94.6,94.2,94,93.6,93.4,92.8,92.2,91.6,90.8,90,89,88.2,87.4,86.8,86.4,86.2,86.4,86.6,87,87.4,88,88.4,89.2,89.8,90.2,90.8,91.2,91.6,92,92.4,92.8,93,93.2,93.4,93.6,93.8,94,94,94.2,94.2,94.4,94.4,94.2,94.2,94,94,93.8,93.6,93.6,93.4,93.2,93,93,93,93,93,92.8,92.8,92.8,92.8,92.8,93,93.2,93.4,93.8,94,94.2,94.4,94.6,94.8,95,95.4,95.6,95.8,96,96.2,96.4,96.8,96.8,97,97,97,96.8,96.8,96.8,96.6,96.4,96.2,96,95.8,95.6,95.6,95.6,95.6,95.4,95.4,95.4,95.4,95.4,95.4,95.4,95.4,95.4,95.4,95.4,95.6,95.6,95.8,95.8,96,96,96,96.2,96.2,96.2,96.2,96.4,96.4,96.4,96.6,96.6,96.8,96.8,97,97,97,97.2,97.2,97.4,97.4,97.4,97.4,97.4,97.4,97.4,97.4,97,96.8,96.4,96.2,95.8,95.4,95.2,95,94.8,94.6,94.4,94.4,94.2,94.2,94,94,94,94,94.2,94.4,94.4,94.6,94.6,94.6,94.6,94.6,94.6,94.4,94.4,94.2,94,93.8,93.8,93.6,93.4,93.2,93,93,92.8,92.6,92.4,92.4,92.2,92,91.8,91.8,91.6,91.4,91.2,91,90.8,90.6,90.6,90.6,90.8,90.8,90.8,91,91,91,91,91,91,91,90.8,90.8,90.8,90.6,90.4,90.2,90,89.8,89.6,89.4,89.4,89.4,89.2,89.2,89.2,89.2,89.4,89.4,89.4,89.4,89.2,89.2,89,88.8,88.6,88.2,88,87.6,87.2,86.8,86.2,85.6,85,84.4,83.8,83,82.2,81.6,80.8,80.2,79.4,78.8,78.2,77.4,76.8,76.2,75.6,75.2,74.8,74.2,73.8,73.6,73.2,73,72.6,72.6,72.4,72.4,72.2,72.2,72.2,72.2,72.2,72.4,72.4,72.6,72.6,72.8,72.8,73,73,73.2,73.2,73.4,73.4,73.4,73.4,73.4,73.4,73.2,73.2,73.2,73,73,73,72.8,72.6,72.6,72.6,72.6,72.4,72.2,72,71.8,71.8,71.8,71.6,71.6,71.6,71.4,71.4,71.4,71.2,71.2,71.2,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71.2,71.2,71.2,71.2,71.2,71.4,71.4,71.6,71.6,71.6,71.8,72,72.2,72.4,72.6,72.8,72.8,73.2,73.4,73.8,74.2,74.6,75,75.4,75.6,76,76.4,76.8,77.2,77.6,78.2,78.6,79,79.6,80,80.4,80.8,81,81.4,81.8,82,82.4,82.8,83.2,83.4,83.8,84,84.4,84.6,85,85.2,85.6,85.6,85.8,86,86.2,86.4,86.6,86.6,86.8,86.8,87,87,87,87.2,87.2,87.4,87.4,87.4,87.6,87.6,87.6,87.4,87.4,87.4,87.4,87.4,87.4,87.4,87.4,87.4,87.4,87.4,87.4,87.4,87.4,87.4,87.4,87.4,87.4,87.4,87.4,87.2,87,87,86.8,86.8,86.6,86.6,86.4,86.4,86.2,86,86,85.8,85.8,85.6,85.6,85.4,85.2,85,84.6,84.4,84.4,84.2,84,83.6,83.4,83.2,83.2,83.2,83.2,83.2,83.2,83.2,83.2,83.4,83.4,83.4,83.6,83.6,83.8,83.8,83.8,83.8,83.6,83.8,83.6,83.6,83.4,83.4,83.4,83.2,83.2,83.2,83.2,83.2,83,83,83,83,82.8,82.6,82.6,82.4,82.2,82,82,81.8,81.6,81.4,81.4,81.2,81.2,81,80.8,80.8,80.6,80.6,80.4,80.4,80.2,80,79.8,79.6,79.4,79.2,79.2,79,78.8,78.6,78.4,78.4,78.2,78,77.8,77.8,77.6,77.6,77.6,77.6,77.6,77.8,77.8,77.8,77.8,77.8,77.8,77.6,77.6,77.4,77.4,77.2,77.2,77.2,77.2,77.2,77.2,77,77,76.8,76.8,76.8,76.6,76.6,76.6,76.4,76.4,76.2,76,75.8,75.4,75.2,74.8,74.4,74.2,74,73.8,73.4,73,72.8,72.4,72,71.6,71,70.6,70.2,69.8,69.4,69.2,69,69,68.8,68.8,68.6,68.6,68.2,68,67.8,67.6,67.4,67.2,67.2,67,67,66.8,66.8,66.8,66.6,66.6,66.4,66.4,66.2,66,66,65.8,65.8,65.6,65.6,65.4,65.4,65.4,65.4,65.2,65.2,65.2,65.2,65.2,65,65,65,65,65.2,65.2,65.4],"series_type":"distance","original_size":7347,"resolution":"high"},"heartrate":{"data":[89,89,89,89,89,90,92,93,94,95,96,97,98,98,98,99,99,99,100,100,101,102,102,103,104,104,105,106,106,107,107,107,108,108,108,108,108,108,108,109,109,109,110,110,111,113,114,116,117,118,119,121,122,123,124,125,126,127,127,128,129,129,129,130,130,130,130,130,130,130,130,130,129,129,129,129,129,129,130,130,130,129,129,129,129,129,129,128,128,128,127,127,127,126,126,126,125,125,125,124,124,124,123,123,123,122,122,121,121,121,121,120,120,119,118,116,115,114,114,114,114,114,114,113,113,112,110,110,109,108,108,107,107,107,108,110,110,111,113,114,115,117,118,119,120,121,121,120,120,119,118,118,118,119,119,120,121,122,122,122,122,121,121,121,121,121,121,121,121,120,119,118,118,118,119,119,119,121,121,121,122,123,123,122,122,122,121,121,120,120,120,120,121,121,122,122,122,123,123,123,123,123,123,122,121,121,121,121,121,121,121,121,121,121,121,121,121,121,122,122,123,123,124,124,124,125,125,126,126,126,126,125,125,125,124,124,124,124,124,124,125,125,126,127,127,128,128,128,128,128,128,128,128,128,128,127,127,126,125,125,124,122,122,121,119,119,118,116,116,113,113,113,112,111,111,111,114,115,117,120,121,122,122,122,122,120,120,119,118,118,117,118,118,119,119,119,119,119,119,118,117,116,115,114,113,113,112,112,112,113,113,113,114,114,114,114,114,113,113,113,114,116,117,118,119,120,121,122,122,124,125,127,128,129,129,130,131,131,132,134,134,134,135,135,135,136,136,136,135,135,135,135,135,135,136,136,136,136,136,136,135,135,135,135,135,134,134,134,134,134,134,133,132,132,132,131,131,131,131,131,131,131,131,131,131,131,131,131,131,132,133,133,134,135,135,136,137,137,138,139,139,139,141,142,143,144,145,146,147,148,149,150,150,151,153,154,155,156,156,157,158,158,158,158,158,158,158,158,157,156,156,155,154,154,153,152,152,151,149,149,148,146,146,145,144,144,144,145,145,145,147,147,147,148,147,147,146,145,144,143,143,142,141,141,140,139,139,138,137,137,137,137,137,137,138,138,138,137,137,137,135,135,135,134,134,134,134,134,134,133,133,132,132,132,132,131,131,131,131,131,131,131,131,131,130,130,129,129,129,129,130,130,130,132,132,132,133,133,133,133,132,132,132,132,132,132,132,132,133,133,134,135,135,135,135,135,135,134,134,133,133,132,132,131,131,130,129,129,128,127,127,127,128,128,129,130,130,130,132,132,133,135,137,138,140,142,143,145,146,147,148,148,148,147,147,147,145,145,145,143,143,142,141,140,139,137,137,136,134,134,133,132,132,131,129,129,128,126,126,126,126,126,126,126,126,126,127,127,127,128,128,128,128,128,128,128,128,129,131,131,131,131,131,130,129,129,129,128,128,128,127,127,124,123,122,122,122,123,123,124,125,125,126,127,128,129,130,131,132,133,133,133,134,134,135,136,136,137,139,139,139,140,140,140,141,141,140,140,140,140,140,140,139,139,139,138,138,138,138,137,137,137,136,136,136,136,136,135,134,134,134,133,133,133,133,133,133,133,133,133,133,133,133,132,132,132,132,132,132,132,132,132,131,131,131,130,130,129,129,129,129,130,130,130,130,130,130,129,129,129,128,128,128,127,127,126,125,125,125,125,125,126,128,128,128,129,129,129,129,129,129,130,130,130,131,131,132,132,132,133,133,133,133,133,133,133,132,132,131,131,131,130,130,130,130,130,130,130,130,129,129,129,129,128,128,128,128,128,128,128,128,128,127,126,125,123,121,120,119,118,117,117,116,116,115,113,113,112,112,112,114,116,118,121,125,126,128,129,130,130,130,130,129,127,126,125,124,122,121,119,118,117,116,116,116,116,116,116,116,116,114,113,112,111,110,110,110,110,109,109,107,106,106,106,107,108,112,113,115,118,119,120,121,123,124,126,128,129,132,134,135,138,140,141,144,145,147,149,150,151,152,153,153,154,154,155,155,155,155,155,155,156,156,156,157,157,157,157,157,157,157,157,157,157,157,157,157,158,158,158,159,159,159,160,160,160,159,159,159,159,159,158,157,157,156,154,153,151,150,148,147,145,144,143,142,142,142,140,140,140,139,139,139,138,138,137,136,135,134,132,131,129,128,126,124,123,122,122,123,123,124,124,124,122,121,119,118,117,117,119,120,122,123,124,125,126,126,126,125,125,125,125,126,126,125,124,124,123,123,123,123,124,124,124,125,125,125,125,125,126,127,127,127,128,128,128,129,129,129,130,130,131,132,132,132,133,134,134,135,136,137,139,140,141,143,144,146,148,150,151,154,155,156,158,159,160,162,162,162,163,163,163,163,163,163,163,163,163,162,162,162,162,162,162,163,163,164,164,164,164,164,164,164,164,164,164,165,165,165,165,165,165,165,165,165,166,166,167,168,168,168,169,169,170,170,170,171,171,171,172,172,172,172,172,172,172,171,171,171,170,170,169,168,167,166,165,164,164,163,163,162,161,161,160,159,159,158,156,156,156,155,155,154,153,153,152,151,150,149,148,148,148,147,147,147,146,145,144,143,141,140,139,139,139,138,138,137,135,134,134,133,133,133,133,133,133,134,134,135,135,135,135,134,134,134,133,133,132,133,133,133,134,134,135,135,135,135,135,135,136,136,136,135,135,135,135,134,134,133,133,133,134,135,135,135,135,135,135,136,136,136,137,138,140,141,143,144,146,148,149,151,152,154,156,157,158,159,159,159,160,159,159,159,158,158,157,156,156,154,153,152,151,150,149,148,147,146,145,145,144,143,143,143,143,144,144,145,145,145,147,147,148,150,150,151,152,153,154,155,156,157,159,159,159,160,160,160,160,160,160,161,161,161,160,160,160,159,159,159,158,158,158,156,156,155,153,153,153,152,152,151,151,150,149,148,148,147,145,145,144,142,142,142,141,141,140,139,139,138,136,135,133,131,130,129,127,126,125,125,125,124,124,124,124,124,124,123,123,123,122,121,121,120,120,120,120,120,120,120,119,119,118,116,116,115,114,114,113,112,112,112,112,111,110,108,108,108,107,107,107,108,109,109,109,109,109,109,109,108,108,108,108,109,109,110,110,110,111,112,112,112,111,111,109,108,106,105,106,106,108,110,112,113,114,115,115,115,115,114,113,113,113,113,113,114,116,116,117,118,118,119,121,123,124,126,128,130,134,136,138,141,144,146,150,152,154,156,157,158,159,160,161,163,163,164,165,165,165,166,166,166,166,166,166,166,166,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,166,166,165,165,164,164,163,162,162,161,160,159,158,156,154,153,151,150,149,149,149,148,148,148,148,148,148,148,148,148,149,148,148,148,148,148,148,148,148,147,146,145,144,143,141,139,137,136,135,134,134,134,132,132,131,131,130,129,127,127,127,127,127,127,128,128,127,127,126,125,124,124,123,121,121,121,121,121,121,120,120,120,119,119,119,118,118,119,119,119,119,121,122,123,124,124,125,125,125,125,125,126,127,128,128,128,129,129,130,130,131,131,132,132,133,133,134,134,135,136,136,136,137,137,137,137,137,137,137,137,137,137,136,135,135,135,135,135,134,134,134,133,133,133,132,132,132,132,133,133,134,135,135,136,137,137,138,138,138,138,138,138,138,138,138,138,138,138,139,140,140,141,142,142,143,144,144,144,145,145,145,145,145,145,146,146,146,146,146,145,145,145,144,144,144,144,143,143,142,140,140,139,139,139,139,139,139,140,141,141,141,142,142,142,143,143,144,145,146,146,146,146,147,147,147,147,148,148,148,148,148,148,148,148,147,147,147,147,146,146,146,146,146,146,146,146,146,146,146,146,145,145,145,145,145,145,144,144,144,144,144,143,143,143,143,143,143,143,143,143,143,143,143,143,144,144,144,144,144,144,145,145,145,145,145,145,145,145,145,146,146,146,147,147,147,148,148,148,149,149,149,151,151,152,152,152,153,154,154,154,155,155,155,156,156,156,157,157,157,158,158,158,159,159,159,160,160,160,160,160,160,161,161,161,162,162,162,163,163,164,165,165,165,166,166,166,166,166,166,166,166,166,166,166,166,167,167,167,167,167,167,168,168,168,168,168,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,168,168,168,167,166,166,165,164,163,162,161,160,159,158,157,156,155,155,154,154,154,153,153,153,152,152,152,152,152,151,151,151,151,151,151,150,149,149,148,145,143,141,138,136,135,134,133,133,132,132,132,131,130,130,129,128,127,126,125,125,125,124,124,124,124,124,123,121,120,119,119,119,120,121,121,122,121,121,121,121,120,120,120,120,120,120,120,121,121,121,120,120,119,118,118,117,117,116,116,116,116,116,115,114,112,110,108,107,106,105,105,105,105,105,106,107,107,108,108,109,109,109,109,108,108,108,108,108,108,108,108,109,109,109,109,109,109,110,111,111,112,113,113,114,115,115,116,116,118,119,120,121,122,123,124,125,125,125,126,126,126,125,124,124,123,123,123,123,124,125,126,127,127,128,128,128,128,129,130,130,131,132,133,135,136,137,140,141,142,144,145,147,149,150,152,153,154,155,156,157,158,159,159,160,160,160,161,161,162,162,163,163,164,165,165,166,166,166,167,168,168,168,168,168,168,168,168,169,169,169,169,170,170,170,170,170,171,171,171,171,172,172,172,173,173,174,174,175,175,176,176,176,177,176,176,176,176,176,175,175,175,174,173,173,172,172,171,170,169,168,167,167,166,165,165,164,164,164,163,163,163,162,162,162,162,162,162,162,162,163,163,164,164,164,164,164,164,164,164,163,162,161,160,159,158,158,157,156,156,155,154,153,152,152,151,150,150,149,148,148,147,146,145,144,143,142,141,140,140,139,138,137,136,135,135,135,134,134,133,132,131,130,129,128,127,127,127,127,127,127,127,128,128,128,127,127,126,125,124,124,124,124,125,127,128,129,130,131,131,132,132,133,135,136,137,139,140,140,141,142,143,143,143,144,145,145,146,146,147,147,148,147,147,147,147,146,145,145,145,144,144,144,143,142,141,140,139,138,137,136,135,134,133,132,130,129,129,129,130,131,132,133,134,136,137,139,142,143,144,147,148,149,151,152,153,154,155,156,158,159,160,160,161,162,163,163,163,163,163,162,161,161,161,160,159,158,157,156,155,154,153,152,151,150,149,148,147,146,144,143,142,141,140,140,139,139,138,137,135,134,133,132,132,132,132,132,132,132,131,130,129,128,127,126,125,124,124,124,123,123,122,122,121,120,120,120,120,120,120,120,120,120,120,119,119,118,118,118,119,119,119,119,118,118,117,117,117,117,117,117,117,117,117,116,115,115,115,116,118,119,122,124,126,127,128,129,130,129,129,129,128,127,126,125,124,123,122,122,121,121,121,121,121,122,122,122,123,124,124,124,125,125,125,125,125,125,125,125,125,125,125,125,124,124,123,123,123,122,122,122,122,122,122,123,124,124,124,124,124,124,124,124,125,126,126,126,127,127,126,126,126,126,126,126,125,125,125,125,126,126,127,127,127,128,128,128,128,128,128,128,129,129,129,129,129,128,128,128,128,128,128,128,128,128,127,127,127,127,128,128,128,128,129,129,129,129,129,129,129,129,129,129,130,130,130,130,130,130,131,131,132,132,133,133,134,135,135,136,136,136,137,137,137,137,137,137,137,137,137,137,136,136,136,136,136,136,136,136,135,135,135,135,135,135,135,136,136,136,136,136,136,137,137,137,137,137,137,138,138,138,138,138,138,138,138,139,139,139,140,140,140,141,141,141,142,142,142,143,143,143,143,143,143,144,144,144,144,145,145,145,145,146,146,147,147,148,148,148,149,149,149,150,150,150,151,151,151,152,153,153,154,154,154,155,156,156,157,158,158,159,159,159,160,160,160,160,161,161,161,161,161,161,161,161,162,162,162,163,163,163,164,164,164,165,165,165,165,165,165,164,164,164,163,163,163,163,162,162,162,161,161,161,160,160,159,159,158,157,156,156,155,154,154,153,152,150,149,146,145,144,143,143,142,142,142,141,141,141,140,140,139,138,137,137,136,135,135,134,134,134,133,133,133,133,133,133,133,133,133,132,132,131,130,129,128,127,126,126,127,127,127,128,129,129,130,130,131,131,132,133,133,134,135,135,135,135,135,135,135,135,136,136,135,135,135,134,133,133,133,134,134,135,136,137,138,139,139,140,141,141,142,143,143,143,144,144,144,145,145,145,146,146,146,146,146,146,146,146,147,147,147,147,147,147,147,146,146,145,145,144,142,141,140,139,137,136,136,135,135,135,134,133,132,129,127,124,120,118,117,116,117,119,122,124,125,127,128,128,129,129,129,129,130,130,131,131,132,133,133,134,134,134,134,134,134,134,133,133,132,131,131,130,129,129,128,127,127,127,127,128,128,129,129,130,130,130,130,129,129,129,129,129,129,130,130,130,131,131,130,129,129,128,127,127,127,127,128,130,132,133,133,134,135,135,135,135,136,136,136,136,136,136,135,135,135,134,134,134,134,134,134,134,133,133,133,132,132,131,131,131,131,131,131,132,132,132,132,131,131,131,131,131,131,131,131,132,132,132,131,131,130,130,129,129,128,129,129,130,130,131,131,132,133,134,136,137,138,139,139,140,141,141,141,141,141,142,142,142,141,141,141,141,141,141,140,140,140,139,139,139,139,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,139,139,139,140,140,140,141,141,141,142,142,142,143,143,143,143,143,143,144,145,145,146,147,149,150,151,152,153,155,156,157,158,159,160,161,161,162,163,163,164,165,165,165,166,166,166,167,167,167,168,168,169,169,169,170,170,170,171,171,171,172,172,172,172,172,172,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,174,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,172,172,172,172,172,173,173,173,173,173,173,173,173,173,173,173,173,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,173,173,173,172,171,171,171,171,171,171,171,171,171,171,171,171,171,171,172,172,172,172,173,173,173,172,172,172,172,172,172,171,171,171,170,170,170,169,169,169,168,168,168,167,167,167,167,167,166,166,166,166,165,165,165,165,165,165,165,165,165,165,165,165,165,165,166,166,166,167,167,167,168,168,168,169,169,169,170,170,170,171,172,172,172,173,173,173,173,173,174,174,174,174,174,174,174,174,174,174,173,173,173,173,173,173,174,174,174,173,173,173,172,172,172,171,171,171,171,171,171,171,171,171,171,171,171,172,172,172,172,172,172,172,172,172,173,173,173,174,174,174,174,174,175,175,175,175,175,175,174,174,174,174,174,174,174,173,173,173,173,173,174,174,174,174,174,174,174,174,174,174,174,174,173,173,173,172,172,172,170,169,168,167,165,164,164,163,163,162,160,160,159,158,158,156,154,152,151,150,149,148,147,147,146,146,146,146,147,147,147,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,147,147,147,145,143,142,141,140,140,140,140,141,141,141,141,142,142,142,143,143,143,144,144,146,147,147,148,150,150,151,152,152,152,153,153,153,154,154,154,154,154,153,153,153,152,152,152,152,152,152,152,153,153,153,153,153,153,154,154,155,156,157,158,159,159,160,161,161,162,162,162,163,164,164,165,166,166,166,167,167,167,167,167,167,167,167,166,166,166,166,165,165,165,165,165,165,166,166,166,167,167,168,170,170,170,171,172,172,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,172,172,172,171,171,171,170,170,169,167,167,166,165,164,163,161,161,161,160,160,160,159,158,158,157,156,155,154,153,152,151,150,148,147,146,145,144,144,145,147,148,149,151,152,153,154,155,156,157,158,159,160,160,161,162,162,163,163,163,164,165,165,166,166,166,165,163,161,160,156,155,154,153,152,152,152,152,152,152,152,152,152,152,152,151,151,151,148,147,145,141,140,139,138,138,138,140,140,140,141,141,141,140,140,140,141,141,141,141,141,141,140,140,140,140,140,140,140,140,139,137,137,136,135,135,137,139,140,141,142,143,144,144,144,142,141,140,139,139,139,138,137,137,137,135,135,135,134,134,134,133,133,133,132,132,132,131,131,131,131,131,131,131,131,130,129,129,129,128,128,128,127,127,127,125,125,125,124,124,125,126,127,128,128,128,127,125,125,125,124,124,124,124,124,125,125,125,125,124,124,123,122,122,121,121,121,121,122,122,122,122,122,121,121,121,121,121,121,121,120,120,119,117,117,117,118,118,119,119,119,119,121,121,122,123,124,125,126,126,126,125,125,124,123,123,122,122,122,122,120,120,119,118,118,118,116,116,115,113,113,112,111,111,110,110,110,110,109,109,109,109,109,109,111,111,112,112,113,113,114,114,116,116,117,119,120,122,124,125,126,127,128,128,128,128,127,126,126,126,125,125,125,126,126,126,126,126,127,126,126,126,126,126,126,126,126,126,126,126,126,127,127,127,128,128,128,130,130,131,132,133,133,135,135,135,137,137,138,139,139,140,142,142,142,143,144,144,145,145,145,147,147,148,149,150,151,152,152,152,153,154,154,154,154,154,152,152,151,150,149,148,147,145,144,141,139,136,132,131,129,128,128,128,130,132,134,138,139,140,143,145,147,149,151,152,155,157,159,161,162,163,165,166,167,168,169,170,170,171,172,172,172,172,173,173,173,173,173,173,172,172,172,170,170,170,168,168,168,167,167,166,165,165,163,161,160,159,156,154,153,151,150,149,148,147,145,143,142,141,139,138,137,136,135,134,132,131,129,127,126,125,124,123,123,122,122,122,122,122,122,121,121,121,121,120,120,120,120,121,123,124,125,126,127,127,128,128,128,131,132,134,136,137,138,139,140,141,142,143,144,145,146,148,149,151,152,153,154,155,156,157,158,159,160,161,162,163,163,164,164,164,164,163,163,162,162,161,159,157,156,154,153,151,151,151,151,149,149,147,146,146,145,144,144,144,145,146,147,149,150,151,152,153,153,154,154,154,155,155,155,155,155,155,155,155,155,155,155,155,155,155,156,157,157,157,157,157,158,158,158,159,159,159,159,160,160,160,160,160,160,161,161,161,161,161,161,162,162,162,162,162,162,164,164,164,165,165,166,167,167,168,169,169,169,170,170,170,171,171,171,172,172,172,173,173,173,174,174,174,174,174,173,173,173,173,173,173,173,172,172,172,172,172,172,172,172,172,173,173,173,174,174,175,175,175,175,174,174,174,173,173,173,172,172,171,170,170,170,169,169,169,168,168,167,166,166,166,165,165,164,163,163,163,163,163,162,162,162,161,161,161,160,159,159,159,158,158,158,156,156,156,156,156,156,155,155,155,155,155,155,155,155,155,155,155,155,157,157,157,158,159,159,160,160,161,162,162,163,163,163,164,164,164,164,163,163,162,161,161,160,158,158,157,156,155,154,154,154,155,156,157,157,158,159,160,161,162,163,164,164,165,166,166,166,167,167,167,167,167,167,166,166,165,164,164,163,162,160,159,158,157,156,155,156,156,157,157,158,159,159,160,161,161,162,162,162,162,161,161,160,159,158,157,156,156,155,153,153,151,149,147,146,145,144,143,142,141,140,139,138,138,136,136,136,138,138,139,140,140,140,139,139,139,139,139,140,141,141,142,144,144,145,147,148,149,150,151,152,153,153,153,155,155,155,157,157,158,160,160,160,162,163,164,165,166,167,169,170,171,172,172,173,174,174,175,175,175,175,176,176,175,175,175,174,173,173,173,172,172,171,170,169,168,167,167,166,165,165,164,164,163,162,160,158,157,155,154,154,153,151,150,149,147,145,144,143,143,144,144,144,145,145,144,143,143,142,140,140,140,140,140,140,138,138,137,135,134,133,132,131,131,130,130,130,129,129,128,129,131,132,135,136,137,138,138,138,138,138,137,137,137,137,137,137,138,138,138,139,141,141,142,143,144,144,145,145,146,147,148,149,150,150,151,151,151,151,152,152,153,153,153,154,154,154,155,155,155,156,157,157,157,158,158,159,160,160,160,161,161,162,163,163,163,162,162,162,161,161,161,161,160,159,158,157,156,156,156,155,154,154,154,153,153,153,153,153,153,154,154,155,156,156,157,158,158,158,158,158,158,158,158,158,158,158,159,159,159,159,159,159,159,159,159,159,160,160,160,161,161,161,162,162,162,163,163,163,164,164,164,165,164,164,164,164,164,163,163,163,162,162,161,160,160,159,158,158,157,155,155,153,152,151,149,148,146,145,143,142,141,139,138,138,136,134,132,130,129,128,127,126,125,124,124,124,125,125,125,124,124,123,122,120,118,115,114,113,112,112,113,115,116,118,120,122,123,126,127,128,130,131,132,132,132,133,133,133,133,133,133,134,134,134,134,134,134,134,133,133,133,132,132,132,131,131,131,132,132,134,135,136,137,138,139,139,141,141,142,142,143,143,145,145,146,146,146,147,149,149,149,150,150,150,151,151,151,151,152,152,153,153,153,154,154,155,156,156,157,158,158,159,159,159,160,161,161,161,161,161,161,162,162,162,162,162,162,163,163,163,163,163,163,163,163,163,164,164,164,165,165,165,166,166,166,166,166,166,166,166,166,167,167,167,167,167,167,167,167,168,168,168,169,170,170,170,171,171,172,173,173,173,175,175,175,176,176,177,178,178,178,179,179,179,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,179,179,179,178,178,178,178,178,177,176,176,176,175,175,174,174,173,172,172,171,170,169,168,167,166,165,164,161,160,158,156,155,154,153,151,150,148,147,145,143,142,141,140,140,139,137,136,136,135,135,136,136,135,134,133,132,130,129,127,125,123,122,120,120,119,120,122,123,125,127,127,129,130,131,133,135,138,140,142,143,145,148,149,151,153,155,157,159,160,161,163,164,165,166,166,166,166,167,168,168,168,168,168,168,168,167,166,165,163,162,162,162,162,162,161,161,160,160,159,158,157,156,155,153,152,151,148,147,146,145,145,145,146,146,146,145,144,143,142,141,141,141,141,142,142,142,142,141,141,141,142,142,142,143,143,143,142,142,141,140,140,139,138,138,138,137,137,136,135,135,135,135,135,135,134,133,132,131,130,129,128,127,127,125,124,123,122,121,121,121,121,122,123,123,124,125,126,127,128,129,130,131,132,133,134,134,134,135,135,135,135,135,136,136,136,136,137,137,137,136,136,135,133,132,131,130,129,129,128,128,128,129,129,129,129,129,130,131,132,132,133,133,134,134,134,134,135,135,134,134,134,133,133,133,133,134,134,134,134,134,134,134,134,134,134,133,132,131,131,131,130,131,131,131,131,131,132,132,133,134,134,134,134,134,134,133,132,131,130,130,129,128,128,128,126,125,124,124,124,124,124,124,125,126,126,127,128,128,129,130,131,132,134,135,136,138,139,140,142,143,144,146,147,148,149,150,151,152,153,153,154,155,155,156,156,156,155,155,155,154,154,154,154,154,154,153,153,153,153,153,153,152,152,152,152,152,152,151,151,151,150,150,149,149,149,148,148,148,148,148,148,149,150,150,151,152,152,152,153,153,153,153,153,153,153,153,152,152,152,151,151,150,149,148,147,146,145,145,144,143,143,142,141,140,139,138,137,136,135,134,133,133,134,134,136,138,139,141,142,144,145,147,148,149,150,151,152,152,152,153,153,153,153,153,153,152,152,151,150,150,149,148,146,145,142,141,139,138,137,136,135,133,132,129,128,127,126,126,126,128,129,131,132,133,135,136,136,136,135,134,133,132,131,130,129,129,128,127,126,125,124,125,125,126,127,128,131,133,135,137,138,140,140,141,142,143,143,143,142,142,141,140,138,137,136,135,135,135,135,135,134,134,133,132,131,131,130,129,129,128,127,126,126,126,126,126,126,126,126,126,127,127,127,126,126,125,125,124,124,123,122,122,121,121,120,119,118,117,117,117,117,117,117,117,116,116,116,116,116,115,115,113,111,110,108,108,107,108,108,109,110,110,110,111,112,113,116,119,121,125,127,129,132,133,134,135,136,136,137,138,139,141,142,143,144,145,146,147,148,148,149,149,150,150,150,151,151,151,152,152,152,153,153,153,154,155,155,155,156,156,157,158,158,158,160,160,160,161,162,162,163,164,164,165,165,165,165,165,164,164,164,163,163,162,162,161,160,159,158,157,157,156,155,155,154,154,153,151,150,150,149,149,149,149,149,148,148,147,146,144,143,142,141,141,142,142,142,142,142,142,141,141,141,140,140,140,140,140,140,139,138,138,137,136,136,135,134,133,132,131,130,129,127,125,124,122,122,122,122,123,125,126,127,127,128,129,130,131,132,133,134,134,135,135,135,134,133,133,132,130,129,129,129,129,130,131,131,131,132,132,132,132,132,131,130,127,125,121,119,117,116,115,114,114,114,114,115,116,117,120,122,123,125,126,126,126,126,125,124,123,122,121,120,120,121,122,123,125,127,128,131,133,134,137,138,140,142,143,145,146,148,149,150,152,153,155,156,158,159,160,160,161,162,162,163,163,163,163,163,162,161,161,160,159,158,157,156,154,153,152,150,149,148,146,145,144,143,142,140,139,139,138,138,138,139,139,139,139,139,139,140,140,141,142,144,145,147,148,150,151,152,153,155,156,157,158,159,159,160,161,161,162,162,163,163,163,163,163,163,164,165,165,165,166,166,166,166,166,167,167,167,167,167,168,168,168,168,168,167,167,167,166,166,165,164,163,161,160,159,158,156,154,153,152,150,148,145,143,140,137,135,133,132,130,129,128,127,127,126,127,127,129,131,133,135,136,137,138,137,137,136,135,133,132,131,131,131,132,132,134,136,138,141,143,144,146,147,149,150,151,152,153,153,154,154,154,155,155,155,156,157,158,158,160,161,161,162,162,162,162,162,162,161,161,160,159,158,157,156,155,155,153,152,152,152,152,152,153,153,154,155,156,156,157,158,158,159,159,160,161,161,162,163,163,164,165,166,166,167,167,168,168,169,169,169,169,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,171,171,171,171,171,171,170,170,170,170,170,170,170,171,171,172,172,172,173,174,174,175,175,175,176,176,176,176,177,177,177,176,176,176,176,176,176,176,176,175,175,175,174,174,174,173,172,172,172,171,171,171,170,170,169,169,169,169,169,169,168,168,168,169,169,169,169,170,170,171,171,171,172,172,172,173,173,173,174,174,174,174,174,174,173,173,173,172,172,172,171,171,171,170,170,170,169,168,168,167,167,167,166,166,166,165,164,163,163,162,161,161,160,159,159,158,158,157,157,157,157,157,157,156,155,155,154,153,152,152,151,149,148,147,146,145,144,144,144,145,145,145,145,145,144,143,141,140,138,137,137,136,136,135,134,132,131,129,128,128,128,130,131,134,135,135,136,135,134,133,132,131,131,131,131,130,130,129,127,126,126,125,125,125,125,125,125,126,126,127,127,126,126,125,124,124,123,123,122,122,121,120,118,117,116,116,116,118,120,121,122,122,122,123,123,123,123,123,123,122,122,122,122,124,124,125,126,126,126,124,123,121,120,119,118,118,119,119,121,121,122,123,124,124,125,125,125,127,128,129,130,131,132,133,133,133,133,133,132,131,131,130,130,130,130,129,129,129,127,126,124,123,121,120,119,118,117,116,115,114,113,113,112,111,111,110,110,109,109,109,109,109,110,111,113,115,117,121,125,128,130,133,135,136,139,141,142,144,146,147,148,150,151,152,153,153,155,155,156,157,157,158,159,159,159,160,160,160,159,159,159,158,158,157,156,156,155,153,153,151,150,149,148,148,148,148,148,148,148,147,147,147,146,146,146,146,146,146,145,145,144,144,144,143,143,142,142,141,141,140,140,139,139,138,137,137,136,135,134,133,133,133,133,133,133,132,132,133,134,134,134,136,136,136,137,137,137,137,137,138,140,141,143,144,145,146,147,148,148,149,149,150,151,151,151,152,152,152,152,152,152,153,153,153,154,154,154,154,155,155,155,156,156,156,156,157,158,157,157,156,156,155,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,153,153,152,151,150,150,151,151,151,152,152,152,152,152,152,152,152,152,152,152,152,150,150,148,147,145,144,143,143,142,142,142,142,144,144,144,144,144,143,142,141,141,141,141,141,141,141,141,141,141,141,142,142,143,144,144,144,145,145,145,146,146,146,147,147,148,148,148,149,149,149,150,150,150,150,151,151,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,153,153,153,154,154,154,155,155,156,157,157,157,157,157,158,158,158,158,158,158,157,157,157,157,156,156,156,156,156,156,157,157,157,157,157,158,158,158,159,159,159,159,160,160,160,159,159,159,158,158,158,157,157,156,155,155,154,154,154,153,154,154,154,155,155,155,156,156,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,156,156,156,156,156,156,156,156,157,157,157,157,158,158,157,157,157,157,156,156,156,156,156,155,155,155,154,153,153,152,152,152,152,151,151,150,149,149,149,149,149,148,148,148,148,148,148,148,148,148,147,147,147,146,145,145,144,143,142,142,141,141,141,141,141,141,142,142,142,141,140,139,138,138,138,139,140,141,142,143,144,145,146,147,148,149,150,150,150,149,148,148,148,147,147,146,144,144,143,143,143,142,141,141,141,139,139,139,137,137,135,133,132,131,130,129,129,128,128,128,127,127,125,124,122,121,120,119,119,120,122,125,128,130,132,134,136,138,141,142,143,144,144,143,142,141,140,139,138,138,138,138,138,138,138,137,135,135,134,133,132,131,130,129,129,127,127,126,125,124,124,124,124,123,121,119,118,116,115,115,115,115,116,117,117,117,115,114,113,112,112,112,114,114,115,117,118,119,120,120,121,122,122,124,126,127,128,131,132,133,135,136,137,138,139,140,141,143,144,145,147,148,149,150,152,153,153,154,156,156,157,158,158,159,160,160,161,162,162,163,164,164,164,165,165,165,164,164,163,162,162,161,159,158,157,155,154,153,151,150,148,145,144,143,142,143,145,148,150,152,154,156,157,159,160,161,162,162,163,164,164,164,164,164,163,162,162,162,161,161,159,157,155,154,153,152,151,150,150,149,147,147,146,146,146,147,148,148,148,150,150,151,152,153,153,154,154,154,154,154,155,154,154,154,153,153,153,152,152,151,149,148,147,146,145,143,140,139,138,138,138,138,138,138,137,135,135,134,133,134,134,136,138,140,143,144,145,147,147,147,147,147,147,148,148,148,149,149,149,150,151,151,152,152,152,153,153,154,154,154,153,153,153,153,153,153,153,152,152,152,152,152,152,151,151,151,151,151,151,152,152,153,153,154,155,156,157,157,158,158,158,158,158,158,157,157,156,155,154,153,152,151,151,152,152,152,152,152,152,152,152,151,150,149,149,148,148,149,151,151,152,153,153,153,154,154,154,154,154,154,153,153,152,150,148,147,145,144,144,146,146,147,148,148,148,146,145,144,144,144,144,146,146,146,146,146,145,143,143,143,142,142,142,142,141,140,139,139,139,138,138,138,138,138,138,138,138,139,140,141,142,144,145,146,148,150,151,152,153,153,155,155,155,155,154,154,153,153,152,152,152,151,150,150,150,149,149,149,148,148,147,146,146,145,144,143,142,141,141,141,139,139,138,137,136,135,134,134,134,133,133,133,134,134,134,132,132,131,130,130,130,132,132,132,133,133,132,132,132,133,135,136,137,139,140,142,144,146,147,149,151,152,153,154,156,158,159,160,161,163,164,166,167,168,169,170,171,172,173,174,175,176,177,178,178,179,180,180,180,181,181,181,181,181,181,180,180,180,179,179,178,177,177,176,175,174,173,171,170,169,168,166,165,126,124,122,121,123,125,129,131,134,136,138,139,140,141,142,143,144,144,144,144,144,144,144,144,145,145,146,147,148,148,149,149,150,150,150,151,152,152,152,153,153,153,153,153,153,154,155,155,156,157,158,159,160,161,162,163,164,165,165,166,167,167,168,168,168,169,169,169,169,169,169,169,168,168,168,168,168,167,165,164,163,162,161,161,160,160,160,159,158,157,156,155,155,155,155,154,153,152,151,149,148,147,146,144,143,142,141,140,139,139,140,141,142,143,144,144,144,142,142,141,141,141,142,143,143,144,144,144,144,142,142,141,140,138,137,136,136,135,134,134,134,134,134,135,136,137,137,138,138,139,139,139,139,138,138,138,137,137,137,137,136,135,134,133,132,131,130,129,128,128,128,128,128,128,127,127,126,126,126,126,128,129,130,131,131,131,129,127,126,123,122,121,121,121,122,123,124,124,124,124,123,123,123,123,125,125,126,125,125,124,122,122,122,124,125,127],"series_type":"distance","original_size":7347,"resolution":"high"}}')},function(t){t.exports=JSON.parse('{"heart_rate":{"custom_zones":false,"zones":[{"min":0,"max":112},{"min":112,"max":148},{"min":148,"max":166},{"min":166,"max":184},{"min":184,"max":-1}]}}')},function(t,e,n){t.exports=n(14)},function(t,e,n){},function(t,e,n){},function(t,e,n){},function(t,e,n){},function(t,e,n){},function(t,e,n){},function(t,e,n){},function(t,e,n){},function(t,e,n){},,,function(t,e,n){"use strict";function i(){}n.r(e);function r(t){return t()}function o(){return Object.create(null)}function s(t){t.forEach(r)}function a(t){return"function"==typeof t}function c(t,e){return t!=t?e==e:t!==e||t&&"object"==typeof t||"function"==typeof t}function l(t){return 0===Object.keys(t).length}function h(t,...e){if(null==t)return i;const n=t.subscribe(...e);return n.unsubscribe?()=>n.unsubscribe():n}function u(t,e,n){t.$$.on_destroy.push(h(e,n))}new Set;function d(t,e){t.appendChild(e)}function p(t,e,n){t.insertBefore(e,n||null)}function f(t){t.parentNode.removeChild(t)}function m(t){return document.createElement(t)}function g(t){return document.createTextNode(t)}function v(){return g(" ")}function y(t,e,n,i){return t.addEventListener(e,n,i),()=>t.removeEventListener(e,n,i)}function x(t,e,n){null==n?t.removeAttribute(e):t.getAttribute(e)!==n&&t.setAttribute(e,n)}function _(t,e){e=""+e,t.wholeText!==e&&(t.data=e)}function b(t,e,n){t.classList[n?"add":"remove"](e)}new Set;let w;function M(t){w=t}function S(){if(!w)throw new Error("Function called outside component initialization");return w}function E(t){S().$$.on_mount.push(t)}const T=[],A=[],L=[],R=[],P=Promise.resolve();let C=!1;function N(){C||(C=!0,P.then(z))}function O(t){L.push(t)}let I=!1;const D=new Set;function z(){if(!I){I=!0;do{for(let t=0;t<T.length;t+=1){const e=T[t];M(e),U(e.$$)}for(M(null),T.length=0;A.length;)A.pop()();for(let t=0;t<L.length;t+=1){const e=L[t];D.has(e)||(D.add(e),e())}L.length=0}while(T.length);for(;R.length;)R.pop()();C=!1,I=!1,D.clear()}}function U(t){if(null!==t.fragment){t.update(),s(t.before_update);const e=t.dirty;t.dirty=[-1],t.fragment&&t.fragment.p(t.ctx,e),t.after_update.forEach(O)}}const B=new Set;let H;function F(){H={r:0,c:[],p:H}}function k(){H.r||s(H.c),H=H.p}function G(t,e){t&&t.i&&(B.delete(t),t.i(e))}function V(t,e,n,i){if(t&&t.o){if(B.has(t))return;B.add(t),H.c.push(()=>{B.delete(t),i&&(n&&t.d(1),i())}),t.o(e)}}function j(t,e){const n=e.token={};function i(t,i,r,o){if(e.token!==n)return;e.resolved=o;let s=e.ctx;void 0!==r&&(s=s.slice(),s[r]=o);const a=t&&(e.current=t)(s);let c=!1;e.block&&(e.blocks?e.blocks.forEach((t,n)=>{n!==i&&t&&(F(),V(t,1,1,()=>{e.blocks[n]=null}),k())}):e.block.d(1),a.c(),G(a,1),a.m(e.mount(),e.anchor),c=!0),e.block=a,e.blocks&&(e.blocks[i]=a),c&&z()}if((r=t)&&"object"==typeof r&&"function"==typeof r.then){const n=S();if(t.then(t=>{M(n),i(e.then,1,e.value,t),M(null)},t=>{if(M(n),i(e.catch,2,e.error,t),M(null),!e.hasCatch)throw t}),e.current!==e.pending)return i(e.pending,0),!0}else{if(e.current!==e.then)return i(e.then,1,e.value,t),!0;e.resolved=t}var r}"undefined"!=typeof window?window:"undefined"!=typeof globalThis?globalThis:global;new Set(["allowfullscreen","allowpaymentrequest","async","autofocus","autoplay","checked","controls","default","defer","disabled","formnovalidate","hidden","ismap","loop","multiple","muted","nomodule","novalidate","open","playsinline","readonly","required","reversed","selected"]);let W;function q(t){t&&t.c()}function X(t,e,n){const{fragment:i,on_mount:o,on_destroy:c,after_update:l}=t.$$;i&&i.m(e,n),O(()=>{const e=o.map(r).filter(a);c?c.push(...e):s(e),t.$$.on_mount=[]}),l.forEach(O)}function Y(t,e){const n=t.$$;null!==n.fragment&&(s(n.on_destroy),n.fragment&&n.fragment.d(e),n.on_destroy=n.fragment=null,n.ctx=[])}function Z(t,e,n,r,a,c,l=[-1]){const h=w;M(t);const u=e.props||{},d=t.$$={fragment:null,ctx:null,props:c,update:i,not_equal:a,bound:o(),on_mount:[],on_destroy:[],before_update:[],after_update:[],context:new Map(h?h.$$.context:[]),callbacks:o(),dirty:l,skip_bound:!1};let p=!1;if(d.ctx=n?n(t,u,(e,n,...i)=>{const r=i.length?i[0]:n;return d.ctx&&a(d.ctx[e],d.ctx[e]=r)&&(!d.skip_bound&&d.bound[e]&&d.bound[e](r),p&&function(t,e){-1===t.$$.dirty[0]&&(T.push(t),N(),t.$$.dirty.fill(0)),t.$$.dirty[e/31|0]|=1<<e%31}(t,e)),n}):[],d.update(),p=!0,s(d.before_update),d.fragment=!!r&&r(d.ctx),e.target){if(e.hydrate){const t=(m=e.target,Array.from(m.childNodes));d.fragment&&d.fragment.l(t),t.forEach(f)}else d.fragment&&d.fragment.c();e.intro&&G(t.$$.fragment),X(t,e.target,e.anchor),z()}var m;M(h)}"function"==typeof HTMLElement&&(W=class extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"})}connectedCallback(){for(const t in this.$$.slotted)this.appendChild(this.$$.slotted[t])}attributeChangedCallback(t,e,n){this[t]=n}$destroy(){Y(this,1),this.$destroy=i}$on(t,e){const n=this.$$.callbacks[t]||(this.$$.callbacks[t]=[]);return n.push(e),()=>{const t=n.indexOf(e);-1!==t&&n.splice(t,1)}}$set(t){this.$$set&&!l(t)&&(this.$$.skip_bound=!0,this.$$set(t),this.$$.skip_bound=!1)}});class ${$destroy(){Y(this,1),this.$destroy=i}$on(t,e){const n=this.$$.callbacks[t]||(this.$$.callbacks[t]=[]);return n.push(e),()=>{const t=n.indexOf(e);-1!==t&&n.splice(t,1)}}$set(t){this.$$set&&!l(t)&&(this.$$.skip_bound=!0,this.$$set(t),this.$$.skip_bound=!1)}}const J=[];function Q(t,e=i){let n;const r=[];function o(e){if(c(t,e)&&(t=e,n)){const e=!J.length;for(let e=0;e<r.length;e+=1){const n=r[e];n[1](),J.push(n,t)}if(e){for(let t=0;t<J.length;t+=2)J[t][0](J[t+1]);J.length=0}}}return{set:o,update:function(e){o(e(t))},subscribe:function(s,a=i){const c=[s,a];return r.push(c),1===r.length&&(n=e(o)||i),s(t),()=>{const t=r.indexOf(c);-1!==t&&r.splice(t,1),0===r.length&&(n(),n=null)}}}}const K=["#0000ff","#00ff00","#ffff00","#ffa500","#ff0000"],tt=(()=>{const t=JSON.parse(localStorage.getItem("AUTH"))||null,{set:e,subscribe:n}=Q(t);return n(t=>{localStorage.setItem("AUTH",JSON.stringify(t))}),{subscribe:n,clearAuth:()=>e(null),setAuth:t=>e(t)}})();n(3);function et(t){let e,n,r,o,s,a,c,l,h,u;return{c(){e=m("nav"),n=m("span"),n.textContent="Activity Viewer 3D",r=v(),o=m("ul"),s=m("li"),a=m("span"),c=g(t[1]),l=v(),h=m("img"),x(n,"class","navbar-brand col-sm-3 col-md-2 mr-0 svelte-uj16i1"),x(h,"class","rounded-circle navbar-image svelte-uj16i1"),h.src!==(u=t[0].athlete.profile_medium)&&x(h,"src",u),x(h,"alt","Profile"),x(a,"class","navbar-text"),x(s,"class","nav-item"),x(o,"class","navbar-nav ml-auto px-3"),x(e,"class","navbar navbar-dark navbar-expand-lg fixed-top bg-dark flex-md-nowrap p-0 shadow")},m(t,i){p(t,e,i),d(e,n),d(e,r),d(e,o),d(o,s),d(s,a),d(a,c),d(a,l),d(a,h)},p(t,[e]){1&e&&h.src!==(u=t[0].athlete.profile_medium)&&x(h,"src",u)},i:i,o:i,d(t){t&&f(e)}}}function nt(t,e,n){let i;u(t,tt,t=>n(0,i=t));const r=`${i.athlete.firstname} ${i.athlete.lastname}`;return[i,r]}var it=class extends ${constructor(t){super(),Z(this,t,nt,et,c,{})}};const rt=0,ot=1,st=2,at=0,ct=1,lt=2,ht=3;function ut(){}Object.assign(ut.prototype,{addEventListener:function(t,e){void 0===this._listeners&&(this._listeners={});const n=this._listeners;void 0===n[t]&&(n[t]=[]),-1===n[t].indexOf(e)&&n[t].push(e)},hasEventListener:function(t,e){if(void 0===this._listeners)return!1;const n=this._listeners;return void 0!==n[t]&&-1!==n[t].indexOf(e)},removeEventListener:function(t,e){if(void 0===this._listeners)return;const n=this._listeners[t];if(void 0!==n){const t=n.indexOf(e);-1!==t&&n.splice(t,1)}},dispatchEvent:function(t){if(void 0===this._listeners)return;const e=this._listeners[t.type];if(void 0!==e){t.target=this;const n=e.slice(0);for(let e=0,i=n.length;e<i;e++)n[e].call(this,t)}}});const dt=[];for(let t=0;t<256;t++)dt[t]=(t<16?"0":"")+t.toString(16);let pt=1234567;const ft={DEG2RAD:Math.PI/180,RAD2DEG:180/Math.PI,generateUUID:function(){const t=4294967295*Math.random()|0,e=4294967295*Math.random()|0,n=4294967295*Math.random()|0,i=4294967295*Math.random()|0;return(dt[255&t]+dt[t>>8&255]+dt[t>>16&255]+dt[t>>24&255]+"-"+dt[255&e]+dt[e>>8&255]+"-"+dt[e>>16&15|64]+dt[e>>24&255]+"-"+dt[63&n|128]+dt[n>>8&255]+"-"+dt[n>>16&255]+dt[n>>24&255]+dt[255&i]+dt[i>>8&255]+dt[i>>16&255]+dt[i>>24&255]).toUpperCase()},clamp:function(t,e,n){return Math.max(e,Math.min(n,t))},euclideanModulo:function(t,e){return(t%e+e)%e},mapLinear:function(t,e,n,i,r){return i+(t-e)*(r-i)/(n-e)},lerp:function(t,e,n){return(1-n)*t+n*e},smoothstep:function(t,e,n){return t<=e?0:t>=n?1:(t=(t-e)/(n-e))*t*(3-2*t)},smootherstep:function(t,e,n){return t<=e?0:t>=n?1:(t=(t-e)/(n-e))*t*t*(t*(6*t-15)+10)},randInt:function(t,e){return t+Math.floor(Math.random()*(e-t+1))},randFloat:function(t,e){return t+Math.random()*(e-t)},randFloatSpread:function(t){return t*(.5-Math.random())},seededRandom:function(t){return void 0!==t&&(pt=t%2147483647),pt=16807*pt%2147483647,(pt-1)/2147483646},degToRad:function(t){return t*ft.DEG2RAD},radToDeg:function(t){return t*ft.RAD2DEG},isPowerOfTwo:function(t){return 0==(t&t-1)&&0!==t},ceilPowerOfTwo:function(t){return Math.pow(2,Math.ceil(Math.log(t)/Math.LN2))},floorPowerOfTwo:function(t){return Math.pow(2,Math.floor(Math.log(t)/Math.LN2))},setQuaternionFromProperEuler:function(t,e,n,i,r){const o=Math.cos,s=Math.sin,a=o(n/2),c=s(n/2),l=o((e+i)/2),h=s((e+i)/2),u=o((e-i)/2),d=s((e-i)/2),p=o((i-e)/2),f=s((i-e)/2);switch(r){case"XYX":t.set(a*h,c*u,c*d,a*l);break;case"YZY":t.set(c*d,a*h,c*u,a*l);break;case"ZXZ":t.set(c*u,c*d,a*h,a*l);break;case"XZX":t.set(a*h,c*f,c*p,a*l);break;case"YXY":t.set(c*p,a*h,c*f,a*l);break;case"ZYZ":t.set(c*f,c*p,a*h,a*l);break;default:console.warn("THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: "+r)}}};class mt{constructor(t=0,e=0){Object.defineProperty(this,"isVector2",{value:!0}),this.x=t,this.y=e}get width(){return this.x}set width(t){this.x=t}get height(){return this.y}set height(t){this.y=t}set(t,e){return this.x=t,this.y=e,this}setScalar(t){return this.x=t,this.y=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y)}copy(t){return this.x=t.x,this.y=t.y,this}add(t,e){return void 0!==e?(console.warn("THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(t,e)):(this.x+=t.x,this.y+=t.y,this)}addScalar(t){return this.x+=t,this.y+=t,this}addVectors(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this}addScaledVector(t,e){return this.x+=t.x*e,this.y+=t.y*e,this}sub(t,e){return void 0!==e?(console.warn("THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(t,e)):(this.x-=t.x,this.y-=t.y,this)}subScalar(t){return this.x-=t,this.y-=t,this}subVectors(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this}multiply(t){return this.x*=t.x,this.y*=t.y,this}multiplyScalar(t){return this.x*=t,this.y*=t,this}divide(t){return this.x/=t.x,this.y/=t.y,this}divideScalar(t){return this.multiplyScalar(1/t)}applyMatrix3(t){const e=this.x,n=this.y,i=t.elements;return this.x=i[0]*e+i[3]*n+i[6],this.y=i[1]*e+i[4]*n+i[7],this}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this}clamp(t,e){return this.x=Math.max(t.x,Math.min(e.x,this.x)),this.y=Math.max(t.y,Math.min(e.y,this.y)),this}clampScalar(t,e){return this.x=Math.max(t,Math.min(e,this.x)),this.y=Math.max(t,Math.min(e,this.y)),this}clampLength(t,e){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(t,Math.min(e,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(t){return this.x*t.x+this.y*t.y}cross(t){return this.x*t.y-this.y*t.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}distanceTo(t){return Math.sqrt(this.distanceToSquared(t))}distanceToSquared(t){const e=this.x-t.x,n=this.y-t.y;return e*e+n*n}manhattanDistanceTo(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this}lerpVectors(t,e,n){return this.x=t.x+(e.x-t.x)*n,this.y=t.y+(e.y-t.y)*n,this}equals(t){return t.x===this.x&&t.y===this.y}fromArray(t,e){return void 0===e&&(e=0),this.x=t[e],this.y=t[e+1],this}toArray(t,e){return void 0===t&&(t=[]),void 0===e&&(e=0),t[e]=this.x,t[e+1]=this.y,t}fromBufferAttribute(t,e,n){return void 0!==n&&console.warn("THREE.Vector2: offset has been removed from .fromBufferAttribute()."),this.x=t.getX(e),this.y=t.getY(e),this}rotateAround(t,e){const n=Math.cos(e),i=Math.sin(e),r=this.x-t.x,o=this.y-t.y;return this.x=r*n-o*i+t.x,this.y=r*i+o*n+t.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}}class gt{constructor(){Object.defineProperty(this,"isMatrix3",{value:!0}),this.elements=[1,0,0,0,1,0,0,0,1],arguments.length>0&&console.error("THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.")}set(t,e,n,i,r,o,s,a,c){const l=this.elements;return l[0]=t,l[1]=i,l[2]=s,l[3]=e,l[4]=r,l[5]=a,l[6]=n,l[7]=o,l[8]=c,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}clone(){return(new this.constructor).fromArray(this.elements)}copy(t){const e=this.elements,n=t.elements;return e[0]=n[0],e[1]=n[1],e[2]=n[2],e[3]=n[3],e[4]=n[4],e[5]=n[5],e[6]=n[6],e[7]=n[7],e[8]=n[8],this}extractBasis(t,e,n){return t.setFromMatrix3Column(this,0),e.setFromMatrix3Column(this,1),n.setFromMatrix3Column(this,2),this}setFromMatrix4(t){const e=t.elements;return this.set(e[0],e[4],e[8],e[1],e[5],e[9],e[2],e[6],e[10]),this}multiply(t){return this.multiplyMatrices(this,t)}premultiply(t){return this.multiplyMatrices(t,this)}multiplyMatrices(t,e){const n=t.elements,i=e.elements,r=this.elements,o=n[0],s=n[3],a=n[6],c=n[1],l=n[4],h=n[7],u=n[2],d=n[5],p=n[8],f=i[0],m=i[3],g=i[6],v=i[1],y=i[4],x=i[7],_=i[2],b=i[5],w=i[8];return r[0]=o*f+s*v+a*_,r[3]=o*m+s*y+a*b,r[6]=o*g+s*x+a*w,r[1]=c*f+l*v+h*_,r[4]=c*m+l*y+h*b,r[7]=c*g+l*x+h*w,r[2]=u*f+d*v+p*_,r[5]=u*m+d*y+p*b,r[8]=u*g+d*x+p*w,this}multiplyScalar(t){const e=this.elements;return e[0]*=t,e[3]*=t,e[6]*=t,e[1]*=t,e[4]*=t,e[7]*=t,e[2]*=t,e[5]*=t,e[8]*=t,this}determinant(){const t=this.elements,e=t[0],n=t[1],i=t[2],r=t[3],o=t[4],s=t[5],a=t[6],c=t[7],l=t[8];return e*o*l-e*s*c-n*r*l+n*s*a+i*r*c-i*o*a}getInverse(t,e){void 0!==e&&console.warn("THREE.Matrix3: .getInverse() can no longer be configured to throw on degenerate.");const n=t.elements,i=this.elements,r=n[0],o=n[1],s=n[2],a=n[3],c=n[4],l=n[5],h=n[6],u=n[7],d=n[8],p=d*c-l*u,f=l*h-d*a,m=u*a-c*h,g=r*p+o*f+s*m;if(0===g)return this.set(0,0,0,0,0,0,0,0,0);const v=1/g;return i[0]=p*v,i[1]=(s*u-d*o)*v,i[2]=(l*o-s*c)*v,i[3]=f*v,i[4]=(d*r-s*h)*v,i[5]=(s*a-l*r)*v,i[6]=m*v,i[7]=(o*h-u*r)*v,i[8]=(c*r-o*a)*v,this}transpose(){let t;const e=this.elements;return t=e[1],e[1]=e[3],e[3]=t,t=e[2],e[2]=e[6],e[6]=t,t=e[5],e[5]=e[7],e[7]=t,this}getNormalMatrix(t){return this.setFromMatrix4(t).getInverse(this).transpose()}transposeIntoArray(t){const e=this.elements;return t[0]=e[0],t[1]=e[3],t[2]=e[6],t[3]=e[1],t[4]=e[4],t[5]=e[7],t[6]=e[2],t[7]=e[5],t[8]=e[8],this}setUvTransform(t,e,n,i,r,o,s){const a=Math.cos(r),c=Math.sin(r);this.set(n*a,n*c,-n*(a*o+c*s)+o+t,-i*c,i*a,-i*(-c*o+a*s)+s+e,0,0,1)}scale(t,e){const n=this.elements;return n[0]*=t,n[3]*=t,n[6]*=t,n[1]*=e,n[4]*=e,n[7]*=e,this}rotate(t){const e=Math.cos(t),n=Math.sin(t),i=this.elements,r=i[0],o=i[3],s=i[6],a=i[1],c=i[4],l=i[7];return i[0]=e*r+n*a,i[3]=e*o+n*c,i[6]=e*s+n*l,i[1]=-n*r+e*a,i[4]=-n*o+e*c,i[7]=-n*s+e*l,this}translate(t,e){const n=this.elements;return n[0]+=t*n[2],n[3]+=t*n[5],n[6]+=t*n[8],n[1]+=e*n[2],n[4]+=e*n[5],n[7]+=e*n[8],this}equals(t){const e=this.elements,n=t.elements;for(let t=0;t<9;t++)if(e[t]!==n[t])return!1;return!0}fromArray(t,e){void 0===e&&(e=0);for(let n=0;n<9;n++)this.elements[n]=t[n+e];return this}toArray(t,e){void 0===t&&(t=[]),void 0===e&&(e=0);const n=this.elements;return t[e]=n[0],t[e+1]=n[1],t[e+2]=n[2],t[e+3]=n[3],t[e+4]=n[4],t[e+5]=n[5],t[e+6]=n[6],t[e+7]=n[7],t[e+8]=n[8],t}}let vt;const yt={getDataURL:function(t){if(/^data:/i.test(t.src))return t.src;if("undefined"==typeof HTMLCanvasElement)return t.src;let e;if(t instanceof HTMLCanvasElement)e=t;else{void 0===vt&&(vt=document.createElementNS("http://www.w3.org/1999/xhtml","canvas")),vt.width=t.width,vt.height=t.height;const n=vt.getContext("2d");t instanceof ImageData?n.putImageData(t,0,0):n.drawImage(t,0,0,t.width,t.height),e=vt}return e.width>2048||e.height>2048?e.toDataURL("image/jpeg",.6):e.toDataURL("image/png")}};let xt=0;function _t(t,e,n,i,r,o,s,a,c,l){Object.defineProperty(this,"id",{value:xt++}),this.uuid=ft.generateUUID(),this.name="",this.image=void 0!==t?t:_t.DEFAULT_IMAGE,this.mipmaps=[],this.mapping=void 0!==e?e:_t.DEFAULT_MAPPING,this.wrapS=void 0!==n?n:1001,this.wrapT=void 0!==i?i:1001,this.magFilter=void 0!==r?r:1006,this.minFilter=void 0!==o?o:1008,this.anisotropy=void 0!==c?c:1,this.format=void 0!==s?s:1023,this.internalFormat=null,this.type=void 0!==a?a:1009,this.offset=new mt(0,0),this.repeat=new mt(1,1),this.center=new mt(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new gt,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.encoding=void 0!==l?l:3e3,this.version=0,this.onUpdate=null}_t.DEFAULT_IMAGE=void 0,_t.DEFAULT_MAPPING=300,_t.prototype=Object.assign(Object.create(ut.prototype),{constructor:_t,isTexture:!0,updateMatrix:function(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)},clone:function(){return(new this.constructor).copy(this)},copy:function(t){return this.name=t.name,this.image=t.image,this.mipmaps=t.mipmaps.slice(0),this.mapping=t.mapping,this.wrapS=t.wrapS,this.wrapT=t.wrapT,this.magFilter=t.magFilter,this.minFilter=t.minFilter,this.anisotropy=t.anisotropy,this.format=t.format,this.internalFormat=t.internalFormat,this.type=t.type,this.offset.copy(t.offset),this.repeat.copy(t.repeat),this.center.copy(t.center),this.rotation=t.rotation,this.matrixAutoUpdate=t.matrixAutoUpdate,this.matrix.copy(t.matrix),this.generateMipmaps=t.generateMipmaps,this.premultiplyAlpha=t.premultiplyAlpha,this.flipY=t.flipY,this.unpackAlignment=t.unpackAlignment,this.encoding=t.encoding,this},toJSON:function(t){const e=void 0===t||"string"==typeof t;if(!e&&void 0!==t.textures[this.uuid])return t.textures[this.uuid];const n={metadata:{version:4.5,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,mapping:this.mapping,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,type:this.type,encoding:this.encoding,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};if(void 0!==this.image){const i=this.image;if(void 0===i.uuid&&(i.uuid=ft.generateUUID()),!e&&void 0===t.images[i.uuid]){let e;if(Array.isArray(i)){e=[];for(let t=0,n=i.length;t<n;t++)e.push(yt.getDataURL(i[t]))}else e=yt.getDataURL(i);t.images[i.uuid]={uuid:i.uuid,url:e}}n.image=i.uuid}return e||(t.textures[this.uuid]=n),n},dispose:function(){this.dispatchEvent({type:"dispose"})},transformUv:function(t){if(300!==this.mapping)return t;if(t.applyMatrix3(this.matrix),t.x<0||t.x>1)switch(this.wrapS){case 1e3:t.x=t.x-Math.floor(t.x);break;case 1001:t.x=t.x<0?0:1;break;case 1002:1===Math.abs(Math.floor(t.x)%2)?t.x=Math.ceil(t.x)-t.x:t.x=t.x-Math.floor(t.x)}if(t.y<0||t.y>1)switch(this.wrapT){case 1e3:t.y=t.y-Math.floor(t.y);break;case 1001:t.y=t.y<0?0:1;break;case 1002:1===Math.abs(Math.floor(t.y)%2)?t.y=Math.ceil(t.y)-t.y:t.y=t.y-Math.floor(t.y)}return this.flipY&&(t.y=1-t.y),t}}),Object.defineProperty(_t.prototype,"needsUpdate",{set:function(t){!0===t&&this.version++}});class bt{constructor(t=0,e=0,n=0,i=1){Object.defineProperty(this,"isVector4",{value:!0}),this.x=t,this.y=e,this.z=n,this.w=i}get width(){return this.z}set width(t){this.z=t}get height(){return this.w}set height(t){this.w=t}set(t,e,n,i){return this.x=t,this.y=e,this.z=n,this.w=i,this}setScalar(t){return this.x=t,this.y=t,this.z=t,this.w=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setZ(t){return this.z=t,this}setW(t){return this.w=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;case 2:this.z=e;break;case 3:this.w=e;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this.w=void 0!==t.w?t.w:1,this}add(t,e){return void 0!==e?(console.warn("THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(t,e)):(this.x+=t.x,this.y+=t.y,this.z+=t.z,this.w+=t.w,this)}addScalar(t){return this.x+=t,this.y+=t,this.z+=t,this.w+=t,this}addVectors(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this.z=t.z+e.z,this.w=t.w+e.w,this}addScaledVector(t,e){return this.x+=t.x*e,this.y+=t.y*e,this.z+=t.z*e,this.w+=t.w*e,this}sub(t,e){return void 0!==e?(console.warn("THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(t,e)):(this.x-=t.x,this.y-=t.y,this.z-=t.z,this.w-=t.w,this)}subScalar(t){return this.x-=t,this.y-=t,this.z-=t,this.w-=t,this}subVectors(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this.z=t.z-e.z,this.w=t.w-e.w,this}multiplyScalar(t){return this.x*=t,this.y*=t,this.z*=t,this.w*=t,this}applyMatrix4(t){const e=this.x,n=this.y,i=this.z,r=this.w,o=t.elements;return this.x=o[0]*e+o[4]*n+o[8]*i+o[12]*r,this.y=o[1]*e+o[5]*n+o[9]*i+o[13]*r,this.z=o[2]*e+o[6]*n+o[10]*i+o[14]*r,this.w=o[3]*e+o[7]*n+o[11]*i+o[15]*r,this}divideScalar(t){return this.multiplyScalar(1/t)}setAxisAngleFromQuaternion(t){this.w=2*Math.acos(t.w);const e=Math.sqrt(1-t.w*t.w);return e<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=t.x/e,this.y=t.y/e,this.z=t.z/e),this}setAxisAngleFromRotationMatrix(t){let e,n,i,r;const o=t.elements,s=o[0],a=o[4],c=o[8],l=o[1],h=o[5],u=o[9],d=o[2],p=o[6],f=o[10];if(Math.abs(a-l)<.01&&Math.abs(c-d)<.01&&Math.abs(u-p)<.01){if(Math.abs(a+l)<.1&&Math.abs(c+d)<.1&&Math.abs(u+p)<.1&&Math.abs(s+h+f-3)<.1)return this.set(1,0,0,0),this;e=Math.PI;const t=(s+1)/2,o=(h+1)/2,m=(f+1)/2,g=(a+l)/4,v=(c+d)/4,y=(u+p)/4;return t>o&&t>m?t<.01?(n=0,i=.707106781,r=.707106781):(n=Math.sqrt(t),i=g/n,r=v/n):o>m?o<.01?(n=.707106781,i=0,r=.707106781):(i=Math.sqrt(o),n=g/i,r=y/i):m<.01?(n=.707106781,i=.707106781,r=0):(r=Math.sqrt(m),n=v/r,i=y/r),this.set(n,i,r,e),this}let m=Math.sqrt((p-u)*(p-u)+(c-d)*(c-d)+(l-a)*(l-a));return Math.abs(m)<.001&&(m=1),this.x=(p-u)/m,this.y=(c-d)/m,this.z=(l-a)/m,this.w=Math.acos((s+h+f-1)/2),this}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this.z=Math.min(this.z,t.z),this.w=Math.min(this.w,t.w),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this.z=Math.max(this.z,t.z),this.w=Math.max(this.w,t.w),this}clamp(t,e){return this.x=Math.max(t.x,Math.min(e.x,this.x)),this.y=Math.max(t.y,Math.min(e.y,this.y)),this.z=Math.max(t.z,Math.min(e.z,this.z)),this.w=Math.max(t.w,Math.min(e.w,this.w)),this}clampScalar(t,e){return this.x=Math.max(t,Math.min(e,this.x)),this.y=Math.max(t,Math.min(e,this.y)),this.z=Math.max(t,Math.min(e,this.z)),this.w=Math.max(t,Math.min(e,this.w)),this}clampLength(t,e){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(t,Math.min(e,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this.w=this.w<0?Math.ceil(this.w):Math.floor(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z+this.w*t.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this.z+=(t.z-this.z)*e,this.w+=(t.w-this.w)*e,this}lerpVectors(t,e,n){return this.x=t.x+(e.x-t.x)*n,this.y=t.y+(e.y-t.y)*n,this.z=t.z+(e.z-t.z)*n,this.w=t.w+(e.w-t.w)*n,this}equals(t){return t.x===this.x&&t.y===this.y&&t.z===this.z&&t.w===this.w}fromArray(t,e){return void 0===e&&(e=0),this.x=t[e],this.y=t[e+1],this.z=t[e+2],this.w=t[e+3],this}toArray(t,e){return void 0===t&&(t=[]),void 0===e&&(e=0),t[e]=this.x,t[e+1]=this.y,t[e+2]=this.z,t[e+3]=this.w,t}fromBufferAttribute(t,e,n){return void 0!==n&&console.warn("THREE.Vector4: offset has been removed from .fromBufferAttribute()."),this.x=t.getX(e),this.y=t.getY(e),this.z=t.getZ(e),this.w=t.getW(e),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}}function wt(t,e,n){this.width=t,this.height=e,this.scissor=new bt(0,0,t,e),this.scissorTest=!1,this.viewport=new bt(0,0,t,e),n=n||{},this.texture=new _t(void 0,n.mapping,n.wrapS,n.wrapT,n.magFilter,n.minFilter,n.format,n.type,n.anisotropy,n.encoding),this.texture.image={},this.texture.image.width=t,this.texture.image.height=e,this.texture.generateMipmaps=void 0!==n.generateMipmaps&&n.generateMipmaps,this.texture.minFilter=void 0!==n.minFilter?n.minFilter:1006,this.depthBuffer=void 0===n.depthBuffer||n.depthBuffer,this.stencilBuffer=void 0!==n.stencilBuffer&&n.stencilBuffer,this.depthTexture=void 0!==n.depthTexture?n.depthTexture:null}function Mt(t,e,n){wt.call(this,t,e,n),this.samples=4}wt.prototype=Object.assign(Object.create(ut.prototype),{constructor:wt,isWebGLRenderTarget:!0,setSize:function(t,e){this.width===t&&this.height===e||(this.width=t,this.height=e,this.texture.image.width=t,this.texture.image.height=e,this.dispose()),this.viewport.set(0,0,t,e),this.scissor.set(0,0,t,e)},clone:function(){return(new this.constructor).copy(this)},copy:function(t){return this.width=t.width,this.height=t.height,this.viewport.copy(t.viewport),this.texture=t.texture.clone(),this.depthBuffer=t.depthBuffer,this.stencilBuffer=t.stencilBuffer,this.depthTexture=t.depthTexture,this},dispose:function(){this.dispatchEvent({type:"dispose"})}}),Mt.prototype=Object.assign(Object.create(wt.prototype),{constructor:Mt,isWebGLMultisampleRenderTarget:!0,copy:function(t){return wt.prototype.copy.call(this,t),this.samples=t.samples,this}});class St{constructor(t=0,e=0,n=0,i=1){Object.defineProperty(this,"isQuaternion",{value:!0}),this._x=t,this._y=e,this._z=n,this._w=i}static slerp(t,e,n,i){return n.copy(t).slerp(e,i)}static slerpFlat(t,e,n,i,r,o,s){let a=n[i+0],c=n[i+1],l=n[i+2],h=n[i+3];const u=r[o+0],d=r[o+1],p=r[o+2],f=r[o+3];if(h!==f||a!==u||c!==d||l!==p){let t=1-s;const e=a*u+c*d+l*p+h*f,n=e>=0?1:-1,i=1-e*e;if(i>Number.EPSILON){const r=Math.sqrt(i),o=Math.atan2(r,e*n);t=Math.sin(t*o)/r,s=Math.sin(s*o)/r}const r=s*n;if(a=a*t+u*r,c=c*t+d*r,l=l*t+p*r,h=h*t+f*r,t===1-s){const t=1/Math.sqrt(a*a+c*c+l*l+h*h);a*=t,c*=t,l*=t,h*=t}}t[e]=a,t[e+1]=c,t[e+2]=l,t[e+3]=h}static multiplyQuaternionsFlat(t,e,n,i,r,o){const s=n[i],a=n[i+1],c=n[i+2],l=n[i+3],h=r[o],u=r[o+1],d=r[o+2],p=r[o+3];return t[e]=s*p+l*h+a*d-c*u,t[e+1]=a*p+l*u+c*h-s*d,t[e+2]=c*p+l*d+s*u-a*h,t[e+3]=l*p-s*h-a*u-c*d,t}get x(){return this._x}set x(t){this._x=t,this._onChangeCallback()}get y(){return this._y}set y(t){this._y=t,this._onChangeCallback()}get z(){return this._z}set z(t){this._z=t,this._onChangeCallback()}get w(){return this._w}set w(t){this._w=t,this._onChangeCallback()}set(t,e,n,i){return this._x=t,this._y=e,this._z=n,this._w=i,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(t){return this._x=t.x,this._y=t.y,this._z=t.z,this._w=t.w,this._onChangeCallback(),this}setFromEuler(t,e){if(!t||!t.isEuler)throw new Error("THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.");const n=t._x,i=t._y,r=t._z,o=t._order,s=Math.cos,a=Math.sin,c=s(n/2),l=s(i/2),h=s(r/2),u=a(n/2),d=a(i/2),p=a(r/2);switch(o){case"XYZ":this._x=u*l*h+c*d*p,this._y=c*d*h-u*l*p,this._z=c*l*p+u*d*h,this._w=c*l*h-u*d*p;break;case"YXZ":this._x=u*l*h+c*d*p,this._y=c*d*h-u*l*p,this._z=c*l*p-u*d*h,this._w=c*l*h+u*d*p;break;case"ZXY":this._x=u*l*h-c*d*p,this._y=c*d*h+u*l*p,this._z=c*l*p+u*d*h,this._w=c*l*h-u*d*p;break;case"ZYX":this._x=u*l*h-c*d*p,this._y=c*d*h+u*l*p,this._z=c*l*p-u*d*h,this._w=c*l*h+u*d*p;break;case"YZX":this._x=u*l*h+c*d*p,this._y=c*d*h+u*l*p,this._z=c*l*p-u*d*h,this._w=c*l*h-u*d*p;break;case"XZY":this._x=u*l*h-c*d*p,this._y=c*d*h-u*l*p,this._z=c*l*p+u*d*h,this._w=c*l*h+u*d*p;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+o)}return!1!==e&&this._onChangeCallback(),this}setFromAxisAngle(t,e){const n=e/2,i=Math.sin(n);return this._x=t.x*i,this._y=t.y*i,this._z=t.z*i,this._w=Math.cos(n),this._onChangeCallback(),this}setFromRotationMatrix(t){const e=t.elements,n=e[0],i=e[4],r=e[8],o=e[1],s=e[5],a=e[9],c=e[2],l=e[6],h=e[10],u=n+s+h;if(u>0){const t=.5/Math.sqrt(u+1);this._w=.25/t,this._x=(l-a)*t,this._y=(r-c)*t,this._z=(o-i)*t}else if(n>s&&n>h){const t=2*Math.sqrt(1+n-s-h);this._w=(l-a)/t,this._x=.25*t,this._y=(i+o)/t,this._z=(r+c)/t}else if(s>h){const t=2*Math.sqrt(1+s-n-h);this._w=(r-c)/t,this._x=(i+o)/t,this._y=.25*t,this._z=(a+l)/t}else{const t=2*Math.sqrt(1+h-n-s);this._w=(o-i)/t,this._x=(r+c)/t,this._y=(a+l)/t,this._z=.25*t}return this._onChangeCallback(),this}setFromUnitVectors(t,e){let n=t.dot(e)+1;return n<1e-6?(n=0,Math.abs(t.x)>Math.abs(t.z)?(this._x=-t.y,this._y=t.x,this._z=0,this._w=n):(this._x=0,this._y=-t.z,this._z=t.y,this._w=n)):(this._x=t.y*e.z-t.z*e.y,this._y=t.z*e.x-t.x*e.z,this._z=t.x*e.y-t.y*e.x,this._w=n),this.normalize()}angleTo(t){return 2*Math.acos(Math.abs(ft.clamp(this.dot(t),-1,1)))}rotateTowards(t,e){const n=this.angleTo(t);if(0===n)return this;const i=Math.min(1,e/n);return this.slerp(t,i),this}identity(){return this.set(0,0,0,1)}inverse(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(t){return this._x*t._x+this._y*t._y+this._z*t._z+this._w*t._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let t=this.length();return 0===t?(this._x=0,this._y=0,this._z=0,this._w=1):(t=1/t,this._x=this._x*t,this._y=this._y*t,this._z=this._z*t,this._w=this._w*t),this._onChangeCallback(),this}multiply(t,e){return void 0!==e?(console.warn("THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead."),this.multiplyQuaternions(t,e)):this.multiplyQuaternions(this,t)}premultiply(t){return this.multiplyQuaternions(t,this)}multiplyQuaternions(t,e){const n=t._x,i=t._y,r=t._z,o=t._w,s=e._x,a=e._y,c=e._z,l=e._w;return this._x=n*l+o*s+i*c-r*a,this._y=i*l+o*a+r*s-n*c,this._z=r*l+o*c+n*a-i*s,this._w=o*l-n*s-i*a-r*c,this._onChangeCallback(),this}slerp(t,e){if(0===e)return this;if(1===e)return this.copy(t);const n=this._x,i=this._y,r=this._z,o=this._w;let s=o*t._w+n*t._x+i*t._y+r*t._z;if(s<0?(this._w=-t._w,this._x=-t._x,this._y=-t._y,this._z=-t._z,s=-s):this.copy(t),s>=1)return this._w=o,this._x=n,this._y=i,this._z=r,this;const a=1-s*s;if(a<=Number.EPSILON){const t=1-e;return this._w=t*o+e*this._w,this._x=t*n+e*this._x,this._y=t*i+e*this._y,this._z=t*r+e*this._z,this.normalize(),this._onChangeCallback(),this}const c=Math.sqrt(a),l=Math.atan2(c,s),h=Math.sin((1-e)*l)/c,u=Math.sin(e*l)/c;return this._w=o*h+this._w*u,this._x=n*h+this._x*u,this._y=i*h+this._y*u,this._z=r*h+this._z*u,this._onChangeCallback(),this}equals(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._w===this._w}fromArray(t,e){return void 0===e&&(e=0),this._x=t[e],this._y=t[e+1],this._z=t[e+2],this._w=t[e+3],this._onChangeCallback(),this}toArray(t,e){return void 0===t&&(t=[]),void 0===e&&(e=0),t[e]=this._x,t[e+1]=this._y,t[e+2]=this._z,t[e+3]=this._w,t}fromBufferAttribute(t,e){return this._x=t.getX(e),this._y=t.getY(e),this._z=t.getZ(e),this._w=t.getW(e),this}_onChange(t){return this._onChangeCallback=t,this}_onChangeCallback(){}}class Et{constructor(t=0,e=0,n=0){Object.defineProperty(this,"isVector3",{value:!0}),this.x=t,this.y=e,this.z=n}set(t,e,n){return void 0===n&&(n=this.z),this.x=t,this.y=e,this.z=n,this}setScalar(t){return this.x=t,this.y=t,this.z=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setZ(t){return this.z=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;case 2:this.z=e;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this}add(t,e){return void 0!==e?(console.warn("THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(t,e)):(this.x+=t.x,this.y+=t.y,this.z+=t.z,this)}addScalar(t){return this.x+=t,this.y+=t,this.z+=t,this}addVectors(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this.z=t.z+e.z,this}addScaledVector(t,e){return this.x+=t.x*e,this.y+=t.y*e,this.z+=t.z*e,this}sub(t,e){return void 0!==e?(console.warn("THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(t,e)):(this.x-=t.x,this.y-=t.y,this.z-=t.z,this)}subScalar(t){return this.x-=t,this.y-=t,this.z-=t,this}subVectors(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this.z=t.z-e.z,this}multiply(t,e){return void 0!==e?(console.warn("THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead."),this.multiplyVectors(t,e)):(this.x*=t.x,this.y*=t.y,this.z*=t.z,this)}multiplyScalar(t){return this.x*=t,this.y*=t,this.z*=t,this}multiplyVectors(t,e){return this.x=t.x*e.x,this.y=t.y*e.y,this.z=t.z*e.z,this}applyEuler(t){return t&&t.isEuler||console.error("THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order."),this.applyQuaternion(At.setFromEuler(t))}applyAxisAngle(t,e){return this.applyQuaternion(At.setFromAxisAngle(t,e))}applyMatrix3(t){const e=this.x,n=this.y,i=this.z,r=t.elements;return this.x=r[0]*e+r[3]*n+r[6]*i,this.y=r[1]*e+r[4]*n+r[7]*i,this.z=r[2]*e+r[5]*n+r[8]*i,this}applyNormalMatrix(t){return this.applyMatrix3(t).normalize()}applyMatrix4(t){const e=this.x,n=this.y,i=this.z,r=t.elements,o=1/(r[3]*e+r[7]*n+r[11]*i+r[15]);return this.x=(r[0]*e+r[4]*n+r[8]*i+r[12])*o,this.y=(r[1]*e+r[5]*n+r[9]*i+r[13])*o,this.z=(r[2]*e+r[6]*n+r[10]*i+r[14])*o,this}applyQuaternion(t){const e=this.x,n=this.y,i=this.z,r=t.x,o=t.y,s=t.z,a=t.w,c=a*e+o*i-s*n,l=a*n+s*e-r*i,h=a*i+r*n-o*e,u=-r*e-o*n-s*i;return this.x=c*a+u*-r+l*-s-h*-o,this.y=l*a+u*-o+h*-r-c*-s,this.z=h*a+u*-s+c*-o-l*-r,this}project(t){return this.applyMatrix4(t.matrixWorldInverse).applyMatrix4(t.projectionMatrix)}unproject(t){return this.applyMatrix4(t.projectionMatrixInverse).applyMatrix4(t.matrixWorld)}transformDirection(t){const e=this.x,n=this.y,i=this.z,r=t.elements;return this.x=r[0]*e+r[4]*n+r[8]*i,this.y=r[1]*e+r[5]*n+r[9]*i,this.z=r[2]*e+r[6]*n+r[10]*i,this.normalize()}divide(t){return this.x/=t.x,this.y/=t.y,this.z/=t.z,this}divideScalar(t){return this.multiplyScalar(1/t)}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this.z=Math.min(this.z,t.z),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this.z=Math.max(this.z,t.z),this}clamp(t,e){return this.x=Math.max(t.x,Math.min(e.x,this.x)),this.y=Math.max(t.y,Math.min(e.y,this.y)),this.z=Math.max(t.z,Math.min(e.z,this.z)),this}clampScalar(t,e){return this.x=Math.max(t,Math.min(e,this.x)),this.y=Math.max(t,Math.min(e,this.y)),this.z=Math.max(t,Math.min(e,this.z)),this}clampLength(t,e){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(t,Math.min(e,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this.z+=(t.z-this.z)*e,this}lerpVectors(t,e,n){return this.x=t.x+(e.x-t.x)*n,this.y=t.y+(e.y-t.y)*n,this.z=t.z+(e.z-t.z)*n,this}cross(t,e){return void 0!==e?(console.warn("THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead."),this.crossVectors(t,e)):this.crossVectors(this,t)}crossVectors(t,e){const n=t.x,i=t.y,r=t.z,o=e.x,s=e.y,a=e.z;return this.x=i*a-r*s,this.y=r*o-n*a,this.z=n*s-i*o,this}projectOnVector(t){const e=t.lengthSq();if(0===e)return this.set(0,0,0);const n=t.dot(this)/e;return this.copy(t).multiplyScalar(n)}projectOnPlane(t){return Tt.copy(this).projectOnVector(t),this.sub(Tt)}reflect(t){return this.sub(Tt.copy(t).multiplyScalar(2*this.dot(t)))}angleTo(t){const e=Math.sqrt(this.lengthSq()*t.lengthSq());if(0===e)return Math.PI/2;const n=this.dot(t)/e;return Math.acos(ft.clamp(n,-1,1))}distanceTo(t){return Math.sqrt(this.distanceToSquared(t))}distanceToSquared(t){const e=this.x-t.x,n=this.y-t.y,i=this.z-t.z;return e*e+n*n+i*i}manhattanDistanceTo(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)+Math.abs(this.z-t.z)}setFromSpherical(t){return this.setFromSphericalCoords(t.radius,t.phi,t.theta)}setFromSphericalCoords(t,e,n){const i=Math.sin(e)*t;return this.x=i*Math.sin(n),this.y=Math.cos(e)*t,this.z=i*Math.cos(n),this}setFromCylindrical(t){return this.setFromCylindricalCoords(t.radius,t.theta,t.y)}setFromCylindricalCoords(t,e,n){return this.x=t*Math.sin(e),this.y=n,this.z=t*Math.cos(e),this}setFromMatrixPosition(t){const e=t.elements;return this.x=e[12],this.y=e[13],this.z=e[14],this}setFromMatrixScale(t){const e=this.setFromMatrixColumn(t,0).length(),n=this.setFromMatrixColumn(t,1).length(),i=this.setFromMatrixColumn(t,2).length();return this.x=e,this.y=n,this.z=i,this}setFromMatrixColumn(t,e){return this.fromArray(t.elements,4*e)}setFromMatrix3Column(t,e){return this.fromArray(t.elements,3*e)}equals(t){return t.x===this.x&&t.y===this.y&&t.z===this.z}fromArray(t,e){return void 0===e&&(e=0),this.x=t[e],this.y=t[e+1],this.z=t[e+2],this}toArray(t,e){return void 0===t&&(t=[]),void 0===e&&(e=0),t[e]=this.x,t[e+1]=this.y,t[e+2]=this.z,t}fromBufferAttribute(t,e,n){return void 0!==n&&console.warn("THREE.Vector3: offset has been removed from .fromBufferAttribute()."),this.x=t.getX(e),this.y=t.getY(e),this.z=t.getZ(e),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}}const Tt=new Et,At=new St;class Lt{constructor(t,e){Object.defineProperty(this,"isBox3",{value:!0}),this.min=void 0!==t?t:new Et(1/0,1/0,1/0),this.max=void 0!==e?e:new Et(-1/0,-1/0,-1/0)}set(t,e){return this.min.copy(t),this.max.copy(e),this}setFromArray(t){let e=1/0,n=1/0,i=1/0,r=-1/0,o=-1/0,s=-1/0;for(let a=0,c=t.length;a<c;a+=3){const c=t[a],l=t[a+1],h=t[a+2];c<e&&(e=c),l<n&&(n=l),h<i&&(i=h),c>r&&(r=c),l>o&&(o=l),h>s&&(s=h)}return this.min.set(e,n,i),this.max.set(r,o,s),this}setFromBufferAttribute(t){let e=1/0,n=1/0,i=1/0,r=-1/0,o=-1/0,s=-1/0;for(let a=0,c=t.count;a<c;a++){const c=t.getX(a),l=t.getY(a),h=t.getZ(a);c<e&&(e=c),l<n&&(n=l),h<i&&(i=h),c>r&&(r=c),l>o&&(o=l),h>s&&(s=h)}return this.min.set(e,n,i),this.max.set(r,o,s),this}setFromPoints(t){this.makeEmpty();for(let e=0,n=t.length;e<n;e++)this.expandByPoint(t[e]);return this}setFromCenterAndSize(t,e){const n=Ct.copy(e).multiplyScalar(.5);return this.min.copy(t).sub(n),this.max.copy(t).add(n),this}setFromObject(t){return this.makeEmpty(),this.expandByObject(t)}clone(){return(new this.constructor).copy(this)}copy(t){return this.min.copy(t.min),this.max.copy(t.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(t){return void 0===t&&(console.warn("THREE.Box3: .getCenter() target is now required"),t=new Et),this.isEmpty()?t.set(0,0,0):t.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(t){return void 0===t&&(console.warn("THREE.Box3: .getSize() target is now required"),t=new Et),this.isEmpty()?t.set(0,0,0):t.subVectors(this.max,this.min)}expandByPoint(t){return this.min.min(t),this.max.max(t),this}expandByVector(t){return this.min.sub(t),this.max.add(t),this}expandByScalar(t){return this.min.addScalar(-t),this.max.addScalar(t),this}expandByObject(t){t.updateWorldMatrix(!1,!1);const e=t.geometry;void 0!==e&&(null===e.boundingBox&&e.computeBoundingBox(),Nt.copy(e.boundingBox),Nt.applyMatrix4(t.matrixWorld),this.union(Nt));const n=t.children;for(let t=0,e=n.length;t<e;t++)this.expandByObject(n[t]);return this}containsPoint(t){return!(t.x<this.min.x||t.x>this.max.x||t.y<this.min.y||t.y>this.max.y||t.z<this.min.z||t.z>this.max.z)}containsBox(t){return this.min.x<=t.min.x&&t.max.x<=this.max.x&&this.min.y<=t.min.y&&t.max.y<=this.max.y&&this.min.z<=t.min.z&&t.max.z<=this.max.z}getParameter(t,e){return void 0===e&&(console.warn("THREE.Box3: .getParameter() target is now required"),e=new Et),e.set((t.x-this.min.x)/(this.max.x-this.min.x),(t.y-this.min.y)/(this.max.y-this.min.y),(t.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(t){return!(t.max.x<this.min.x||t.min.x>this.max.x||t.max.y<this.min.y||t.min.y>this.max.y||t.max.z<this.min.z||t.min.z>this.max.z)}intersectsSphere(t){return this.clampPoint(t.center,Ct),Ct.distanceToSquared(t.center)<=t.radius*t.radius}intersectsPlane(t){let e,n;return t.normal.x>0?(e=t.normal.x*this.min.x,n=t.normal.x*this.max.x):(e=t.normal.x*this.max.x,n=t.normal.x*this.min.x),t.normal.y>0?(e+=t.normal.y*this.min.y,n+=t.normal.y*this.max.y):(e+=t.normal.y*this.max.y,n+=t.normal.y*this.min.y),t.normal.z>0?(e+=t.normal.z*this.min.z,n+=t.normal.z*this.max.z):(e+=t.normal.z*this.max.z,n+=t.normal.z*this.min.z),e<=-t.constant&&n>=-t.constant}intersectsTriangle(t){if(this.isEmpty())return!1;this.getCenter(Ht),Ft.subVectors(this.max,Ht),Ot.subVectors(t.a,Ht),It.subVectors(t.b,Ht),Dt.subVectors(t.c,Ht),zt.subVectors(It,Ot),Ut.subVectors(Dt,It),Bt.subVectors(Ot,Dt);let e=[0,-zt.z,zt.y,0,-Ut.z,Ut.y,0,-Bt.z,Bt.y,zt.z,0,-zt.x,Ut.z,0,-Ut.x,Bt.z,0,-Bt.x,-zt.y,zt.x,0,-Ut.y,Ut.x,0,-Bt.y,Bt.x,0];return!!Rt(e,Ot,It,Dt,Ft)&&(e=[1,0,0,0,1,0,0,0,1],!!Rt(e,Ot,It,Dt,Ft)&&(kt.crossVectors(zt,Ut),e=[kt.x,kt.y,kt.z],Rt(e,Ot,It,Dt,Ft)))}clampPoint(t,e){return void 0===e&&(console.warn("THREE.Box3: .clampPoint() target is now required"),e=new Et),e.copy(t).clamp(this.min,this.max)}distanceToPoint(t){return Ct.copy(t).clamp(this.min,this.max).sub(t).length()}getBoundingSphere(t){return void 0===t&&console.error("THREE.Box3: .getBoundingSphere() target is now required"),this.getCenter(t.center),t.radius=.5*this.getSize(Ct).length(),t}intersect(t){return this.min.max(t.min),this.max.min(t.max),this.isEmpty()&&this.makeEmpty(),this}union(t){return this.min.min(t.min),this.max.max(t.max),this}applyMatrix4(t){return this.isEmpty()||(Pt[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(t),Pt[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(t),Pt[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(t),Pt[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(t),Pt[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(t),Pt[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(t),Pt[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(t),Pt[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(t),this.setFromPoints(Pt)),this}translate(t){return this.min.add(t),this.max.add(t),this}equals(t){return t.min.equals(this.min)&&t.max.equals(this.max)}}function Rt(t,e,n,i,r){for(let o=0,s=t.length-3;o<=s;o+=3){Gt.fromArray(t,o);const s=r.x*Math.abs(Gt.x)+r.y*Math.abs(Gt.y)+r.z*Math.abs(Gt.z),a=e.dot(Gt),c=n.dot(Gt),l=i.dot(Gt);if(Math.max(-Math.max(a,c,l),Math.min(a,c,l))>s)return!1}return!0}const Pt=[new Et,new Et,new Et,new Et,new Et,new Et,new Et,new Et],Ct=new Et,Nt=new Lt,Ot=new Et,It=new Et,Dt=new Et,zt=new Et,Ut=new Et,Bt=new Et,Ht=new Et,Ft=new Et,kt=new Et,Gt=new Et,Vt=new Lt;class jt{constructor(t,e){this.center=void 0!==t?t:new Et,this.radius=void 0!==e?e:-1}set(t,e){return this.center.copy(t),this.radius=e,this}setFromPoints(t,e){const n=this.center;void 0!==e?n.copy(e):Vt.setFromPoints(t).getCenter(n);let i=0;for(let e=0,r=t.length;e<r;e++)i=Math.max(i,n.distanceToSquared(t[e]));return this.radius=Math.sqrt(i),this}clone(){return(new this.constructor).copy(this)}copy(t){return this.center.copy(t.center),this.radius=t.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(t){return t.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(t){return t.distanceTo(this.center)-this.radius}intersectsSphere(t){const e=this.radius+t.radius;return t.center.distanceToSquared(this.center)<=e*e}intersectsBox(t){return t.intersectsSphere(this)}intersectsPlane(t){return Math.abs(t.distanceToPoint(this.center))<=this.radius}clampPoint(t,e){const n=this.center.distanceToSquared(t);return void 0===e&&(console.warn("THREE.Sphere: .clampPoint() target is now required"),e=new Et),e.copy(t),n>this.radius*this.radius&&(e.sub(this.center).normalize(),e.multiplyScalar(this.radius).add(this.center)),e}getBoundingBox(t){return void 0===t&&(console.warn("THREE.Sphere: .getBoundingBox() target is now required"),t=new Lt),this.isEmpty()?(t.makeEmpty(),t):(t.set(this.center,this.center),t.expandByScalar(this.radius),t)}applyMatrix4(t){return this.center.applyMatrix4(t),this.radius=this.radius*t.getMaxScaleOnAxis(),this}translate(t){return this.center.add(t),this}equals(t){return t.center.equals(this.center)&&t.radius===this.radius}}const Wt=new Et,qt=new Et,Xt=new Et,Yt=new Et,Zt=new Et,$t=new Et,Jt=new Et;class Qt{constructor(t,e){this.origin=void 0!==t?t:new Et,this.direction=void 0!==e?e:new Et(0,0,-1)}set(t,e){return this.origin.copy(t),this.direction.copy(e),this}clone(){return(new this.constructor).copy(this)}copy(t){return this.origin.copy(t.origin),this.direction.copy(t.direction),this}at(t,e){return void 0===e&&(console.warn("THREE.Ray: .at() target is now required"),e=new Et),e.copy(this.direction).multiplyScalar(t).add(this.origin)}lookAt(t){return this.direction.copy(t).sub(this.origin).normalize(),this}recast(t){return this.origin.copy(this.at(t,Wt)),this}closestPointToPoint(t,e){void 0===e&&(console.warn("THREE.Ray: .closestPointToPoint() target is now required"),e=new Et),e.subVectors(t,this.origin);const n=e.dot(this.direction);return n<0?e.copy(this.origin):e.copy(this.direction).multiplyScalar(n).add(this.origin)}distanceToPoint(t){return Math.sqrt(this.distanceSqToPoint(t))}distanceSqToPoint(t){const e=Wt.subVectors(t,this.origin).dot(this.direction);return e<0?this.origin.distanceToSquared(t):(Wt.copy(this.direction).multiplyScalar(e).add(this.origin),Wt.distanceToSquared(t))}distanceSqToSegment(t,e,n,i){qt.copy(t).add(e).multiplyScalar(.5),Xt.copy(e).sub(t).normalize(),Yt.copy(this.origin).sub(qt);const r=.5*t.distanceTo(e),o=-this.direction.dot(Xt),s=Yt.dot(this.direction),a=-Yt.dot(Xt),c=Yt.lengthSq(),l=Math.abs(1-o*o);let h,u,d,p;if(l>0)if(h=o*a-s,u=o*s-a,p=r*l,h>=0)if(u>=-p)if(u<=p){const t=1/l;h*=t,u*=t,d=h*(h+o*u+2*s)+u*(o*h+u+2*a)+c}else u=r,h=Math.max(0,-(o*u+s)),d=-h*h+u*(u+2*a)+c;else u=-r,h=Math.max(0,-(o*u+s)),d=-h*h+u*(u+2*a)+c;else u<=-p?(h=Math.max(0,-(-o*r+s)),u=h>0?-r:Math.min(Math.max(-r,-a),r),d=-h*h+u*(u+2*a)+c):u<=p?(h=0,u=Math.min(Math.max(-r,-a),r),d=u*(u+2*a)+c):(h=Math.max(0,-(o*r+s)),u=h>0?r:Math.min(Math.max(-r,-a),r),d=-h*h+u*(u+2*a)+c);else u=o>0?-r:r,h=Math.max(0,-(o*u+s)),d=-h*h+u*(u+2*a)+c;return n&&n.copy(this.direction).multiplyScalar(h).add(this.origin),i&&i.copy(Xt).multiplyScalar(u).add(qt),d}intersectSphere(t,e){Wt.subVectors(t.center,this.origin);const n=Wt.dot(this.direction),i=Wt.dot(Wt)-n*n,r=t.radius*t.radius;if(i>r)return null;const o=Math.sqrt(r-i),s=n-o,a=n+o;return s<0&&a<0?null:s<0?this.at(a,e):this.at(s,e)}intersectsSphere(t){return this.distanceSqToPoint(t.center)<=t.radius*t.radius}distanceToPlane(t){const e=t.normal.dot(this.direction);if(0===e)return 0===t.distanceToPoint(this.origin)?0:null;const n=-(this.origin.dot(t.normal)+t.constant)/e;return n>=0?n:null}intersectPlane(t,e){const n=this.distanceToPlane(t);return null===n?null:this.at(n,e)}intersectsPlane(t){const e=t.distanceToPoint(this.origin);if(0===e)return!0;return t.normal.dot(this.direction)*e<0}intersectBox(t,e){let n,i,r,o,s,a;const c=1/this.direction.x,l=1/this.direction.y,h=1/this.direction.z,u=this.origin;return c>=0?(n=(t.min.x-u.x)*c,i=(t.max.x-u.x)*c):(n=(t.max.x-u.x)*c,i=(t.min.x-u.x)*c),l>=0?(r=(t.min.y-u.y)*l,o=(t.max.y-u.y)*l):(r=(t.max.y-u.y)*l,o=(t.min.y-u.y)*l),n>o||r>i?null:((r>n||n!=n)&&(n=r),(o<i||i!=i)&&(i=o),h>=0?(s=(t.min.z-u.z)*h,a=(t.max.z-u.z)*h):(s=(t.max.z-u.z)*h,a=(t.min.z-u.z)*h),n>a||s>i?null:((s>n||n!=n)&&(n=s),(a<i||i!=i)&&(i=a),i<0?null:this.at(n>=0?n:i,e)))}intersectsBox(t){return null!==this.intersectBox(t,Wt)}intersectTriangle(t,e,n,i,r){Zt.subVectors(e,t),$t.subVectors(n,t),Jt.crossVectors(Zt,$t);let o,s=this.direction.dot(Jt);if(s>0){if(i)return null;o=1}else{if(!(s<0))return null;o=-1,s=-s}Yt.subVectors(this.origin,t);const a=o*this.direction.dot($t.crossVectors(Yt,$t));if(a<0)return null;const c=o*this.direction.dot(Zt.cross(Yt));if(c<0)return null;if(a+c>s)return null;const l=-o*Yt.dot(Jt);return l<0?null:this.at(l/s,r)}applyMatrix4(t){return this.origin.applyMatrix4(t),this.direction.transformDirection(t),this}equals(t){return t.origin.equals(this.origin)&&t.direction.equals(this.direction)}}class Kt{constructor(){Object.defineProperty(this,"isMatrix4",{value:!0}),this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],arguments.length>0&&console.error("THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.")}set(t,e,n,i,r,o,s,a,c,l,h,u,d,p,f,m){const g=this.elements;return g[0]=t,g[4]=e,g[8]=n,g[12]=i,g[1]=r,g[5]=o,g[9]=s,g[13]=a,g[2]=c,g[6]=l,g[10]=h,g[14]=u,g[3]=d,g[7]=p,g[11]=f,g[15]=m,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return(new Kt).fromArray(this.elements)}copy(t){const e=this.elements,n=t.elements;return e[0]=n[0],e[1]=n[1],e[2]=n[2],e[3]=n[3],e[4]=n[4],e[5]=n[5],e[6]=n[6],e[7]=n[7],e[8]=n[8],e[9]=n[9],e[10]=n[10],e[11]=n[11],e[12]=n[12],e[13]=n[13],e[14]=n[14],e[15]=n[15],this}copyPosition(t){const e=this.elements,n=t.elements;return e[12]=n[12],e[13]=n[13],e[14]=n[14],this}extractBasis(t,e,n){return t.setFromMatrixColumn(this,0),e.setFromMatrixColumn(this,1),n.setFromMatrixColumn(this,2),this}makeBasis(t,e,n){return this.set(t.x,e.x,n.x,0,t.y,e.y,n.y,0,t.z,e.z,n.z,0,0,0,0,1),this}extractRotation(t){const e=this.elements,n=t.elements,i=1/te.setFromMatrixColumn(t,0).length(),r=1/te.setFromMatrixColumn(t,1).length(),o=1/te.setFromMatrixColumn(t,2).length();return e[0]=n[0]*i,e[1]=n[1]*i,e[2]=n[2]*i,e[3]=0,e[4]=n[4]*r,e[5]=n[5]*r,e[6]=n[6]*r,e[7]=0,e[8]=n[8]*o,e[9]=n[9]*o,e[10]=n[10]*o,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,this}makeRotationFromEuler(t){t&&t.isEuler||console.error("THREE.Matrix4: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.");const e=this.elements,n=t.x,i=t.y,r=t.z,o=Math.cos(n),s=Math.sin(n),a=Math.cos(i),c=Math.sin(i),l=Math.cos(r),h=Math.sin(r);if("XYZ"===t.order){const t=o*l,n=o*h,i=s*l,r=s*h;e[0]=a*l,e[4]=-a*h,e[8]=c,e[1]=n+i*c,e[5]=t-r*c,e[9]=-s*a,e[2]=r-t*c,e[6]=i+n*c,e[10]=o*a}else if("YXZ"===t.order){const t=a*l,n=a*h,i=c*l,r=c*h;e[0]=t+r*s,e[4]=i*s-n,e[8]=o*c,e[1]=o*h,e[5]=o*l,e[9]=-s,e[2]=n*s-i,e[6]=r+t*s,e[10]=o*a}else if("ZXY"===t.order){const t=a*l,n=a*h,i=c*l,r=c*h;e[0]=t-r*s,e[4]=-o*h,e[8]=i+n*s,e[1]=n+i*s,e[5]=o*l,e[9]=r-t*s,e[2]=-o*c,e[6]=s,e[10]=o*a}else if("ZYX"===t.order){const t=o*l,n=o*h,i=s*l,r=s*h;e[0]=a*l,e[4]=i*c-n,e[8]=t*c+r,e[1]=a*h,e[5]=r*c+t,e[9]=n*c-i,e[2]=-c,e[6]=s*a,e[10]=o*a}else if("YZX"===t.order){const t=o*a,n=o*c,i=s*a,r=s*c;e[0]=a*l,e[4]=r-t*h,e[8]=i*h+n,e[1]=h,e[5]=o*l,e[9]=-s*l,e[2]=-c*l,e[6]=n*h+i,e[10]=t-r*h}else if("XZY"===t.order){const t=o*a,n=o*c,i=s*a,r=s*c;e[0]=a*l,e[4]=-h,e[8]=c*l,e[1]=t*h+r,e[5]=o*l,e[9]=n*h-i,e[2]=i*h-n,e[6]=s*l,e[10]=r*h+t}return e[3]=0,e[7]=0,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,this}makeRotationFromQuaternion(t){return this.compose(ne,t,ie)}lookAt(t,e,n){const i=this.elements;return se.subVectors(t,e),0===se.lengthSq()&&(se.z=1),se.normalize(),re.crossVectors(n,se),0===re.lengthSq()&&(1===Math.abs(n.z)?se.x+=1e-4:se.z+=1e-4,se.normalize(),re.crossVectors(n,se)),re.normalize(),oe.crossVectors(se,re),i[0]=re.x,i[4]=oe.x,i[8]=se.x,i[1]=re.y,i[5]=oe.y,i[9]=se.y,i[2]=re.z,i[6]=oe.z,i[10]=se.z,this}multiply(t,e){return void 0!==e?(console.warn("THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead."),this.multiplyMatrices(t,e)):this.multiplyMatrices(this,t)}premultiply(t){return this.multiplyMatrices(t,this)}multiplyMatrices(t,e){const n=t.elements,i=e.elements,r=this.elements,o=n[0],s=n[4],a=n[8],c=n[12],l=n[1],h=n[5],u=n[9],d=n[13],p=n[2],f=n[6],m=n[10],g=n[14],v=n[3],y=n[7],x=n[11],_=n[15],b=i[0],w=i[4],M=i[8],S=i[12],E=i[1],T=i[5],A=i[9],L=i[13],R=i[2],P=i[6],C=i[10],N=i[14],O=i[3],I=i[7],D=i[11],z=i[15];return r[0]=o*b+s*E+a*R+c*O,r[4]=o*w+s*T+a*P+c*I,r[8]=o*M+s*A+a*C+c*D,r[12]=o*S+s*L+a*N+c*z,r[1]=l*b+h*E+u*R+d*O,r[5]=l*w+h*T+u*P+d*I,r[9]=l*M+h*A+u*C+d*D,r[13]=l*S+h*L+u*N+d*z,r[2]=p*b+f*E+m*R+g*O,r[6]=p*w+f*T+m*P+g*I,r[10]=p*M+f*A+m*C+g*D,r[14]=p*S+f*L+m*N+g*z,r[3]=v*b+y*E+x*R+_*O,r[7]=v*w+y*T+x*P+_*I,r[11]=v*M+y*A+x*C+_*D,r[15]=v*S+y*L+x*N+_*z,this}multiplyScalar(t){const e=this.elements;return e[0]*=t,e[4]*=t,e[8]*=t,e[12]*=t,e[1]*=t,e[5]*=t,e[9]*=t,e[13]*=t,e[2]*=t,e[6]*=t,e[10]*=t,e[14]*=t,e[3]*=t,e[7]*=t,e[11]*=t,e[15]*=t,this}determinant(){const t=this.elements,e=t[0],n=t[4],i=t[8],r=t[12],o=t[1],s=t[5],a=t[9],c=t[13],l=t[2],h=t[6],u=t[10],d=t[14];return t[3]*(+r*a*h-i*c*h-r*s*u+n*c*u+i*s*d-n*a*d)+t[7]*(+e*a*d-e*c*u+r*o*u-i*o*d+i*c*l-r*a*l)+t[11]*(+e*c*h-e*s*d-r*o*h+n*o*d+r*s*l-n*c*l)+t[15]*(-i*s*l-e*a*h+e*s*u+i*o*h-n*o*u+n*a*l)}transpose(){const t=this.elements;let e;return e=t[1],t[1]=t[4],t[4]=e,e=t[2],t[2]=t[8],t[8]=e,e=t[6],t[6]=t[9],t[9]=e,e=t[3],t[3]=t[12],t[12]=e,e=t[7],t[7]=t[13],t[13]=e,e=t[11],t[11]=t[14],t[14]=e,this}setPosition(t,e,n){const i=this.elements;return t.isVector3?(i[12]=t.x,i[13]=t.y,i[14]=t.z):(i[12]=t,i[13]=e,i[14]=n),this}getInverse(t,e){void 0!==e&&console.warn("THREE.Matrix4: .getInverse() can no longer be configured to throw on degenerate.");const n=this.elements,i=t.elements,r=i[0],o=i[1],s=i[2],a=i[3],c=i[4],l=i[5],h=i[6],u=i[7],d=i[8],p=i[9],f=i[10],m=i[11],g=i[12],v=i[13],y=i[14],x=i[15],_=p*y*u-v*f*u+v*h*m-l*y*m-p*h*x+l*f*x,b=g*f*u-d*y*u-g*h*m+c*y*m+d*h*x-c*f*x,w=d*v*u-g*p*u+g*l*m-c*v*m-d*l*x+c*p*x,M=g*p*h-d*v*h-g*l*f+c*v*f+d*l*y-c*p*y,S=r*_+o*b+s*w+a*M;if(0===S)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const E=1/S;return n[0]=_*E,n[1]=(v*f*a-p*y*a-v*s*m+o*y*m+p*s*x-o*f*x)*E,n[2]=(l*y*a-v*h*a+v*s*u-o*y*u-l*s*x+o*h*x)*E,n[3]=(p*h*a-l*f*a-p*s*u+o*f*u+l*s*m-o*h*m)*E,n[4]=b*E,n[5]=(d*y*a-g*f*a+g*s*m-r*y*m-d*s*x+r*f*x)*E,n[6]=(g*h*a-c*y*a-g*s*u+r*y*u+c*s*x-r*h*x)*E,n[7]=(c*f*a-d*h*a+d*s*u-r*f*u-c*s*m+r*h*m)*E,n[8]=w*E,n[9]=(g*p*a-d*v*a-g*o*m+r*v*m+d*o*x-r*p*x)*E,n[10]=(c*v*a-g*l*a+g*o*u-r*v*u-c*o*x+r*l*x)*E,n[11]=(d*l*a-c*p*a-d*o*u+r*p*u+c*o*m-r*l*m)*E,n[12]=M*E,n[13]=(d*v*s-g*p*s+g*o*f-r*v*f-d*o*y+r*p*y)*E,n[14]=(g*l*s-c*v*s-g*o*h+r*v*h+c*o*y-r*l*y)*E,n[15]=(c*p*s-d*l*s+d*o*h-r*p*h-c*o*f+r*l*f)*E,this}scale(t){const e=this.elements,n=t.x,i=t.y,r=t.z;return e[0]*=n,e[4]*=i,e[8]*=r,e[1]*=n,e[5]*=i,e[9]*=r,e[2]*=n,e[6]*=i,e[10]*=r,e[3]*=n,e[7]*=i,e[11]*=r,this}getMaxScaleOnAxis(){const t=this.elements,e=t[0]*t[0]+t[1]*t[1]+t[2]*t[2],n=t[4]*t[4]+t[5]*t[5]+t[6]*t[6],i=t[8]*t[8]+t[9]*t[9]+t[10]*t[10];return Math.sqrt(Math.max(e,n,i))}makeTranslation(t,e,n){return this.set(1,0,0,t,0,1,0,e,0,0,1,n,0,0,0,1),this}makeRotationX(t){const e=Math.cos(t),n=Math.sin(t);return this.set(1,0,0,0,0,e,-n,0,0,n,e,0,0,0,0,1),this}makeRotationY(t){const e=Math.cos(t),n=Math.sin(t);return this.set(e,0,n,0,0,1,0,0,-n,0,e,0,0,0,0,1),this}makeRotationZ(t){const e=Math.cos(t),n=Math.sin(t);return this.set(e,-n,0,0,n,e,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(t,e){const n=Math.cos(e),i=Math.sin(e),r=1-n,o=t.x,s=t.y,a=t.z,c=r*o,l=r*s;return this.set(c*o+n,c*s-i*a,c*a+i*s,0,c*s+i*a,l*s+n,l*a-i*o,0,c*a-i*s,l*a+i*o,r*a*a+n,0,0,0,0,1),this}makeScale(t,e,n){return this.set(t,0,0,0,0,e,0,0,0,0,n,0,0,0,0,1),this}makeShear(t,e,n){return this.set(1,e,n,0,t,1,n,0,t,e,1,0,0,0,0,1),this}compose(t,e,n){const i=this.elements,r=e._x,o=e._y,s=e._z,a=e._w,c=r+r,l=o+o,h=s+s,u=r*c,d=r*l,p=r*h,f=o*l,m=o*h,g=s*h,v=a*c,y=a*l,x=a*h,_=n.x,b=n.y,w=n.z;return i[0]=(1-(f+g))*_,i[1]=(d+x)*_,i[2]=(p-y)*_,i[3]=0,i[4]=(d-x)*b,i[5]=(1-(u+g))*b,i[6]=(m+v)*b,i[7]=0,i[8]=(p+y)*w,i[9]=(m-v)*w,i[10]=(1-(u+f))*w,i[11]=0,i[12]=t.x,i[13]=t.y,i[14]=t.z,i[15]=1,this}decompose(t,e,n){const i=this.elements;let r=te.set(i[0],i[1],i[2]).length();const o=te.set(i[4],i[5],i[6]).length(),s=te.set(i[8],i[9],i[10]).length();this.determinant()<0&&(r=-r),t.x=i[12],t.y=i[13],t.z=i[14],ee.copy(this);const a=1/r,c=1/o,l=1/s;return ee.elements[0]*=a,ee.elements[1]*=a,ee.elements[2]*=a,ee.elements[4]*=c,ee.elements[5]*=c,ee.elements[6]*=c,ee.elements[8]*=l,ee.elements[9]*=l,ee.elements[10]*=l,e.setFromRotationMatrix(ee),n.x=r,n.y=o,n.z=s,this}makePerspective(t,e,n,i,r,o){void 0===o&&console.warn("THREE.Matrix4: .makePerspective() has been redefined and has a new signature. Please check the docs.");const s=this.elements,a=2*r/(e-t),c=2*r/(n-i),l=(e+t)/(e-t),h=(n+i)/(n-i),u=-(o+r)/(o-r),d=-2*o*r/(o-r);return s[0]=a,s[4]=0,s[8]=l,s[12]=0,s[1]=0,s[5]=c,s[9]=h,s[13]=0,s[2]=0,s[6]=0,s[10]=u,s[14]=d,s[3]=0,s[7]=0,s[11]=-1,s[15]=0,this}makeOrthographic(t,e,n,i,r,o){const s=this.elements,a=1/(e-t),c=1/(n-i),l=1/(o-r),h=(e+t)*a,u=(n+i)*c,d=(o+r)*l;return s[0]=2*a,s[4]=0,s[8]=0,s[12]=-h,s[1]=0,s[5]=2*c,s[9]=0,s[13]=-u,s[2]=0,s[6]=0,s[10]=-2*l,s[14]=-d,s[3]=0,s[7]=0,s[11]=0,s[15]=1,this}equals(t){const e=this.elements,n=t.elements;for(let t=0;t<16;t++)if(e[t]!==n[t])return!1;return!0}fromArray(t,e){void 0===e&&(e=0);for(let n=0;n<16;n++)this.elements[n]=t[n+e];return this}toArray(t,e){void 0===t&&(t=[]),void 0===e&&(e=0);const n=this.elements;return t[e]=n[0],t[e+1]=n[1],t[e+2]=n[2],t[e+3]=n[3],t[e+4]=n[4],t[e+5]=n[5],t[e+6]=n[6],t[e+7]=n[7],t[e+8]=n[8],t[e+9]=n[9],t[e+10]=n[10],t[e+11]=n[11],t[e+12]=n[12],t[e+13]=n[13],t[e+14]=n[14],t[e+15]=n[15],t}}const te=new Et,ee=new Kt,ne=new Et(0,0,0),ie=new Et(1,1,1),re=new Et,oe=new Et,se=new Et;class ae{constructor(t=0,e=0,n=0,i=ae.DefaultOrder){Object.defineProperty(this,"isEuler",{value:!0}),this._x=t,this._y=e,this._z=n,this._order=i}get x(){return this._x}set x(t){this._x=t,this._onChangeCallback()}get y(){return this._y}set y(t){this._y=t,this._onChangeCallback()}get z(){return this._z}set z(t){this._z=t,this._onChangeCallback()}get order(){return this._order}set order(t){this._order=t,this._onChangeCallback()}set(t,e,n,i){return this._x=t,this._y=e,this._z=n,this._order=i||this._order,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(t){return this._x=t._x,this._y=t._y,this._z=t._z,this._order=t._order,this._onChangeCallback(),this}setFromRotationMatrix(t,e,n){const i=ft.clamp,r=t.elements,o=r[0],s=r[4],a=r[8],c=r[1],l=r[5],h=r[9],u=r[2],d=r[6],p=r[10];switch(e=e||this._order){case"XYZ":this._y=Math.asin(i(a,-1,1)),Math.abs(a)<.9999999?(this._x=Math.atan2(-h,p),this._z=Math.atan2(-s,o)):(this._x=Math.atan2(d,l),this._z=0);break;case"YXZ":this._x=Math.asin(-i(h,-1,1)),Math.abs(h)<.9999999?(this._y=Math.atan2(a,p),this._z=Math.atan2(c,l)):(this._y=Math.atan2(-u,o),this._z=0);break;case"ZXY":this._x=Math.asin(i(d,-1,1)),Math.abs(d)<.9999999?(this._y=Math.atan2(-u,p),this._z=Math.atan2(-s,l)):(this._y=0,this._z=Math.atan2(c,o));break;case"ZYX":this._y=Math.asin(-i(u,-1,1)),Math.abs(u)<.9999999?(this._x=Math.atan2(d,p),this._z=Math.atan2(c,o)):(this._x=0,this._z=Math.atan2(-s,l));break;case"YZX":this._z=Math.asin(i(c,-1,1)),Math.abs(c)<.9999999?(this._x=Math.atan2(-h,l),this._y=Math.atan2(-u,o)):(this._x=0,this._y=Math.atan2(a,p));break;case"XZY":this._z=Math.asin(-i(s,-1,1)),Math.abs(s)<.9999999?(this._x=Math.atan2(d,l),this._y=Math.atan2(a,o)):(this._x=Math.atan2(-h,p),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+e)}return this._order=e,!1!==n&&this._onChangeCallback(),this}setFromQuaternion(t,e,n){return ce.makeRotationFromQuaternion(t),this.setFromRotationMatrix(ce,e,n)}setFromVector3(t,e){return this.set(t.x,t.y,t.z,e||this._order)}reorder(t){return le.setFromEuler(this),this.setFromQuaternion(le,t)}equals(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._order===this._order}fromArray(t){return this._x=t[0],this._y=t[1],this._z=t[2],void 0!==t[3]&&(this._order=t[3]),this._onChangeCallback(),this}toArray(t,e){return void 0===t&&(t=[]),void 0===e&&(e=0),t[e]=this._x,t[e+1]=this._y,t[e+2]=this._z,t[e+3]=this._order,t}toVector3(t){return t?t.set(this._x,this._y,this._z):new Et(this._x,this._y,this._z)}_onChange(t){return this._onChangeCallback=t,this}_onChangeCallback(){}}ae.DefaultOrder="XYZ",ae.RotationOrders=["XYZ","YZX","ZXY","XZY","YXZ","ZYX"];const ce=new Kt,le=new St;class he{constructor(){this.mask=1}set(t){this.mask=1<<t|0}enable(t){this.mask|=1<<t|0}enableAll(){this.mask=-1}toggle(t){this.mask^=1<<t|0}disable(t){this.mask&=~(1<<t|0)}disableAll(){this.mask=0}test(t){return 0!=(this.mask&t.mask)}}let ue=0;const de=new Et,pe=new St,fe=new Kt,me=new Et,ge=new Et,ve=new Et,ye=new St,xe=new Et(1,0,0),_e=new Et(0,1,0),be=new Et(0,0,1),we={type:"added"},Me={type:"removed"};function Se(){Object.defineProperty(this,"id",{value:ue++}),this.uuid=ft.generateUUID(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=Se.DefaultUp.clone();const t=new Et,e=new ae,n=new St,i=new Et(1,1,1);e._onChange((function(){n.setFromEuler(e,!1)})),n._onChange((function(){e.setFromQuaternion(n,void 0,!1)})),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:t},rotation:{configurable:!0,enumerable:!0,value:e},quaternion:{configurable:!0,enumerable:!0,value:n},scale:{configurable:!0,enumerable:!0,value:i},modelViewMatrix:{value:new Kt},normalMatrix:{value:new gt}}),this.matrix=new Kt,this.matrixWorld=new Kt,this.matrixAutoUpdate=Se.DefaultMatrixAutoUpdate,this.matrixWorldNeedsUpdate=!1,this.layers=new he,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.userData={}}Se.DefaultUp=new Et(0,1,0),Se.DefaultMatrixAutoUpdate=!0,Se.prototype=Object.assign(Object.create(ut.prototype),{constructor:Se,isObject3D:!0,onBeforeRender:function(){},onAfterRender:function(){},applyMatrix4:function(t){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(t),this.matrix.decompose(this.position,this.quaternion,this.scale)},applyQuaternion:function(t){return this.quaternion.premultiply(t),this},setRotationFromAxisAngle:function(t,e){this.quaternion.setFromAxisAngle(t,e)},setRotationFromEuler:function(t){this.quaternion.setFromEuler(t,!0)},setRotationFromMatrix:function(t){this.quaternion.setFromRotationMatrix(t)},setRotationFromQuaternion:function(t){this.quaternion.copy(t)},rotateOnAxis:function(t,e){return pe.setFromAxisAngle(t,e),this.quaternion.multiply(pe),this},rotateOnWorldAxis:function(t,e){return pe.setFromAxisAngle(t,e),this.quaternion.premultiply(pe),this},rotateX:function(t){return this.rotateOnAxis(xe,t)},rotateY:function(t){return this.rotateOnAxis(_e,t)},rotateZ:function(t){return this.rotateOnAxis(be,t)},translateOnAxis:function(t,e){return de.copy(t).applyQuaternion(this.quaternion),this.position.add(de.multiplyScalar(e)),this},translateX:function(t){return this.translateOnAxis(xe,t)},translateY:function(t){return this.translateOnAxis(_e,t)},translateZ:function(t){return this.translateOnAxis(be,t)},localToWorld:function(t){return t.applyMatrix4(this.matrixWorld)},worldToLocal:function(t){return t.applyMatrix4(fe.getInverse(this.matrixWorld))},lookAt:function(t,e,n){t.isVector3?me.copy(t):me.set(t,e,n);const i=this.parent;this.updateWorldMatrix(!0,!1),ge.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?fe.lookAt(ge,me,this.up):fe.lookAt(me,ge,this.up),this.quaternion.setFromRotationMatrix(fe),i&&(fe.extractRotation(i.matrixWorld),pe.setFromRotationMatrix(fe),this.quaternion.premultiply(pe.inverse()))},add:function(t){if(arguments.length>1){for(let t=0;t<arguments.length;t++)this.add(arguments[t]);return this}return t===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",t),this):(t&&t.isObject3D?(null!==t.parent&&t.parent.remove(t),t.parent=this,this.children.push(t),t.dispatchEvent(we)):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",t),this)},remove:function(t){if(arguments.length>1){for(let t=0;t<arguments.length;t++)this.remove(arguments[t]);return this}const e=this.children.indexOf(t);return-1!==e&&(t.parent=null,this.children.splice(e,1),t.dispatchEvent(Me)),this},attach:function(t){return this.updateWorldMatrix(!0,!1),fe.getInverse(this.matrixWorld),null!==t.parent&&(t.parent.updateWorldMatrix(!0,!1),fe.multiply(t.parent.matrixWorld)),t.applyMatrix4(fe),t.updateWorldMatrix(!1,!1),this.add(t),this},getObjectById:function(t){return this.getObjectByProperty("id",t)},getObjectByName:function(t){return this.getObjectByProperty("name",t)},getObjectByProperty:function(t,e){if(this[t]===e)return this;for(let n=0,i=this.children.length;n<i;n++){const i=this.children[n].getObjectByProperty(t,e);if(void 0!==i)return i}},getWorldPosition:function(t){return void 0===t&&(console.warn("THREE.Object3D: .getWorldPosition() target is now required"),t=new Et),this.updateWorldMatrix(!0,!1),t.setFromMatrixPosition(this.matrixWorld)},getWorldQuaternion:function(t){return void 0===t&&(console.warn("THREE.Object3D: .getWorldQuaternion() target is now required"),t=new St),this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(ge,t,ve),t},getWorldScale:function(t){return void 0===t&&(console.warn("THREE.Object3D: .getWorldScale() target is now required"),t=new Et),this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(ge,ye,t),t},getWorldDirection:function(t){void 0===t&&(console.warn("THREE.Object3D: .getWorldDirection() target is now required"),t=new Et),this.updateWorldMatrix(!0,!1);const e=this.matrixWorld.elements;return t.set(e[8],e[9],e[10]).normalize()},raycast:function(){},traverse:function(t){t(this);const e=this.children;for(let n=0,i=e.length;n<i;n++)e[n].traverse(t)},traverseVisible:function(t){if(!1===this.visible)return;t(this);const e=this.children;for(let n=0,i=e.length;n<i;n++)e[n].traverseVisible(t)},traverseAncestors:function(t){const e=this.parent;null!==e&&(t(e),e.traverseAncestors(t))},updateMatrix:function(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0},updateMatrixWorld:function(t){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||t)&&(null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,t=!0);const e=this.children;for(let n=0,i=e.length;n<i;n++)e[n].updateMatrixWorld(t)},updateWorldMatrix:function(t,e){const n=this.parent;if(!0===t&&null!==n&&n.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),!0===e){const t=this.children;for(let e=0,n=t.length;e<n;e++)t[e].updateWorldMatrix(!1,!0)}},toJSON:function(t){const e=void 0===t||"string"==typeof t,n={};e&&(t={geometries:{},materials:{},textures:{},images:{},shapes:{}},n.metadata={version:4.5,type:"Object",generator:"Object3D.toJSON"});const i={};function r(e,n){return void 0===e[n.uuid]&&(e[n.uuid]=n.toJSON(t)),n.uuid}if(i.uuid=this.uuid,i.type=this.type,""!==this.name&&(i.name=this.name),!0===this.castShadow&&(i.castShadow=!0),!0===this.receiveShadow&&(i.receiveShadow=!0),!1===this.visible&&(i.visible=!1),!1===this.frustumCulled&&(i.frustumCulled=!1),0!==this.renderOrder&&(i.renderOrder=this.renderOrder),"{}"!==JSON.stringify(this.userData)&&(i.userData=this.userData),i.layers=this.layers.mask,i.matrix=this.matrix.toArray(),!1===this.matrixAutoUpdate&&(i.matrixAutoUpdate=!1),this.isInstancedMesh&&(i.type="InstancedMesh",i.count=this.count,i.instanceMatrix=this.instanceMatrix.toJSON()),this.isMesh||this.isLine||this.isPoints){i.geometry=r(t.geometries,this.geometry);const e=this.geometry.parameters;if(void 0!==e&&void 0!==e.shapes){const n=e.shapes;if(Array.isArray(n))for(let e=0,i=n.length;e<i;e++){const i=n[e];r(t.shapes,i)}else r(t.shapes,n)}}if(void 0!==this.material)if(Array.isArray(this.material)){const e=[];for(let n=0,i=this.material.length;n<i;n++)e.push(r(t.materials,this.material[n]));i.material=e}else i.material=r(t.materials,this.material);if(this.children.length>0){i.children=[];for(let e=0;e<this.children.length;e++)i.children.push(this.children[e].toJSON(t).object)}if(e){const e=o(t.geometries),i=o(t.materials),r=o(t.textures),s=o(t.images),a=o(t.shapes);e.length>0&&(n.geometries=e),i.length>0&&(n.materials=i),r.length>0&&(n.textures=r),s.length>0&&(n.images=s),a.length>0&&(n.shapes=a)}return n.object=i,n;function o(t){const e=[];for(const n in t){const i=t[n];delete i.metadata,e.push(i)}return e}},clone:function(t){return(new this.constructor).copy(this,t)},copy:function(t,e){if(void 0===e&&(e=!0),this.name=t.name,this.up.copy(t.up),this.position.copy(t.position),this.rotation.order=t.rotation.order,this.quaternion.copy(t.quaternion),this.scale.copy(t.scale),this.matrix.copy(t.matrix),this.matrixWorld.copy(t.matrixWorld),this.matrixAutoUpdate=t.matrixAutoUpdate,this.matrixWorldNeedsUpdate=t.matrixWorldNeedsUpdate,this.layers.mask=t.layers.mask,this.visible=t.visible,this.castShadow=t.castShadow,this.receiveShadow=t.receiveShadow,this.frustumCulled=t.frustumCulled,this.renderOrder=t.renderOrder,this.userData=JSON.parse(JSON.stringify(t.userData)),!0===e)for(let e=0;e<t.children.length;e++){const n=t.children[e];this.add(n.clone())}return this}});const Ee=new Et,Te=new Et,Ae=new gt;class Le{constructor(t,e){Object.defineProperty(this,"isPlane",{value:!0}),this.normal=void 0!==t?t:new Et(1,0,0),this.constant=void 0!==e?e:0}set(t,e){return this.normal.copy(t),this.constant=e,this}setComponents(t,e,n,i){return this.normal.set(t,e,n),this.constant=i,this}setFromNormalAndCoplanarPoint(t,e){return this.normal.copy(t),this.constant=-e.dot(this.normal),this}setFromCoplanarPoints(t,e,n){const i=Ee.subVectors(n,e).cross(Te.subVectors(t,e)).normalize();return this.setFromNormalAndCoplanarPoint(i,t),this}clone(){return(new this.constructor).copy(this)}copy(t){return this.normal.copy(t.normal),this.constant=t.constant,this}normalize(){const t=1/this.normal.length();return this.normal.multiplyScalar(t),this.constant*=t,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(t){return this.normal.dot(t)+this.constant}distanceToSphere(t){return this.distanceToPoint(t.center)-t.radius}projectPoint(t,e){return void 0===e&&(console.warn("THREE.Plane: .projectPoint() target is now required"),e=new Et),e.copy(this.normal).multiplyScalar(-this.distanceToPoint(t)).add(t)}intersectLine(t,e){void 0===e&&(console.warn("THREE.Plane: .intersectLine() target is now required"),e=new Et);const n=t.delta(Ee),i=this.normal.dot(n);if(0===i)return 0===this.distanceToPoint(t.start)?e.copy(t.start):void 0;const r=-(t.start.dot(this.normal)+this.constant)/i;return r<0||r>1?void 0:e.copy(n).multiplyScalar(r).add(t.start)}intersectsLine(t){const e=this.distanceToPoint(t.start),n=this.distanceToPoint(t.end);return e<0&&n>0||n<0&&e>0}intersectsBox(t){return t.intersectsPlane(this)}intersectsSphere(t){return t.intersectsPlane(this)}coplanarPoint(t){return void 0===t&&(console.warn("THREE.Plane: .coplanarPoint() target is now required"),t=new Et),t.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(t,e){const n=e||Ae.getNormalMatrix(t),i=this.coplanarPoint(Ee).applyMatrix4(t),r=this.normal.applyMatrix3(n).normalize();return this.constant=-i.dot(r),this}translate(t){return this.constant-=t.dot(this.normal),this}equals(t){return t.normal.equals(this.normal)&&t.constant===this.constant}}const Re=new Et,Pe=new Et,Ce=new Et,Ne=new Et,Oe=new Et,Ie=new Et,De=new Et,ze=new Et,Ue=new Et,Be=new Et;class He{constructor(t,e,n){this.a=void 0!==t?t:new Et,this.b=void 0!==e?e:new Et,this.c=void 0!==n?n:new Et}static getNormal(t,e,n,i){void 0===i&&(console.warn("THREE.Triangle: .getNormal() target is now required"),i=new Et),i.subVectors(n,e),Re.subVectors(t,e),i.cross(Re);const r=i.lengthSq();return r>0?i.multiplyScalar(1/Math.sqrt(r)):i.set(0,0,0)}static getBarycoord(t,e,n,i,r){Re.subVectors(i,e),Pe.subVectors(n,e),Ce.subVectors(t,e);const o=Re.dot(Re),s=Re.dot(Pe),a=Re.dot(Ce),c=Pe.dot(Pe),l=Pe.dot(Ce),h=o*c-s*s;if(void 0===r&&(console.warn("THREE.Triangle: .getBarycoord() target is now required"),r=new Et),0===h)return r.set(-2,-1,-1);const u=1/h,d=(c*a-s*l)*u,p=(o*l-s*a)*u;return r.set(1-d-p,p,d)}static containsPoint(t,e,n,i){return this.getBarycoord(t,e,n,i,Ne),Ne.x>=0&&Ne.y>=0&&Ne.x+Ne.y<=1}static getUV(t,e,n,i,r,o,s,a){return this.getBarycoord(t,e,n,i,Ne),a.set(0,0),a.addScaledVector(r,Ne.x),a.addScaledVector(o,Ne.y),a.addScaledVector(s,Ne.z),a}static isFrontFacing(t,e,n,i){return Re.subVectors(n,e),Pe.subVectors(t,e),Re.cross(Pe).dot(i)<0}set(t,e,n){return this.a.copy(t),this.b.copy(e),this.c.copy(n),this}setFromPointsAndIndices(t,e,n,i){return this.a.copy(t[e]),this.b.copy(t[n]),this.c.copy(t[i]),this}clone(){return(new this.constructor).copy(this)}copy(t){return this.a.copy(t.a),this.b.copy(t.b),this.c.copy(t.c),this}getArea(){return Re.subVectors(this.c,this.b),Pe.subVectors(this.a,this.b),.5*Re.cross(Pe).length()}getMidpoint(t){return void 0===t&&(console.warn("THREE.Triangle: .getMidpoint() target is now required"),t=new Et),t.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(t){return He.getNormal(this.a,this.b,this.c,t)}getPlane(t){return void 0===t&&(console.warn("THREE.Triangle: .getPlane() target is now required"),t=new Le),t.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(t,e){return He.getBarycoord(t,this.a,this.b,this.c,e)}getUV(t,e,n,i,r){return He.getUV(t,this.a,this.b,this.c,e,n,i,r)}containsPoint(t){return He.containsPoint(t,this.a,this.b,this.c)}isFrontFacing(t){return He.isFrontFacing(this.a,this.b,this.c,t)}intersectsBox(t){return t.intersectsTriangle(this)}closestPointToPoint(t,e){void 0===e&&(console.warn("THREE.Triangle: .closestPointToPoint() target is now required"),e=new Et);const n=this.a,i=this.b,r=this.c;let o,s;Oe.subVectors(i,n),Ie.subVectors(r,n),ze.subVectors(t,n);const a=Oe.dot(ze),c=Ie.dot(ze);if(a<=0&&c<=0)return e.copy(n);Ue.subVectors(t,i);const l=Oe.dot(Ue),h=Ie.dot(Ue);if(l>=0&&h<=l)return e.copy(i);const u=a*h-l*c;if(u<=0&&a>=0&&l<=0)return o=a/(a-l),e.copy(n).addScaledVector(Oe,o);Be.subVectors(t,r);const d=Oe.dot(Be),p=Ie.dot(Be);if(p>=0&&d<=p)return e.copy(r);const f=d*c-a*p;if(f<=0&&c>=0&&p<=0)return s=c/(c-p),e.copy(n).addScaledVector(Ie,s);const m=l*p-d*h;if(m<=0&&h-l>=0&&d-p>=0)return De.subVectors(r,i),s=(h-l)/(h-l+(d-p)),e.copy(i).addScaledVector(De,s);const g=1/(m+f+u);return o=f*g,s=u*g,e.copy(n).addScaledVector(Oe,o).addScaledVector(Ie,s)}equals(t){return t.a.equals(this.a)&&t.b.equals(this.b)&&t.c.equals(this.c)}}const Fe={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},ke={h:0,s:0,l:0},Ge={h:0,s:0,l:0};function Ve(t,e,n){return n<0&&(n+=1),n>1&&(n-=1),n<1/6?t+6*(e-t)*n:n<.5?e:n<2/3?t+6*(e-t)*(2/3-n):t}function je(t){return t<.04045?.0773993808*t:Math.pow(.9478672986*t+.0521327014,2.4)}function We(t){return t<.0031308?12.92*t:1.055*Math.pow(t,.41666)-.055}class qe{constructor(t,e,n){return Object.defineProperty(this,"isColor",{value:!0}),void 0===e&&void 0===n?this.set(t):this.setRGB(t,e,n)}set(t){return t&&t.isColor?this.copy(t):"number"==typeof t?this.setHex(t):"string"==typeof t&&this.setStyle(t),this}setScalar(t){return this.r=t,this.g=t,this.b=t,this}setHex(t){return t=Math.floor(t),this.r=(t>>16&255)/255,this.g=(t>>8&255)/255,this.b=(255&t)/255,this}setRGB(t,e,n){return this.r=t,this.g=e,this.b=n,this}setHSL(t,e,n){if(t=ft.euclideanModulo(t,1),e=ft.clamp(e,0,1),n=ft.clamp(n,0,1),0===e)this.r=this.g=this.b=n;else{const i=n<=.5?n*(1+e):n+e-n*e,r=2*n-i;this.r=Ve(r,i,t+1/3),this.g=Ve(r,i,t),this.b=Ve(r,i,t-1/3)}return this}setStyle(t){function e(e){void 0!==e&&parseFloat(e)<1&&console.warn("THREE.Color: Alpha component of "+t+" will be ignored.")}let n;if(n=/^((?:rgb|hsl)a?)\(\s*([^\)]*)\)/.exec(t)){let t;const i=n[1],r=n[2];switch(i){case"rgb":case"rgba":if(t=/^(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(r))return this.r=Math.min(255,parseInt(t[1],10))/255,this.g=Math.min(255,parseInt(t[2],10))/255,this.b=Math.min(255,parseInt(t[3],10))/255,e(t[5]),this;if(t=/^(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(r))return this.r=Math.min(100,parseInt(t[1],10))/100,this.g=Math.min(100,parseInt(t[2],10))/100,this.b=Math.min(100,parseInt(t[3],10))/100,e(t[5]),this;break;case"hsl":case"hsla":if(t=/^([0-9]*\.?[0-9]+)\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(r)){const n=parseFloat(t[1])/360,i=parseInt(t[2],10)/100,r=parseInt(t[3],10)/100;return e(t[5]),this.setHSL(n,i,r)}}}else if(n=/^\#([A-Fa-f0-9]+)$/.exec(t)){const t=n[1],e=t.length;if(3===e)return this.r=parseInt(t.charAt(0)+t.charAt(0),16)/255,this.g=parseInt(t.charAt(1)+t.charAt(1),16)/255,this.b=parseInt(t.charAt(2)+t.charAt(2),16)/255,this;if(6===e)return this.r=parseInt(t.charAt(0)+t.charAt(1),16)/255,this.g=parseInt(t.charAt(2)+t.charAt(3),16)/255,this.b=parseInt(t.charAt(4)+t.charAt(5),16)/255,this}return t&&t.length>0?this.setColorName(t):this}setColorName(t){const e=Fe[t];return void 0!==e?this.setHex(e):console.warn("THREE.Color: Unknown color "+t),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(t){return this.r=t.r,this.g=t.g,this.b=t.b,this}copyGammaToLinear(t,e){return void 0===e&&(e=2),this.r=Math.pow(t.r,e),this.g=Math.pow(t.g,e),this.b=Math.pow(t.b,e),this}copyLinearToGamma(t,e){void 0===e&&(e=2);const n=e>0?1/e:1;return this.r=Math.pow(t.r,n),this.g=Math.pow(t.g,n),this.b=Math.pow(t.b,n),this}convertGammaToLinear(t){return this.copyGammaToLinear(this,t),this}convertLinearToGamma(t){return this.copyLinearToGamma(this,t),this}copySRGBToLinear(t){return this.r=je(t.r),this.g=je(t.g),this.b=je(t.b),this}copyLinearToSRGB(t){return this.r=We(t.r),this.g=We(t.g),this.b=We(t.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(){return 255*this.r<<16^255*this.g<<8^255*this.b<<0}getHexString(){return("000000"+this.getHex().toString(16)).slice(-6)}getHSL(t){void 0===t&&(console.warn("THREE.Color: .getHSL() target is now required"),t={h:0,s:0,l:0});const e=this.r,n=this.g,i=this.b,r=Math.max(e,n,i),o=Math.min(e,n,i);let s,a;const c=(o+r)/2;if(o===r)s=0,a=0;else{const t=r-o;switch(a=c<=.5?t/(r+o):t/(2-r-o),r){case e:s=(n-i)/t+(n<i?6:0);break;case n:s=(i-e)/t+2;break;case i:s=(e-n)/t+4}s/=6}return t.h=s,t.s=a,t.l=c,t}getStyle(){return"rgb("+(255*this.r|0)+","+(255*this.g|0)+","+(255*this.b|0)+")"}offsetHSL(t,e,n){return this.getHSL(ke),ke.h+=t,ke.s+=e,ke.l+=n,this.setHSL(ke.h,ke.s,ke.l),this}add(t){return this.r+=t.r,this.g+=t.g,this.b+=t.b,this}addColors(t,e){return this.r=t.r+e.r,this.g=t.g+e.g,this.b=t.b+e.b,this}addScalar(t){return this.r+=t,this.g+=t,this.b+=t,this}sub(t){return this.r=Math.max(0,this.r-t.r),this.g=Math.max(0,this.g-t.g),this.b=Math.max(0,this.b-t.b),this}multiply(t){return this.r*=t.r,this.g*=t.g,this.b*=t.b,this}multiplyScalar(t){return this.r*=t,this.g*=t,this.b*=t,this}lerp(t,e){return this.r+=(t.r-this.r)*e,this.g+=(t.g-this.g)*e,this.b+=(t.b-this.b)*e,this}lerpHSL(t,e){this.getHSL(ke),t.getHSL(Ge);const n=ft.lerp(ke.h,Ge.h,e),i=ft.lerp(ke.s,Ge.s,e),r=ft.lerp(ke.l,Ge.l,e);return this.setHSL(n,i,r),this}equals(t){return t.r===this.r&&t.g===this.g&&t.b===this.b}fromArray(t,e){return void 0===e&&(e=0),this.r=t[e],this.g=t[e+1],this.b=t[e+2],this}toArray(t,e){return void 0===t&&(t=[]),void 0===e&&(e=0),t[e]=this.r,t[e+1]=this.g,t[e+2]=this.b,t}fromBufferAttribute(t,e){return this.r=t.getX(e),this.g=t.getY(e),this.b=t.getZ(e),!0===t.normalized&&(this.r/=255,this.g/=255,this.b/=255),this}toJSON(){return this.getHex()}}qe.NAMES=Fe,qe.prototype.r=1,qe.prototype.g=1,qe.prototype.b=1;class Xe{constructor(t,e,n,i,r,o){this.a=t,this.b=e,this.c=n,this.normal=i&&i.isVector3?i:new Et,this.vertexNormals=Array.isArray(i)?i:[],this.color=r&&r.isColor?r:new qe,this.vertexColors=Array.isArray(r)?r:[],this.materialIndex=void 0!==o?o:0}clone(){return(new this.constructor).copy(this)}copy(t){this.a=t.a,this.b=t.b,this.c=t.c,this.normal.copy(t.normal),this.color.copy(t.color),this.materialIndex=t.materialIndex;for(let e=0,n=t.vertexNormals.length;e<n;e++)this.vertexNormals[e]=t.vertexNormals[e].clone();for(let e=0,n=t.vertexColors.length;e<n;e++)this.vertexColors[e]=t.vertexColors[e].clone();return this}}let Ye=0;function Ze(){Object.defineProperty(this,"id",{value:Ye++}),this.uuid=ft.generateUUID(),this.name="",this.type="Material",this.fog=!0,this.blending=1,this.side=0,this.flatShading=!1,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.blendSrc=204,this.blendDst=205,this.blendEquation=100,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.depthFunc=3,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=519,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=7680,this.stencilZFail=7680,this.stencilZPass=7680,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaTest=0,this.premultipliedAlpha=!1,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0}function $e(t){Ze.call(this),this.type="MeshBasicMaterial",this.color=new qe(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=0,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.setValues(t)}Ze.prototype=Object.assign(Object.create(ut.prototype),{constructor:Ze,isMaterial:!0,onBeforeCompile:function(){},customProgramCacheKey:function(){return this.onBeforeCompile.toString()},setValues:function(t){if(void 0!==t)for(const e in t){const n=t[e];if(void 0===n){console.warn("THREE.Material: '"+e+"' parameter is undefined.");continue}if("shading"===e){console.warn("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead."),this.flatShading=1===n;continue}const i=this[e];void 0!==i?i&&i.isColor?i.set(n):i&&i.isVector3&&n&&n.isVector3?i.copy(n):this[e]=n:console.warn("THREE."+this.type+": '"+e+"' is not a property of this material.")}},toJSON:function(t){const e=void 0===t||"string"==typeof t;e&&(t={textures:{},images:{}});const n={metadata:{version:4.5,type:"Material",generator:"Material.toJSON"}};function i(t){const e=[];for(const n in t){const i=t[n];delete i.metadata,e.push(i)}return e}if(n.uuid=this.uuid,n.type=this.type,""!==this.name&&(n.name=this.name),this.color&&this.color.isColor&&(n.color=this.color.getHex()),void 0!==this.roughness&&(n.roughness=this.roughness),void 0!==this.metalness&&(n.metalness=this.metalness),this.sheen&&this.sheen.isColor&&(n.sheen=this.sheen.getHex()),this.emissive&&this.emissive.isColor&&(n.emissive=this.emissive.getHex()),this.emissiveIntensity&&1!==this.emissiveIntensity&&(n.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(n.specular=this.specular.getHex()),void 0!==this.shininess&&(n.shininess=this.shininess),void 0!==this.clearcoat&&(n.clearcoat=this.clearcoat),void 0!==this.clearcoatRoughness&&(n.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(n.clearcoatMap=this.clearcoatMap.toJSON(t).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(n.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(t).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(n.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(t).uuid,n.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.map&&this.map.isTexture&&(n.map=this.map.toJSON(t).uuid),this.matcap&&this.matcap.isTexture&&(n.matcap=this.matcap.toJSON(t).uuid),this.alphaMap&&this.alphaMap.isTexture&&(n.alphaMap=this.alphaMap.toJSON(t).uuid),this.lightMap&&this.lightMap.isTexture&&(n.lightMap=this.lightMap.toJSON(t).uuid),this.aoMap&&this.aoMap.isTexture&&(n.aoMap=this.aoMap.toJSON(t).uuid,n.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(n.bumpMap=this.bumpMap.toJSON(t).uuid,n.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(n.normalMap=this.normalMap.toJSON(t).uuid,n.normalMapType=this.normalMapType,n.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(n.displacementMap=this.displacementMap.toJSON(t).uuid,n.displacementScale=this.displacementScale,n.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(n.roughnessMap=this.roughnessMap.toJSON(t).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(n.metalnessMap=this.metalnessMap.toJSON(t).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(n.emissiveMap=this.emissiveMap.toJSON(t).uuid),this.specularMap&&this.specularMap.isTexture&&(n.specularMap=this.specularMap.toJSON(t).uuid),this.envMap&&this.envMap.isTexture&&(n.envMap=this.envMap.toJSON(t).uuid,n.reflectivity=this.reflectivity,n.refractionRatio=this.refractionRatio,void 0!==this.combine&&(n.combine=this.combine),void 0!==this.envMapIntensity&&(n.envMapIntensity=this.envMapIntensity)),this.gradientMap&&this.gradientMap.isTexture&&(n.gradientMap=this.gradientMap.toJSON(t).uuid),void 0!==this.size&&(n.size=this.size),void 0!==this.sizeAttenuation&&(n.sizeAttenuation=this.sizeAttenuation),1!==this.blending&&(n.blending=this.blending),!0===this.flatShading&&(n.flatShading=this.flatShading),0!==this.side&&(n.side=this.side),this.vertexColors&&(n.vertexColors=!0),this.opacity<1&&(n.opacity=this.opacity),!0===this.transparent&&(n.transparent=this.transparent),n.depthFunc=this.depthFunc,n.depthTest=this.depthTest,n.depthWrite=this.depthWrite,n.stencilWrite=this.stencilWrite,n.stencilWriteMask=this.stencilWriteMask,n.stencilFunc=this.stencilFunc,n.stencilRef=this.stencilRef,n.stencilFuncMask=this.stencilFuncMask,n.stencilFail=this.stencilFail,n.stencilZFail=this.stencilZFail,n.stencilZPass=this.stencilZPass,this.rotation&&0!==this.rotation&&(n.rotation=this.rotation),!0===this.polygonOffset&&(n.polygonOffset=!0),0!==this.polygonOffsetFactor&&(n.polygonOffsetFactor=this.polygonOffsetFactor),0!==this.polygonOffsetUnits&&(n.polygonOffsetUnits=this.polygonOffsetUnits),this.linewidth&&1!==this.linewidth&&(n.linewidth=this.linewidth),void 0!==this.dashSize&&(n.dashSize=this.dashSize),void 0!==this.gapSize&&(n.gapSize=this.gapSize),void 0!==this.scale&&(n.scale=this.scale),!0===this.dithering&&(n.dithering=!0),this.alphaTest>0&&(n.alphaTest=this.alphaTest),!0===this.premultipliedAlpha&&(n.premultipliedAlpha=this.premultipliedAlpha),!0===this.wireframe&&(n.wireframe=this.wireframe),this.wireframeLinewidth>1&&(n.wireframeLinewidth=this.wireframeLinewidth),"round"!==this.wireframeLinecap&&(n.wireframeLinecap=this.wireframeLinecap),"round"!==this.wireframeLinejoin&&(n.wireframeLinejoin=this.wireframeLinejoin),!0===this.morphTargets&&(n.morphTargets=!0),!0===this.morphNormals&&(n.morphNormals=!0),!0===this.skinning&&(n.skinning=!0),!1===this.visible&&(n.visible=!1),!1===this.toneMapped&&(n.toneMapped=!1),"{}"!==JSON.stringify(this.userData)&&(n.userData=this.userData),e){const e=i(t.textures),r=i(t.images);e.length>0&&(n.textures=e),r.length>0&&(n.images=r)}return n},clone:function(){return(new this.constructor).copy(this)},copy:function(t){this.name=t.name,this.fog=t.fog,this.blending=t.blending,this.side=t.side,this.flatShading=t.flatShading,this.vertexColors=t.vertexColors,this.opacity=t.opacity,this.transparent=t.transparent,this.blendSrc=t.blendSrc,this.blendDst=t.blendDst,this.blendEquation=t.blendEquation,this.blendSrcAlpha=t.blendSrcAlpha,this.blendDstAlpha=t.blendDstAlpha,this.blendEquationAlpha=t.blendEquationAlpha,this.depthFunc=t.depthFunc,this.depthTest=t.depthTest,this.depthWrite=t.depthWrite,this.stencilWriteMask=t.stencilWriteMask,this.stencilFunc=t.stencilFunc,this.stencilRef=t.stencilRef,this.stencilFuncMask=t.stencilFuncMask,this.stencilFail=t.stencilFail,this.stencilZFail=t.stencilZFail,this.stencilZPass=t.stencilZPass,this.stencilWrite=t.stencilWrite;const e=t.clippingPlanes;let n=null;if(null!==e){const t=e.length;n=new Array(t);for(let i=0;i!==t;++i)n[i]=e[i].clone()}return this.clippingPlanes=n,this.clipIntersection=t.clipIntersection,this.clipShadows=t.clipShadows,this.shadowSide=t.shadowSide,this.colorWrite=t.colorWrite,this.precision=t.precision,this.polygonOffset=t.polygonOffset,this.polygonOffsetFactor=t.polygonOffsetFactor,this.polygonOffsetUnits=t.polygonOffsetUnits,this.dithering=t.dithering,this.alphaTest=t.alphaTest,this.premultipliedAlpha=t.premultipliedAlpha,this.visible=t.visible,this.toneMapped=t.toneMapped,this.userData=JSON.parse(JSON.stringify(t.userData)),this},dispose:function(){this.dispatchEvent({type:"dispose"})}}),Object.defineProperty(Ze.prototype,"needsUpdate",{set:function(t){!0===t&&this.version++}}),$e.prototype=Object.create(Ze.prototype),$e.prototype.constructor=$e,$e.prototype.isMeshBasicMaterial=!0,$e.prototype.copy=function(t){return Ze.prototype.copy.call(this,t),this.color.copy(t.color),this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this};const Je=new Et,Qe=new mt;function Ke(t,e,n){if(Array.isArray(t))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.name="",this.array=t,this.itemSize=e,this.count=void 0!==t?t.length/e:0,this.normalized=!0===n,this.usage=35044,this.updateRange={offset:0,count:-1},this.version=0}function tn(t,e,n){Ke.call(this,new Int8Array(t),e,n)}function en(t,e,n){Ke.call(this,new Uint8Array(t),e,n)}function nn(t,e,n){Ke.call(this,new Uint8ClampedArray(t),e,n)}function rn(t,e,n){Ke.call(this,new Int16Array(t),e,n)}function on(t,e,n){Ke.call(this,new Uint16Array(t),e,n)}function sn(t,e,n){Ke.call(this,new Int32Array(t),e,n)}function an(t,e,n){Ke.call(this,new Uint32Array(t),e,n)}function cn(t,e,n){Ke.call(this,new Float32Array(t),e,n)}function ln(t,e,n){Ke.call(this,new Float64Array(t),e,n)}Object.defineProperty(Ke.prototype,"needsUpdate",{set:function(t){!0===t&&this.version++}}),Object.assign(Ke.prototype,{isBufferAttribute:!0,onUploadCallback:function(){},setUsage:function(t){return this.usage=t,this},copy:function(t){return this.name=t.name,this.array=new t.array.constructor(t.array),this.itemSize=t.itemSize,this.count=t.count,this.normalized=t.normalized,this.usage=t.usage,this},copyAt:function(t,e,n){t*=this.itemSize,n*=e.itemSize;for(let i=0,r=this.itemSize;i<r;i++)this.array[t+i]=e.array[n+i];return this},copyArray:function(t){return this.array.set(t),this},copyColorsArray:function(t){const e=this.array;let n=0;for(let i=0,r=t.length;i<r;i++){let r=t[i];void 0===r&&(console.warn("THREE.BufferAttribute.copyColorsArray(): color is undefined",i),r=new qe),e[n++]=r.r,e[n++]=r.g,e[n++]=r.b}return this},copyVector2sArray:function(t){const e=this.array;let n=0;for(let i=0,r=t.length;i<r;i++){let r=t[i];void 0===r&&(console.warn("THREE.BufferAttribute.copyVector2sArray(): vector is undefined",i),r=new mt),e[n++]=r.x,e[n++]=r.y}return this},copyVector3sArray:function(t){const e=this.array;let n=0;for(let i=0,r=t.length;i<r;i++){let r=t[i];void 0===r&&(console.warn("THREE.BufferAttribute.copyVector3sArray(): vector is undefined",i),r=new Et),e[n++]=r.x,e[n++]=r.y,e[n++]=r.z}return this},copyVector4sArray:function(t){const e=this.array;let n=0;for(let i=0,r=t.length;i<r;i++){let r=t[i];void 0===r&&(console.warn("THREE.BufferAttribute.copyVector4sArray(): vector is undefined",i),r=new bt),e[n++]=r.x,e[n++]=r.y,e[n++]=r.z,e[n++]=r.w}return this},applyMatrix3:function(t){if(2===this.itemSize)for(let e=0,n=this.count;e<n;e++)Qe.fromBufferAttribute(this,e),Qe.applyMatrix3(t),this.setXY(e,Qe.x,Qe.y);else if(3===this.itemSize)for(let e=0,n=this.count;e<n;e++)Je.fromBufferAttribute(this,e),Je.applyMatrix3(t),this.setXYZ(e,Je.x,Je.y,Je.z);return this},applyMatrix4:function(t){for(let e=0,n=this.count;e<n;e++)Je.x=this.getX(e),Je.y=this.getY(e),Je.z=this.getZ(e),Je.applyMatrix4(t),this.setXYZ(e,Je.x,Je.y,Je.z);return this},applyNormalMatrix:function(t){for(let e=0,n=this.count;e<n;e++)Je.x=this.getX(e),Je.y=this.getY(e),Je.z=this.getZ(e),Je.applyNormalMatrix(t),this.setXYZ(e,Je.x,Je.y,Je.z);return this},transformDirection:function(t){for(let e=0,n=this.count;e<n;e++)Je.x=this.getX(e),Je.y=this.getY(e),Je.z=this.getZ(e),Je.transformDirection(t),this.setXYZ(e,Je.x,Je.y,Je.z);return this},set:function(t,e){return void 0===e&&(e=0),this.array.set(t,e),this},getX:function(t){return this.array[t*this.itemSize]},setX:function(t,e){return this.array[t*this.itemSize]=e,this},getY:function(t){return this.array[t*this.itemSize+1]},setY:function(t,e){return this.array[t*this.itemSize+1]=e,this},getZ:function(t){return this.array[t*this.itemSize+2]},setZ:function(t,e){return this.array[t*this.itemSize+2]=e,this},getW:function(t){return this.array[t*this.itemSize+3]},setW:function(t,e){return this.array[t*this.itemSize+3]=e,this},setXY:function(t,e,n){return t*=this.itemSize,this.array[t+0]=e,this.array[t+1]=n,this},setXYZ:function(t,e,n,i){return t*=this.itemSize,this.array[t+0]=e,this.array[t+1]=n,this.array[t+2]=i,this},setXYZW:function(t,e,n,i,r){return t*=this.itemSize,this.array[t+0]=e,this.array[t+1]=n,this.array[t+2]=i,this.array[t+3]=r,this},onUpload:function(t){return this.onUploadCallback=t,this},clone:function(){return new this.constructor(this.array,this.itemSize).copy(this)},toJSON:function(){return{itemSize:this.itemSize,type:this.array.constructor.name,array:Array.prototype.slice.call(this.array),normalized:this.normalized}}}),tn.prototype=Object.create(Ke.prototype),tn.prototype.constructor=tn,en.prototype=Object.create(Ke.prototype),en.prototype.constructor=en,nn.prototype=Object.create(Ke.prototype),nn.prototype.constructor=nn,rn.prototype=Object.create(Ke.prototype),rn.prototype.constructor=rn,on.prototype=Object.create(Ke.prototype),on.prototype.constructor=on,sn.prototype=Object.create(Ke.prototype),sn.prototype.constructor=sn,an.prototype=Object.create(Ke.prototype),an.prototype.constructor=an,cn.prototype=Object.create(Ke.prototype),cn.prototype.constructor=cn,ln.prototype=Object.create(Ke.prototype),ln.prototype.constructor=ln;class hn{constructor(){this.vertices=[],this.normals=[],this.colors=[],this.uvs=[],this.uvs2=[],this.groups=[],this.morphTargets={},this.skinWeights=[],this.skinIndices=[],this.boundingBox=null,this.boundingSphere=null,this.verticesNeedUpdate=!1,this.normalsNeedUpdate=!1,this.colorsNeedUpdate=!1,this.uvsNeedUpdate=!1,this.groupsNeedUpdate=!1}computeGroups(t){const e=[];let n,i,r=void 0;const o=t.faces;for(i=0;i<o.length;i++){const t=o[i];t.materialIndex!==r&&(r=t.materialIndex,void 0!==n&&(n.count=3*i-n.start,e.push(n)),n={start:3*i,materialIndex:r})}void 0!==n&&(n.count=3*i-n.start,e.push(n)),this.groups=e}fromGeometry(t){const e=t.faces,n=t.vertices,i=t.faceVertexUvs,r=i[0]&&i[0].length>0,o=i[1]&&i[1].length>0,s=t.morphTargets,a=s.length;let c;if(a>0){c=[];for(let t=0;t<a;t++)c[t]={name:s[t].name,data:[]};this.morphTargets.position=c}const l=t.morphNormals,h=l.length;let u;if(h>0){u=[];for(let t=0;t<h;t++)u[t]={name:l[t].name,data:[]};this.morphTargets.normal=u}const d=t.skinIndices,p=t.skinWeights,f=d.length===n.length,m=p.length===n.length;n.length>0&&0===e.length&&console.error("THREE.DirectGeometry: Faceless geometries are not supported.");for(let t=0;t<e.length;t++){const g=e[t];this.vertices.push(n[g.a],n[g.b],n[g.c]);const v=g.vertexNormals;if(3===v.length)this.normals.push(v[0],v[1],v[2]);else{const t=g.normal;this.normals.push(t,t,t)}const y=g.vertexColors;if(3===y.length)this.colors.push(y[0],y[1],y[2]);else{const t=g.color;this.colors.push(t,t,t)}if(!0===r){const e=i[0][t];void 0!==e?this.uvs.push(e[0],e[1],e[2]):(console.warn("THREE.DirectGeometry.fromGeometry(): Undefined vertexUv ",t),this.uvs.push(new mt,new mt,new mt))}if(!0===o){const e=i[1][t];void 0!==e?this.uvs2.push(e[0],e[1],e[2]):(console.warn("THREE.DirectGeometry.fromGeometry(): Undefined vertexUv2 ",t),this.uvs2.push(new mt,new mt,new mt))}for(let t=0;t<a;t++){const e=s[t].vertices;c[t].data.push(e[g.a],e[g.b],e[g.c])}for(let e=0;e<h;e++){const n=l[e].vertexNormals[t];u[e].data.push(n.a,n.b,n.c)}f&&this.skinIndices.push(d[g.a],d[g.b],d[g.c]),m&&this.skinWeights.push(p[g.a],p[g.b],p[g.c])}return this.computeGroups(t),this.verticesNeedUpdate=t.verticesNeedUpdate,this.normalsNeedUpdate=t.normalsNeedUpdate,this.colorsNeedUpdate=t.colorsNeedUpdate,this.uvsNeedUpdate=t.uvsNeedUpdate,this.groupsNeedUpdate=t.groupsNeedUpdate,null!==t.boundingSphere&&(this.boundingSphere=t.boundingSphere.clone()),null!==t.boundingBox&&(this.boundingBox=t.boundingBox.clone()),this}}function un(t){if(0===t.length)return-1/0;let e=t[0];for(let n=1,i=t.length;n<i;++n)t[n]>e&&(e=t[n]);return e}let dn=1;const pn=new Kt,fn=new Se,mn=new Et,gn=new Lt,vn=new Lt,yn=new Et;function xn(){Object.defineProperty(this,"id",{value:dn+=2}),this.uuid=ft.generateUUID(),this.name="",this.type="BufferGeometry",this.index=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}xn.prototype=Object.assign(Object.create(ut.prototype),{constructor:xn,isBufferGeometry:!0,getIndex:function(){return this.index},setIndex:function(t){return Array.isArray(t)?this.index=new(un(t)>65535?an:on)(t,1):this.index=t,this},getAttribute:function(t){return this.attributes[t]},setAttribute:function(t,e){return this.attributes[t]=e,this},deleteAttribute:function(t){return delete this.attributes[t],this},addGroup:function(t,e,n){this.groups.push({start:t,count:e,materialIndex:void 0!==n?n:0})},clearGroups:function(){this.groups=[]},setDrawRange:function(t,e){this.drawRange.start=t,this.drawRange.count=e},applyMatrix4:function(t){const e=this.attributes.position;void 0!==e&&(e.applyMatrix4(t),e.needsUpdate=!0);const n=this.attributes.normal;if(void 0!==n){const e=(new gt).getNormalMatrix(t);n.applyNormalMatrix(e),n.needsUpdate=!0}const i=this.attributes.tangent;return void 0!==i&&(i.transformDirection(t),i.needsUpdate=!0),null!==this.boundingBox&&this.computeBoundingBox(),null!==this.boundingSphere&&this.computeBoundingSphere(),this},rotateX:function(t){return pn.makeRotationX(t),this.applyMatrix4(pn),this},rotateY:function(t){return pn.makeRotationY(t),this.applyMatrix4(pn),this},rotateZ:function(t){return pn.makeRotationZ(t),this.applyMatrix4(pn),this},translate:function(t,e,n){return pn.makeTranslation(t,e,n),this.applyMatrix4(pn),this},scale:function(t,e,n){return pn.makeScale(t,e,n),this.applyMatrix4(pn),this},lookAt:function(t){return fn.lookAt(t),fn.updateMatrix(),this.applyMatrix4(fn.matrix),this},center:function(){return this.computeBoundingBox(),this.boundingBox.getCenter(mn).negate(),this.translate(mn.x,mn.y,mn.z),this},setFromObject:function(t){const e=t.geometry;if(t.isPoints||t.isLine){const t=new cn(3*e.vertices.length,3),n=new cn(3*e.colors.length,3);if(this.setAttribute("position",t.copyVector3sArray(e.vertices)),this.setAttribute("color",n.copyColorsArray(e.colors)),e.lineDistances&&e.lineDistances.length===e.vertices.length){const t=new cn(e.lineDistances.length,1);this.setAttribute("lineDistance",t.copyArray(e.lineDistances))}null!==e.boundingSphere&&(this.boundingSphere=e.boundingSphere.clone()),null!==e.boundingBox&&(this.boundingBox=e.boundingBox.clone())}else t.isMesh&&e&&e.isGeometry&&this.fromGeometry(e);return this},setFromPoints:function(t){const e=[];for(let n=0,i=t.length;n<i;n++){const i=t[n];e.push(i.x,i.y,i.z||0)}return this.setAttribute("position",new cn(e,3)),this},updateFromObject:function(t){let e=t.geometry;if(t.isMesh){let t=e.__directGeometry;if(!0===e.elementsNeedUpdate&&(t=void 0,e.elementsNeedUpdate=!1),void 0===t)return this.fromGeometry(e);t.verticesNeedUpdate=e.verticesNeedUpdate,t.normalsNeedUpdate=e.normalsNeedUpdate,t.colorsNeedUpdate=e.colorsNeedUpdate,t.uvsNeedUpdate=e.uvsNeedUpdate,t.groupsNeedUpdate=e.groupsNeedUpdate,e.verticesNeedUpdate=!1,e.normalsNeedUpdate=!1,e.colorsNeedUpdate=!1,e.uvsNeedUpdate=!1,e.groupsNeedUpdate=!1,e=t}if(!0===e.verticesNeedUpdate){const t=this.attributes.position;void 0!==t&&(t.copyVector3sArray(e.vertices),t.needsUpdate=!0),e.verticesNeedUpdate=!1}if(!0===e.normalsNeedUpdate){const t=this.attributes.normal;void 0!==t&&(t.copyVector3sArray(e.normals),t.needsUpdate=!0),e.normalsNeedUpdate=!1}if(!0===e.colorsNeedUpdate){const t=this.attributes.color;void 0!==t&&(t.copyColorsArray(e.colors),t.needsUpdate=!0),e.colorsNeedUpdate=!1}if(e.uvsNeedUpdate){const t=this.attributes.uv;void 0!==t&&(t.copyVector2sArray(e.uvs),t.needsUpdate=!0),e.uvsNeedUpdate=!1}if(e.lineDistancesNeedUpdate){const t=this.attributes.lineDistance;void 0!==t&&(t.copyArray(e.lineDistances),t.needsUpdate=!0),e.lineDistancesNeedUpdate=!1}return e.groupsNeedUpdate&&(e.computeGroups(t.geometry),this.groups=e.groups,e.groupsNeedUpdate=!1),this},fromGeometry:function(t){return t.__directGeometry=(new hn).fromGeometry(t),this.fromDirectGeometry(t.__directGeometry)},fromDirectGeometry:function(t){const e=new Float32Array(3*t.vertices.length);if(this.setAttribute("position",new Ke(e,3).copyVector3sArray(t.vertices)),t.normals.length>0){const e=new Float32Array(3*t.normals.length);this.setAttribute("normal",new Ke(e,3).copyVector3sArray(t.normals))}if(t.colors.length>0){const e=new Float32Array(3*t.colors.length);this.setAttribute("color",new Ke(e,3).copyColorsArray(t.colors))}if(t.uvs.length>0){const e=new Float32Array(2*t.uvs.length);this.setAttribute("uv",new Ke(e,2).copyVector2sArray(t.uvs))}if(t.uvs2.length>0){const e=new Float32Array(2*t.uvs2.length);this.setAttribute("uv2",new Ke(e,2).copyVector2sArray(t.uvs2))}this.groups=t.groups;for(const e in t.morphTargets){const n=[],i=t.morphTargets[e];for(let t=0,e=i.length;t<e;t++){const e=i[t],r=new cn(3*e.data.length,3);r.name=e.name,n.push(r.copyVector3sArray(e.data))}this.morphAttributes[e]=n}if(t.skinIndices.length>0){const e=new cn(4*t.skinIndices.length,4);this.setAttribute("skinIndex",e.copyVector4sArray(t.skinIndices))}if(t.skinWeights.length>0){const e=new cn(4*t.skinWeights.length,4);this.setAttribute("skinWeight",e.copyVector4sArray(t.skinWeights))}return null!==t.boundingSphere&&(this.boundingSphere=t.boundingSphere.clone()),null!==t.boundingBox&&(this.boundingBox=t.boundingBox.clone()),this},computeBoundingBox:function(){null===this.boundingBox&&(this.boundingBox=new Lt);const t=this.attributes.position,e=this.morphAttributes.position;if(t&&t.isGLBufferAttribute)return console.error('THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set "mesh.frustumCulled" to "false".',this),void this.boundingBox.set(new Et(-1/0,-1/0,-1/0),new Et(1/0,1/0,1/0));if(void 0!==t){if(this.boundingBox.setFromBufferAttribute(t),e)for(let t=0,n=e.length;t<n;t++){const n=e[t];gn.setFromBufferAttribute(n),this.morphTargetsRelative?(yn.addVectors(this.boundingBox.min,gn.min),this.boundingBox.expandByPoint(yn),yn.addVectors(this.boundingBox.max,gn.max),this.boundingBox.expandByPoint(yn)):(this.boundingBox.expandByPoint(gn.min),this.boundingBox.expandByPoint(gn.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)},computeBoundingSphere:function(){null===this.boundingSphere&&(this.boundingSphere=new jt);const t=this.attributes.position,e=this.morphAttributes.position;if(t&&t.isGLBufferAttribute)return console.error('THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set "mesh.frustumCulled" to "false".',this),void this.boundingSphere.set(new Et,1/0);if(t){const n=this.boundingSphere.center;if(gn.setFromBufferAttribute(t),e)for(let t=0,n=e.length;t<n;t++){const n=e[t];vn.setFromBufferAttribute(n),this.morphTargetsRelative?(yn.addVectors(gn.min,vn.min),gn.expandByPoint(yn),yn.addVectors(gn.max,vn.max),gn.expandByPoint(yn)):(gn.expandByPoint(vn.min),gn.expandByPoint(vn.max))}gn.getCenter(n);let i=0;for(let e=0,r=t.count;e<r;e++)yn.fromBufferAttribute(t,e),i=Math.max(i,n.distanceToSquared(yn));if(e)for(let r=0,o=e.length;r<o;r++){const o=e[r],s=this.morphTargetsRelative;for(let e=0,r=o.count;e<r;e++)yn.fromBufferAttribute(o,e),s&&(mn.fromBufferAttribute(t,e),yn.add(mn)),i=Math.max(i,n.distanceToSquared(yn))}this.boundingSphere.radius=Math.sqrt(i),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}},computeFaceNormals:function(){},computeVertexNormals:function(){const t=this.index,e=this.getAttribute("position");if(void 0!==e){let n=this.getAttribute("normal");if(void 0===n)n=new Ke(new Float32Array(3*e.count),3),this.setAttribute("normal",n);else for(let t=0,e=n.count;t<e;t++)n.setXYZ(t,0,0,0);const i=new Et,r=new Et,o=new Et,s=new Et,a=new Et,c=new Et,l=new Et,h=new Et;if(t)for(let u=0,d=t.count;u<d;u+=3){const d=t.getX(u+0),p=t.getX(u+1),f=t.getX(u+2);i.fromBufferAttribute(e,d),r.fromBufferAttribute(e,p),o.fromBufferAttribute(e,f),l.subVectors(o,r),h.subVectors(i,r),l.cross(h),s.fromBufferAttribute(n,d),a.fromBufferAttribute(n,p),c.fromBufferAttribute(n,f),s.add(l),a.add(l),c.add(l),n.setXYZ(d,s.x,s.y,s.z),n.setXYZ(p,a.x,a.y,a.z),n.setXYZ(f,c.x,c.y,c.z)}else for(let t=0,s=e.count;t<s;t+=3)i.fromBufferAttribute(e,t+0),r.fromBufferAttribute(e,t+1),o.fromBufferAttribute(e,t+2),l.subVectors(o,r),h.subVectors(i,r),l.cross(h),n.setXYZ(t+0,l.x,l.y,l.z),n.setXYZ(t+1,l.x,l.y,l.z),n.setXYZ(t+2,l.x,l.y,l.z);this.normalizeNormals(),n.needsUpdate=!0}},merge:function(t,e){if(!t||!t.isBufferGeometry)return void console.error("THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.",t);void 0===e&&(e=0,console.warn("THREE.BufferGeometry.merge(): Overwriting original geometry, starting at offset=0. Use BufferGeometryUtils.mergeBufferGeometries() for lossless merge."));const n=this.attributes;for(const i in n){if(void 0===t.attributes[i])continue;const r=n[i].array,o=t.attributes[i],s=o.array,a=o.itemSize*e,c=Math.min(s.length,r.length-a);for(let t=0,e=a;t<c;t++,e++)r[e]=s[t]}return this},normalizeNormals:function(){const t=this.attributes.normal;for(let e=0,n=t.count;e<n;e++)yn.fromBufferAttribute(t,e),yn.normalize(),t.setXYZ(e,yn.x,yn.y,yn.z)},toNonIndexed:function(){function t(t,e){const n=t.array,i=t.itemSize,r=t.normalized,o=new n.constructor(e.length*i);let s=0,a=0;for(let t=0,r=e.length;t<r;t++){s=e[t]*i;for(let t=0;t<i;t++)o[a++]=n[s++]}return new Ke(o,i,r)}if(null===this.index)return console.warn("THREE.BufferGeometry.toNonIndexed(): Geometry is already non-indexed."),this;const e=new xn,n=this.index.array,i=this.attributes;for(const r in i){const o=t(i[r],n);e.setAttribute(r,o)}const r=this.morphAttributes;for(const i in r){const o=[],s=r[i];for(let e=0,i=s.length;e<i;e++){const i=t(s[e],n);o.push(i)}e.morphAttributes[i]=o}e.morphTargetsRelative=this.morphTargetsRelative;const o=this.groups;for(let t=0,n=o.length;t<n;t++){const n=o[t];e.addGroup(n.start,n.count,n.materialIndex)}return e},toJSON:function(){const t={metadata:{version:4.5,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(t.uuid=this.uuid,t.type=this.type,""!==this.name&&(t.name=this.name),Object.keys(this.userData).length>0&&(t.userData=this.userData),void 0!==this.parameters){const e=this.parameters;for(const n in e)void 0!==e[n]&&(t[n]=e[n]);return t}t.data={attributes:{}};const e=this.index;null!==e&&(t.data.index={type:e.array.constructor.name,array:Array.prototype.slice.call(e.array)});const n=this.attributes;for(const e in n){const i=n[e],r=i.toJSON(t.data);""!==i.name&&(r.name=i.name),t.data.attributes[e]=r}const i={};let r=!1;for(const e in this.morphAttributes){const n=this.morphAttributes[e],o=[];for(let e=0,i=n.length;e<i;e++){const i=n[e],r=i.toJSON(t.data);""!==i.name&&(r.name=i.name),o.push(r)}o.length>0&&(i[e]=o,r=!0)}r&&(t.data.morphAttributes=i,t.data.morphTargetsRelative=this.morphTargetsRelative);const o=this.groups;o.length>0&&(t.data.groups=JSON.parse(JSON.stringify(o)));const s=this.boundingSphere;return null!==s&&(t.data.boundingSphere={center:s.center.toArray(),radius:s.radius}),t},clone:function(){return(new xn).copy(this)},copy:function(t){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const e={};this.name=t.name;const n=t.index;null!==n&&this.setIndex(n.clone(e));const i=t.attributes;for(const t in i){const n=i[t];this.setAttribute(t,n.clone(e))}const r=t.morphAttributes;for(const t in r){const n=[],i=r[t];for(let t=0,r=i.length;t<r;t++)n.push(i[t].clone(e));this.morphAttributes[t]=n}this.morphTargetsRelative=t.morphTargetsRelative;const o=t.groups;for(let t=0,e=o.length;t<e;t++){const e=o[t];this.addGroup(e.start,e.count,e.materialIndex)}const s=t.boundingBox;null!==s&&(this.boundingBox=s.clone());const a=t.boundingSphere;return null!==a&&(this.boundingSphere=a.clone()),this.drawRange.start=t.drawRange.start,this.drawRange.count=t.drawRange.count,this.userData=t.userData,this},dispose:function(){this.dispatchEvent({type:"dispose"})}});const _n=new Kt,bn=new Qt,wn=new jt,Mn=new Et,Sn=new Et,En=new Et,Tn=new Et,An=new Et,Ln=new Et,Rn=new Et,Pn=new Et,Cn=new Et,Nn=new mt,On=new mt,In=new mt,Dn=new Et,zn=new Et;function Un(t,e){Se.call(this),this.type="Mesh",this.geometry=void 0!==t?t:new xn,this.material=void 0!==e?e:new $e,this.updateMorphTargets()}function Bn(t,e,n,i,r,o,s,a){let c;if(c=1===e.side?i.intersectTriangle(s,o,r,!0,a):i.intersectTriangle(r,o,s,2!==e.side,a),null===c)return null;zn.copy(a),zn.applyMatrix4(t.matrixWorld);const l=n.ray.origin.distanceTo(zn);return l<n.near||l>n.far?null:{distance:l,point:zn.clone(),object:t}}function Hn(t,e,n,i,r,o,s,a,c,l,h,u){Mn.fromBufferAttribute(r,l),Sn.fromBufferAttribute(r,h),En.fromBufferAttribute(r,u);const d=t.morphTargetInfluences;if(e.morphTargets&&o&&d){Rn.set(0,0,0),Pn.set(0,0,0),Cn.set(0,0,0);for(let t=0,e=o.length;t<e;t++){const e=d[t],n=o[t];0!==e&&(Tn.fromBufferAttribute(n,l),An.fromBufferAttribute(n,h),Ln.fromBufferAttribute(n,u),s?(Rn.addScaledVector(Tn,e),Pn.addScaledVector(An,e),Cn.addScaledVector(Ln,e)):(Rn.addScaledVector(Tn.sub(Mn),e),Pn.addScaledVector(An.sub(Sn),e),Cn.addScaledVector(Ln.sub(En),e)))}Mn.add(Rn),Sn.add(Pn),En.add(Cn)}t.isSkinnedMesh&&(t.boneTransform(l,Mn),t.boneTransform(h,Sn),t.boneTransform(u,En));const p=Bn(t,e,n,i,Mn,Sn,En,Dn);if(p){a&&(Nn.fromBufferAttribute(a,l),On.fromBufferAttribute(a,h),In.fromBufferAttribute(a,u),p.uv=He.getUV(Dn,Mn,Sn,En,Nn,On,In,new mt)),c&&(Nn.fromBufferAttribute(c,l),On.fromBufferAttribute(c,h),In.fromBufferAttribute(c,u),p.uv2=He.getUV(Dn,Mn,Sn,En,Nn,On,In,new mt));const t=new Xe(l,h,u);He.getNormal(Mn,Sn,En,t.normal),p.face=t}return p}Un.prototype=Object.assign(Object.create(Se.prototype),{constructor:Un,isMesh:!0,copy:function(t){return Se.prototype.copy.call(this,t),void 0!==t.morphTargetInfluences&&(this.morphTargetInfluences=t.morphTargetInfluences.slice()),void 0!==t.morphTargetDictionary&&(this.morphTargetDictionary=Object.assign({},t.morphTargetDictionary)),this.material=t.material,this.geometry=t.geometry,this},updateMorphTargets:function(){const t=this.geometry;if(t.isBufferGeometry){const e=t.morphAttributes,n=Object.keys(e);if(n.length>0){const t=e[n[0]];if(void 0!==t){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let e=0,n=t.length;e<n;e++){const n=t[e].name||String(e);this.morphTargetInfluences.push(0),this.morphTargetDictionary[n]=e}}}}else{const e=t.morphTargets;void 0!==e&&e.length>0&&console.error("THREE.Mesh.updateMorphTargets() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}},raycast:function(t,e){const n=this.geometry,i=this.material,r=this.matrixWorld;if(void 0===i)return;if(null===n.boundingSphere&&n.computeBoundingSphere(),wn.copy(n.boundingSphere),wn.applyMatrix4(r),!1===t.ray.intersectsSphere(wn))return;if(_n.getInverse(r),bn.copy(t.ray).applyMatrix4(_n),null!==n.boundingBox&&!1===bn.intersectsBox(n.boundingBox))return;let o;if(n.isBufferGeometry){const r=n.index,s=n.attributes.position,a=n.morphAttributes.position,c=n.morphTargetsRelative,l=n.attributes.uv,h=n.attributes.uv2,u=n.groups,d=n.drawRange;if(null!==r)if(Array.isArray(i))for(let n=0,p=u.length;n<p;n++){const p=u[n],f=i[p.materialIndex];for(let n=Math.max(p.start,d.start),i=Math.min(p.start+p.count,d.start+d.count);n<i;n+=3){const i=r.getX(n),u=r.getX(n+1),d=r.getX(n+2);o=Hn(this,f,t,bn,s,a,c,l,h,i,u,d),o&&(o.faceIndex=Math.floor(n/3),o.face.materialIndex=p.materialIndex,e.push(o))}}else{for(let n=Math.max(0,d.start),u=Math.min(r.count,d.start+d.count);n<u;n+=3){const u=r.getX(n),d=r.getX(n+1),p=r.getX(n+2);o=Hn(this,i,t,bn,s,a,c,l,h,u,d,p),o&&(o.faceIndex=Math.floor(n/3),e.push(o))}}else if(void 0!==s)if(Array.isArray(i))for(let n=0,r=u.length;n<r;n++){const r=u[n],p=i[r.materialIndex];for(let n=Math.max(r.start,d.start),i=Math.min(r.start+r.count,d.start+d.count);n<i;n+=3){o=Hn(this,p,t,bn,s,a,c,l,h,n,n+1,n+2),o&&(o.faceIndex=Math.floor(n/3),o.face.materialIndex=r.materialIndex,e.push(o))}}else{for(let n=Math.max(0,d.start),r=Math.min(s.count,d.start+d.count);n<r;n+=3){o=Hn(this,i,t,bn,s,a,c,l,h,n,n+1,n+2),o&&(o.faceIndex=Math.floor(n/3),e.push(o))}}}else if(n.isGeometry){const r=Array.isArray(i),s=n.vertices,a=n.faces;let c;const l=n.faceVertexUvs[0];l.length>0&&(c=l);for(let n=0,l=a.length;n<l;n++){const l=a[n],h=r?i[l.materialIndex]:i;if(void 0===h)continue;const u=s[l.a],d=s[l.b],p=s[l.c];if(o=Bn(this,h,t,bn,u,d,p,Dn),o){if(c&&c[n]){const t=c[n];Nn.copy(t[0]),On.copy(t[1]),In.copy(t[2]),o.uv=He.getUV(Dn,u,d,p,Nn,On,In,new mt)}o.face=l,o.faceIndex=n,e.push(o)}}}}});class Fn extends xn{constructor(t=1,e=1,n=1,i=1,r=1,o=1){super(),this.type="BoxBufferGeometry",this.parameters={width:t,height:e,depth:n,widthSegments:i,heightSegments:r,depthSegments:o};const s=this;i=Math.floor(i),r=Math.floor(r),o=Math.floor(o);const a=[],c=[],l=[],h=[];let u=0,d=0;function p(t,e,n,i,r,o,p,f,m,g,v){const y=o/m,x=p/g,_=o/2,b=p/2,w=f/2,M=m+1,S=g+1;let E=0,T=0;const A=new Et;for(let o=0;o<S;o++){const s=o*x-b;for(let a=0;a<M;a++){const u=a*y-_;A[t]=u*i,A[e]=s*r,A[n]=w,c.push(A.x,A.y,A.z),A[t]=0,A[e]=0,A[n]=f>0?1:-1,l.push(A.x,A.y,A.z),h.push(a/m),h.push(1-o/g),E+=1}}for(let t=0;t<g;t++)for(let e=0;e<m;e++){const n=u+e+M*t,i=u+e+M*(t+1),r=u+(e+1)+M*(t+1),o=u+(e+1)+M*t;a.push(n,i,o),a.push(i,r,o),T+=6}s.addGroup(d,T,v),d+=T,u+=E}p("z","y","x",-1,-1,n,e,t,o,r,0),p("z","y","x",1,-1,n,e,-t,o,r,1),p("x","z","y",1,1,t,n,e,i,o,2),p("x","z","y",1,-1,t,n,-e,i,o,3),p("x","y","z",1,-1,t,e,n,i,r,4),p("x","y","z",-1,-1,t,e,-n,i,r,5),this.setIndex(a),this.setAttribute("position",new cn(c,3)),this.setAttribute("normal",new cn(l,3)),this.setAttribute("uv",new cn(h,2))}}function kn(t){const e={};for(const n in t){e[n]={};for(const i in t[n]){const r=t[n][i];r&&(r.isColor||r.isMatrix3||r.isMatrix4||r.isVector2||r.isVector3||r.isVector4||r.isTexture)?e[n][i]=r.clone():Array.isArray(r)?e[n][i]=r.slice():e[n][i]=r}}return e}function Gn(t){const e={};for(let n=0;n<t.length;n++){const i=kn(t[n]);for(const t in i)e[t]=i[t]}return e}const Vn={clone:kn,merge:Gn};function jn(t){Ze.call(this),this.type="ShaderMaterial",this.defines={},this.uniforms={},this.vertexShader="void main() {\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",this.fragmentShader="void main() {\n\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\n}",this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.extensions={derivatives:!1,fragDepth:!1,drawBuffers:!1,shaderTextureLOD:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv2:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,void 0!==t&&(void 0!==t.attributes&&console.error("THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead."),this.setValues(t))}function Wn(){Se.call(this),this.type="Camera",this.matrixWorldInverse=new Kt,this.projectionMatrix=new Kt,this.projectionMatrixInverse=new Kt}function qn(t,e,n,i){Wn.call(this),this.type="PerspectiveCamera",this.fov=void 0!==t?t:50,this.zoom=1,this.near=void 0!==n?n:.1,this.far=void 0!==i?i:2e3,this.focus=10,this.aspect=void 0!==e?e:1,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}jn.prototype=Object.create(Ze.prototype),jn.prototype.constructor=jn,jn.prototype.isShaderMaterial=!0,jn.prototype.copy=function(t){return Ze.prototype.copy.call(this,t),this.fragmentShader=t.fragmentShader,this.vertexShader=t.vertexShader,this.uniforms=kn(t.uniforms),this.defines=Object.assign({},t.defines),this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.lights=t.lights,this.clipping=t.clipping,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.morphNormals=t.morphNormals,this.extensions=Object.assign({},t.extensions),this.glslVersion=t.glslVersion,this},jn.prototype.toJSON=function(t){const e=Ze.prototype.toJSON.call(this,t);e.glslVersion=this.glslVersion,e.uniforms={};for(const n in this.uniforms){const i=this.uniforms[n].value;i&&i.isTexture?e.uniforms[n]={type:"t",value:i.toJSON(t).uuid}:i&&i.isColor?e.uniforms[n]={type:"c",value:i.getHex()}:i&&i.isVector2?e.uniforms[n]={type:"v2",value:i.toArray()}:i&&i.isVector3?e.uniforms[n]={type:"v3",value:i.toArray()}:i&&i.isVector4?e.uniforms[n]={type:"v4",value:i.toArray()}:i&&i.isMatrix3?e.uniforms[n]={type:"m3",value:i.toArray()}:i&&i.isMatrix4?e.uniforms[n]={type:"m4",value:i.toArray()}:e.uniforms[n]={value:i}}Object.keys(this.defines).length>0&&(e.defines=this.defines),e.vertexShader=this.vertexShader,e.fragmentShader=this.fragmentShader;const n={};for(const t in this.extensions)!0===this.extensions[t]&&(n[t]=!0);return Object.keys(n).length>0&&(e.extensions=n),e},Wn.prototype=Object.assign(Object.create(Se.prototype),{constructor:Wn,isCamera:!0,copy:function(t,e){return Se.prototype.copy.call(this,t,e),this.matrixWorldInverse.copy(t.matrixWorldInverse),this.projectionMatrix.copy(t.projectionMatrix),this.projectionMatrixInverse.copy(t.projectionMatrixInverse),this},getWorldDirection:function(t){void 0===t&&(console.warn("THREE.Camera: .getWorldDirection() target is now required"),t=new Et),this.updateMatrixWorld(!0);const e=this.matrixWorld.elements;return t.set(-e[8],-e[9],-e[10]).normalize()},updateMatrixWorld:function(t){Se.prototype.updateMatrixWorld.call(this,t),this.matrixWorldInverse.getInverse(this.matrixWorld)},updateWorldMatrix:function(t,e){Se.prototype.updateWorldMatrix.call(this,t,e),this.matrixWorldInverse.getInverse(this.matrixWorld)},clone:function(){return(new this.constructor).copy(this)}}),qn.prototype=Object.assign(Object.create(Wn.prototype),{constructor:qn,isPerspectiveCamera:!0,copy:function(t,e){return Wn.prototype.copy.call(this,t,e),this.fov=t.fov,this.zoom=t.zoom,this.near=t.near,this.far=t.far,this.focus=t.focus,this.aspect=t.aspect,this.view=null===t.view?null:Object.assign({},t.view),this.filmGauge=t.filmGauge,this.filmOffset=t.filmOffset,this},setFocalLength:function(t){const e=.5*this.getFilmHeight()/t;this.fov=2*ft.RAD2DEG*Math.atan(e),this.updateProjectionMatrix()},getFocalLength:function(){const t=Math.tan(.5*ft.DEG2RAD*this.fov);return.5*this.getFilmHeight()/t},getEffectiveFOV:function(){return 2*ft.RAD2DEG*Math.atan(Math.tan(.5*ft.DEG2RAD*this.fov)/this.zoom)},getFilmWidth:function(){return this.filmGauge*Math.min(this.aspect,1)},getFilmHeight:function(){return this.filmGauge/Math.max(this.aspect,1)},setViewOffset:function(t,e,n,i,r,o){this.aspect=t/e,null===this.view&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=t,this.view.fullHeight=e,this.view.offsetX=n,this.view.offsetY=i,this.view.width=r,this.view.height=o,this.updateProjectionMatrix()},clearViewOffset:function(){null!==this.view&&(this.view.enabled=!1),this.updateProjectionMatrix()},updateProjectionMatrix:function(){const t=this.near;let e=t*Math.tan(.5*ft.DEG2RAD*this.fov)/this.zoom,n=2*e,i=this.aspect*n,r=-.5*i;const o=this.view;if(null!==this.view&&this.view.enabled){const t=o.fullWidth,s=o.fullHeight;r+=o.offsetX*i/t,e-=o.offsetY*n/s,i*=o.width/t,n*=o.height/s}const s=this.filmOffset;0!==s&&(r+=t*s/this.getFilmWidth()),this.projectionMatrix.makePerspective(r,r+i,e,e-n,t,this.far),this.projectionMatrixInverse.getInverse(this.projectionMatrix)},toJSON:function(t){const e=Se.prototype.toJSON.call(this,t);return e.object.fov=this.fov,e.object.zoom=this.zoom,e.object.near=this.near,e.object.far=this.far,e.object.focus=this.focus,e.object.aspect=this.aspect,null!==this.view&&(e.object.view=Object.assign({},this.view)),e.object.filmGauge=this.filmGauge,e.object.filmOffset=this.filmOffset,e}});function Xn(t,e,n){if(Se.call(this),this.type="CubeCamera",!0!==n.isWebGLCubeRenderTarget)return void console.error("THREE.CubeCamera: The constructor now expects an instance of WebGLCubeRenderTarget as third parameter.");this.renderTarget=n;const i=new qn(90,1,t,e);i.layers=this.layers,i.up.set(0,-1,0),i.lookAt(new Et(1,0,0)),this.add(i);const r=new qn(90,1,t,e);r.layers=this.layers,r.up.set(0,-1,0),r.lookAt(new Et(-1,0,0)),this.add(r);const o=new qn(90,1,t,e);o.layers=this.layers,o.up.set(0,0,1),o.lookAt(new Et(0,1,0)),this.add(o);const s=new qn(90,1,t,e);s.layers=this.layers,s.up.set(0,0,-1),s.lookAt(new Et(0,-1,0)),this.add(s);const a=new qn(90,1,t,e);a.layers=this.layers,a.up.set(0,-1,0),a.lookAt(new Et(0,0,1)),this.add(a);const c=new qn(90,1,t,e);c.layers=this.layers,c.up.set(0,-1,0),c.lookAt(new Et(0,0,-1)),this.add(c),this.update=function(t,e){null===this.parent&&this.updateMatrixWorld();const l=t.xr.enabled,h=t.getRenderTarget();t.xr.enabled=!1;const u=n.texture.generateMipmaps;n.texture.generateMipmaps=!1,t.setRenderTarget(n,0),t.render(e,i),t.setRenderTarget(n,1),t.render(e,r),t.setRenderTarget(n,2),t.render(e,o),t.setRenderTarget(n,3),t.render(e,s),t.setRenderTarget(n,4),t.render(e,a),n.texture.generateMipmaps=u,t.setRenderTarget(n,5),t.render(e,c),t.setRenderTarget(h),t.xr.enabled=l},this.clear=function(t,e,i,r){const o=t.getRenderTarget();for(let o=0;o<6;o++)t.setRenderTarget(n,o),t.clear(e,i,r);t.setRenderTarget(o)}}function Yn(t,e,n,i,r,o,s,a,c,l){t=void 0!==t?t:[],e=void 0!==e?e:301,s=void 0!==s?s:1022,_t.call(this,t,e,n,i,r,o,s,a,c,l),this.flipY=!1,this._needsFlipEnvMap=!0}function Zn(t,e,n){Number.isInteger(e)&&(console.warn("THREE.WebGLCubeRenderTarget: constructor signature is now WebGLCubeRenderTarget( size, options )"),e=n),wt.call(this,t,t,e),e=e||{},this.texture=new Yn(void 0,e.mapping,e.wrapS,e.wrapT,e.magFilter,e.minFilter,e.format,e.type,e.anisotropy,e.encoding),this.texture._needsFlipEnvMap=!1}function $n(t,e,n,i,r,o,s,a,c,l,h,u){_t.call(this,null,o,s,a,c,l,i,r,h,u),this.image={data:t||null,width:e||1,height:n||1},this.magFilter=void 0!==c?c:1003,this.minFilter=void 0!==l?l:1003,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1,this.needsUpdate=!0}Xn.prototype=Object.create(Se.prototype),Xn.prototype.constructor=Xn,Yn.prototype=Object.create(_t.prototype),Yn.prototype.constructor=Yn,Yn.prototype.isCubeTexture=!0,Object.defineProperty(Yn.prototype,"images",{get:function(){return this.image},set:function(t){this.image=t}}),Zn.prototype=Object.create(wt.prototype),Zn.prototype.constructor=Zn,Zn.prototype.isWebGLCubeRenderTarget=!0,Zn.prototype.fromEquirectangularTexture=function(t,e){this.texture.type=e.type,this.texture.format=1023,this.texture.encoding=e.encoding,this.texture.generateMipmaps=e.generateMipmaps,this.texture.minFilter=e.minFilter,this.texture.magFilter=e.magFilter;const n={uniforms:{tEquirect:{value:null}},vertexShader:"\n\n\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\tvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\n\t\t\t\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n\n\t\t\t}\n\n\t\t\tvoid main() {\n\n\t\t\t\tvWorldDirection = transformDirection( position, modelMatrix );\n\n\t\t\t\t#include <begin_vertex>\n\t\t\t\t#include <project_vertex>\n\n\t\t\t}\n\t\t",fragmentShader:"\n\n\t\t\tuniform sampler2D tEquirect;\n\n\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t#include <common>\n\n\t\t\tvoid main() {\n\n\t\t\t\tvec3 direction = normalize( vWorldDirection );\n\n\t\t\t\tvec2 sampleUV = equirectUv( direction );\n\n\t\t\t\tgl_FragColor = texture2D( tEquirect, sampleUV );\n\n\t\t\t}\n\t\t"},i=new Fn(5,5,5),r=new jn({name:"CubemapFromEquirect",uniforms:kn(n.uniforms),vertexShader:n.vertexShader,fragmentShader:n.fragmentShader,side:1,blending:0});r.uniforms.tEquirect.value=e;const o=new Un(i,r),s=e.minFilter;1008===e.minFilter&&(e.minFilter=1006);return new Xn(1,10,this).update(t,o),e.minFilter=s,o.geometry.dispose(),o.material.dispose(),this},$n.prototype=Object.create(_t.prototype),$n.prototype.constructor=$n,$n.prototype.isDataTexture=!0;const Jn=new jt,Qn=new Et;class Kn{constructor(t,e,n,i,r,o){this.planes=[void 0!==t?t:new Le,void 0!==e?e:new Le,void 0!==n?n:new Le,void 0!==i?i:new Le,void 0!==r?r:new Le,void 0!==o?o:new Le]}set(t,e,n,i,r,o){const s=this.planes;return s[0].copy(t),s[1].copy(e),s[2].copy(n),s[3].copy(i),s[4].copy(r),s[5].copy(o),this}clone(){return(new this.constructor).copy(this)}copy(t){const e=this.planes;for(let n=0;n<6;n++)e[n].copy(t.planes[n]);return this}setFromProjectionMatrix(t){const e=this.planes,n=t.elements,i=n[0],r=n[1],o=n[2],s=n[3],a=n[4],c=n[5],l=n[6],h=n[7],u=n[8],d=n[9],p=n[10],f=n[11],m=n[12],g=n[13],v=n[14],y=n[15];return e[0].setComponents(s-i,h-a,f-u,y-m).normalize(),e[1].setComponents(s+i,h+a,f+u,y+m).normalize(),e[2].setComponents(s+r,h+c,f+d,y+g).normalize(),e[3].setComponents(s-r,h-c,f-d,y-g).normalize(),e[4].setComponents(s-o,h-l,f-p,y-v).normalize(),e[5].setComponents(s+o,h+l,f+p,y+v).normalize(),this}intersectsObject(t){const e=t.geometry;return null===e.boundingSphere&&e.computeBoundingSphere(),Jn.copy(e.boundingSphere).applyMatrix4(t.matrixWorld),this.intersectsSphere(Jn)}intersectsSprite(t){return Jn.center.set(0,0,0),Jn.radius=.7071067811865476,Jn.applyMatrix4(t.matrixWorld),this.intersectsSphere(Jn)}intersectsSphere(t){const e=this.planes,n=t.center,i=-t.radius;for(let t=0;t<6;t++){if(e[t].distanceToPoint(n)<i)return!1}return!0}intersectsBox(t){const e=this.planes;for(let n=0;n<6;n++){const i=e[n];if(Qn.x=i.normal.x>0?t.max.x:t.min.x,Qn.y=i.normal.y>0?t.max.y:t.min.y,Qn.z=i.normal.z>0?t.max.z:t.min.z,i.distanceToPoint(Qn)<0)return!1}return!0}containsPoint(t){const e=this.planes;for(let n=0;n<6;n++)if(e[n].distanceToPoint(t)<0)return!1;return!0}}function ti(){let t=null,e=!1,n=null,i=null;function r(e,o){n(e,o),i=t.requestAnimationFrame(r)}return{start:function(){!0!==e&&null!==n&&(i=t.requestAnimationFrame(r),e=!0)},stop:function(){t.cancelAnimationFrame(i),e=!1},setAnimationLoop:function(t){n=t},setContext:function(e){t=e}}}function ei(t,e){const n=e.isWebGL2,i=new WeakMap;return{get:function(t){return t.isInterleavedBufferAttribute&&(t=t.data),i.get(t)},remove:function(e){e.isInterleavedBufferAttribute&&(e=e.data);const n=i.get(e);n&&(t.deleteBuffer(n.buffer),i.delete(e))},update:function(e,r){if(e.isGLBufferAttribute){var o=i.get(e);return void((!o||o.version<e.version)&&i.set(e,{buffer:e.buffer,type:e.type,bytesPerElement:e.elementSize,version:e.version}))}e.isInterleavedBufferAttribute&&(e=e.data);const s=i.get(e);void 0===s?i.set(e,function(e,n){const i=e.array,r=e.usage,o=t.createBuffer();t.bindBuffer(n,o),t.bufferData(n,i,r),e.onUploadCallback();let s=5126;return i instanceof Float32Array?s=5126:i instanceof Float64Array?console.warn("THREE.WebGLAttributes: Unsupported data buffer format: Float64Array."):i instanceof Uint16Array?s=5123:i instanceof Int16Array?s=5122:i instanceof Uint32Array?s=5125:i instanceof Int32Array?s=5124:i instanceof Int8Array?s=5120:i instanceof Uint8Array&&(s=5121),{buffer:o,type:s,bytesPerElement:i.BYTES_PER_ELEMENT,version:e.version}}(e,r)):s.version<e.version&&(!function(e,i,r){const o=i.array,s=i.updateRange;t.bindBuffer(r,e),-1===s.count?t.bufferSubData(r,0,o):(n?t.bufferSubData(r,s.offset*o.BYTES_PER_ELEMENT,o,s.offset,s.count):t.bufferSubData(r,s.offset*o.BYTES_PER_ELEMENT,o.subarray(s.offset,s.offset+s.count)),s.count=-1)}(s.buffer,e,r),s.version=e.version)}}}class ni extends xn{constructor(t,e,n,i){super(),this.type="PlaneBufferGeometry",this.parameters={width:t,height:e,widthSegments:n,heightSegments:i};const r=(t=t||1)/2,o=(e=e||1)/2,s=Math.floor(n)||1,a=Math.floor(i)||1,c=s+1,l=a+1,h=t/s,u=e/a,d=[],p=[],f=[],m=[];for(let t=0;t<l;t++){const e=t*u-o;for(let n=0;n<c;n++){const i=n*h-r;p.push(i,-e,0),f.push(0,0,1),m.push(n/s),m.push(1-t/a)}}for(let t=0;t<a;t++)for(let e=0;e<s;e++){const n=e+c*t,i=e+c*(t+1),r=e+1+c*(t+1),o=e+1+c*t;d.push(n,i,o),d.push(i,r,o)}this.setIndex(d),this.setAttribute("position",new cn(p,3)),this.setAttribute("normal",new cn(f,3)),this.setAttribute("uv",new cn(m,2))}}const ii={alphamap_fragment:"#ifdef USE_ALPHAMAP\n\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\n#endif",alphamap_pars_fragment:"#ifdef USE_ALPHAMAP\n\tuniform sampler2D alphaMap;\n#endif",alphatest_fragment:"#ifdef ALPHATEST\n\tif ( diffuseColor.a < ALPHATEST ) discard;\n#endif",aomap_fragment:"#ifdef USE_AOMAP\n\tfloat ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\n\treflectedLight.indirectDiffuse *= ambientOcclusion;\n\t#if defined( USE_ENVMAP ) && defined( STANDARD )\n\t\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\t\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.specularRoughness );\n\t#endif\n#endif",aomap_pars_fragment:"#ifdef USE_AOMAP\n\tuniform sampler2D aoMap;\n\tuniform float aoMapIntensity;\n#endif",begin_vertex:"vec3 transformed = vec3( position );",beginnormal_vertex:"vec3 objectNormal = vec3( normal );\n#ifdef USE_TANGENT\n\tvec3 objectTangent = vec3( tangent.xyz );\n#endif",bsdfs:"vec2 integrateSpecularBRDF( const in float dotNV, const in float roughness ) {\n\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\n\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\n\tvec4 r = roughness * c0 + c1;\n\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\n\treturn vec2( -1.04, 1.04 ) * a004 + r.zw;\n}\nfloat punctualLightIntensityToIrradianceFactor( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\n#if defined ( PHYSICALLY_CORRECT_LIGHTS )\n\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\n\tif( cutoffDistance > 0.0 ) {\n\t\tdistanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\n\t}\n\treturn distanceFalloff;\n#else\n\tif( cutoffDistance > 0.0 && decayExponent > 0.0 ) {\n\t\treturn pow( saturate( -lightDistance / cutoffDistance + 1.0 ), decayExponent );\n\t}\n\treturn 1.0;\n#endif\n}\nvec3 BRDF_Diffuse_Lambert( const in vec3 diffuseColor ) {\n\treturn RECIPROCAL_PI * diffuseColor;\n}\nvec3 F_Schlick( const in vec3 specularColor, const in float dotLH ) {\n\tfloat fresnel = exp2( ( -5.55473 * dotLH - 6.98316 ) * dotLH );\n\treturn ( 1.0 - specularColor ) * fresnel + specularColor;\n}\nvec3 F_Schlick_RoughnessDependent( const in vec3 F0, const in float dotNV, const in float roughness ) {\n\tfloat fresnel = exp2( ( -5.55473 * dotNV - 6.98316 ) * dotNV );\n\tvec3 Fr = max( vec3( 1.0 - roughness ), F0 ) - F0;\n\treturn Fr * fresnel + F0;\n}\nfloat G_GGX_Smith( const in float alpha, const in float dotNL, const in float dotNV ) {\n\tfloat a2 = pow2( alpha );\n\tfloat gl = dotNL + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n\tfloat gv = dotNV + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n\treturn 1.0 / ( gl * gv );\n}\nfloat G_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\n\tfloat a2 = pow2( alpha );\n\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n\treturn 0.5 / max( gv + gl, EPSILON );\n}\nfloat D_GGX( const in float alpha, const in float dotNH ) {\n\tfloat a2 = pow2( alpha );\n\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\n\treturn RECIPROCAL_PI * a2 / pow2( denom );\n}\nvec3 BRDF_Specular_GGX( const in IncidentLight incidentLight, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float roughness ) {\n\tfloat alpha = pow2( roughness );\n\tvec3 halfDir = normalize( incidentLight.direction + viewDir );\n\tfloat dotNL = saturate( dot( normal, incidentLight.direction ) );\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\n\tvec3 F = F_Schlick( specularColor, dotLH );\n\tfloat G = G_GGX_SmithCorrelated( alpha, dotNL, dotNV );\n\tfloat D = D_GGX( alpha, dotNH );\n\treturn F * ( G * D );\n}\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\n\tconst float LUT_SIZE = 64.0;\n\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\n\tconst float LUT_BIAS = 0.5 / LUT_SIZE;\n\tfloat dotNV = saturate( dot( N, V ) );\n\tvec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\n\tuv = uv * LUT_SCALE + LUT_BIAS;\n\treturn uv;\n}\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\n\tfloat l = length( f );\n\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\n}\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\n\tfloat x = dot( v1, v2 );\n\tfloat y = abs( x );\n\tfloat a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\n\tfloat b = 3.4175940 + ( 4.1616724 + y ) * y;\n\tfloat v = a / b;\n\tfloat theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\n\treturn cross( v1, v2 ) * theta_sintheta;\n}\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\n\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\n\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\n\tvec3 lightNormal = cross( v1, v2 );\n\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\n\tvec3 T1, T2;\n\tT1 = normalize( V - N * dot( V, N ) );\n\tT2 = - cross( N, T1 );\n\tmat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\n\tvec3 coords[ 4 ];\n\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\n\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\n\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\n\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\n\tcoords[ 0 ] = normalize( coords[ 0 ] );\n\tcoords[ 1 ] = normalize( coords[ 1 ] );\n\tcoords[ 2 ] = normalize( coords[ 2 ] );\n\tcoords[ 3 ] = normalize( coords[ 3 ] );\n\tvec3 vectorFormFactor = vec3( 0.0 );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\n\tfloat result = LTC_ClippedSphereFormFactor( vectorFormFactor );\n\treturn vec3( result );\n}\nvec3 BRDF_Specular_GGX_Environment( const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float roughness ) {\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tvec2 brdf = integrateSpecularBRDF( dotNV, roughness );\n\treturn specularColor * brdf.x + brdf.y;\n}\nvoid BRDF_Specular_Multiscattering_Environment( const in GeometricContext geometry, const in vec3 specularColor, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\n\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\tvec3 F = F_Schlick_RoughnessDependent( specularColor, dotNV, roughness );\n\tvec2 brdf = integrateSpecularBRDF( dotNV, roughness );\n\tvec3 FssEss = F * brdf.x + brdf.y;\n\tfloat Ess = brdf.x + brdf.y;\n\tfloat Ems = 1.0 - Ess;\n\tvec3 Favg = specularColor + ( 1.0 - specularColor ) * 0.047619;\tvec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );\n\tsingleScatter += FssEss;\n\tmultiScatter += Fms * Ems;\n}\nfloat G_BlinnPhong_Implicit( ) {\n\treturn 0.25;\n}\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\n\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\n}\nvec3 BRDF_Specular_BlinnPhong( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float shininess ) {\n\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\n\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\n\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\n\tvec3 F = F_Schlick( specularColor, dotLH );\n\tfloat G = G_BlinnPhong_Implicit( );\n\tfloat D = D_BlinnPhong( shininess, dotNH );\n\treturn F * ( G * D );\n}\nfloat GGXRoughnessToBlinnExponent( const in float ggxRoughness ) {\n\treturn ( 2.0 / pow2( ggxRoughness + 0.0001 ) - 2.0 );\n}\nfloat BlinnExponentToGGXRoughness( const in float blinnExponent ) {\n\treturn sqrt( 2.0 / ( blinnExponent + 2.0 ) );\n}\n#if defined( USE_SHEEN )\nfloat D_Charlie(float roughness, float NoH) {\n\tfloat invAlpha = 1.0 / roughness;\n\tfloat cos2h = NoH * NoH;\n\tfloat sin2h = max(1.0 - cos2h, 0.0078125);\treturn (2.0 + invAlpha) * pow(sin2h, invAlpha * 0.5) / (2.0 * PI);\n}\nfloat V_Neubelt(float NoV, float NoL) {\n\treturn saturate(1.0 / (4.0 * (NoL + NoV - NoL * NoV)));\n}\nvec3 BRDF_Specular_Sheen( const in float roughness, const in vec3 L, const in GeometricContext geometry, vec3 specularColor ) {\n\tvec3 N = geometry.normal;\n\tvec3 V = geometry.viewDir;\n\tvec3 H = normalize( V + L );\n\tfloat dotNH = saturate( dot( N, H ) );\n\treturn specularColor * D_Charlie( roughness, dotNH ) * V_Neubelt( dot(N, V), dot(N, L) );\n}\n#endif",bumpmap_pars_fragment:"#ifdef USE_BUMPMAP\n\tuniform sampler2D bumpMap;\n\tuniform float bumpScale;\n\tvec2 dHdxy_fwd() {\n\t\tvec2 dSTdx = dFdx( vUv );\n\t\tvec2 dSTdy = dFdy( vUv );\n\t\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\n\t\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\n\t\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\n\t\treturn vec2( dBx, dBy );\n\t}\n\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {\n\t\tvec3 vSigmaX = vec3( dFdx( surf_pos.x ), dFdx( surf_pos.y ), dFdx( surf_pos.z ) );\n\t\tvec3 vSigmaY = vec3( dFdy( surf_pos.x ), dFdy( surf_pos.y ), dFdy( surf_pos.z ) );\n\t\tvec3 vN = surf_norm;\n\t\tvec3 R1 = cross( vSigmaY, vN );\n\t\tvec3 R2 = cross( vN, vSigmaX );\n\t\tfloat fDet = dot( vSigmaX, R1 );\n\t\tfDet *= ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\t\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\n\t\treturn normalize( abs( fDet ) * surf_norm - vGrad );\n\t}\n#endif",clipping_planes_fragment:"#if NUM_CLIPPING_PLANES > 0\n\tvec4 plane;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\n\t\tplane = clippingPlanes[ i ];\n\t\tif ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;\n\t}\n\t#pragma unroll_loop_end\n\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\n\t\tbool clipped = true;\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\n\t\t\tplane = clippingPlanes[ i ];\n\t\t\tclipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;\n\t\t}\n\t\t#pragma unroll_loop_end\n\t\tif ( clipped ) discard;\n\t#endif\n#endif",clipping_planes_pars_fragment:"#if NUM_CLIPPING_PLANES > 0\n\tvarying vec3 vClipPosition;\n\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\n#endif",clipping_planes_pars_vertex:"#if NUM_CLIPPING_PLANES > 0\n\tvarying vec3 vClipPosition;\n#endif",clipping_planes_vertex:"#if NUM_CLIPPING_PLANES > 0\n\tvClipPosition = - mvPosition.xyz;\n#endif",color_fragment:"#ifdef USE_COLOR\n\tdiffuseColor.rgb *= vColor;\n#endif",color_pars_fragment:"#ifdef USE_COLOR\n\tvarying vec3 vColor;\n#endif",color_pars_vertex:"#if defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\n\tvarying vec3 vColor;\n#endif",color_vertex:"#if defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\n\tvColor = vec3( 1.0 );\n#endif\n#ifdef USE_COLOR\n\tvColor.xyz *= color.xyz;\n#endif\n#ifdef USE_INSTANCING_COLOR\n\tvColor.xyz *= instanceColor.xyz;\n#endif",common:"#define PI 3.141592653589793\n#define PI2 6.283185307179586\n#define PI_HALF 1.5707963267948966\n#define RECIPROCAL_PI 0.3183098861837907\n#define RECIPROCAL_PI2 0.15915494309189535\n#define EPSILON 1e-6\n#ifndef saturate\n#define saturate(a) clamp( a, 0.0, 1.0 )\n#endif\n#define whiteComplement(a) ( 1.0 - saturate( a ) )\nfloat pow2( const in float x ) { return x*x; }\nfloat pow3( const in float x ) { return x*x*x; }\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\nfloat average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }\nhighp float rand( const in vec2 uv ) {\n\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\n\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\n\treturn fract(sin(sn) * c);\n}\n#ifdef HIGH_PRECISION\n\tfloat precisionSafeLength( vec3 v ) { return length( v ); }\n#else\n\tfloat max3( vec3 v ) { return max( max( v.x, v.y ), v.z ); }\n\tfloat precisionSafeLength( vec3 v ) {\n\t\tfloat maxComponent = max3( abs( v ) );\n\t\treturn length( v / maxComponent ) * maxComponent;\n\t}\n#endif\nstruct IncidentLight {\n\tvec3 color;\n\tvec3 direction;\n\tbool visible;\n};\nstruct ReflectedLight {\n\tvec3 directDiffuse;\n\tvec3 directSpecular;\n\tvec3 indirectDiffuse;\n\tvec3 indirectSpecular;\n};\nstruct GeometricContext {\n\tvec3 position;\n\tvec3 normal;\n\tvec3 viewDir;\n#ifdef CLEARCOAT\n\tvec3 clearcoatNormal;\n#endif\n};\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n}\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\n}\nvec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\tfloat distance = dot( planeNormal, point - pointOnPlane );\n\treturn - distance * planeNormal + point;\n}\nfloat sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\treturn sign( dot( point - pointOnPlane, planeNormal ) );\n}\nvec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\treturn lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) / dot( planeNormal, lineDirection ) ) + pointOnLine;\n}\nmat3 transposeMat3( const in mat3 m ) {\n\tmat3 tmp;\n\ttmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\n\ttmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\n\ttmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\n\treturn tmp;\n}\nfloat linearToRelativeLuminance( const in vec3 color ) {\n\tvec3 weights = vec3( 0.2126, 0.7152, 0.0722 );\n\treturn dot( weights, color.rgb );\n}\nbool isPerspectiveMatrix( mat4 m ) {\n\treturn m[ 2 ][ 3 ] == - 1.0;\n}\nvec2 equirectUv( in vec3 dir ) {\n\tfloat u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;\n\tfloat v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\n\treturn vec2( u, v );\n}",cube_uv_reflection_fragment:"#ifdef ENVMAP_TYPE_CUBE_UV\n\t#define cubeUV_maxMipLevel 8.0\n\t#define cubeUV_minMipLevel 4.0\n\t#define cubeUV_maxTileSize 256.0\n\t#define cubeUV_minTileSize 16.0\n\tfloat getFace( vec3 direction ) {\n\t\tvec3 absDirection = abs( direction );\n\t\tfloat face = - 1.0;\n\t\tif ( absDirection.x > absDirection.z ) {\n\t\t\tif ( absDirection.x > absDirection.y )\n\t\t\t\tface = direction.x > 0.0 ? 0.0 : 3.0;\n\t\t\telse\n\t\t\t\tface = direction.y > 0.0 ? 1.0 : 4.0;\n\t\t} else {\n\t\t\tif ( absDirection.z > absDirection.y )\n\t\t\t\tface = direction.z > 0.0 ? 2.0 : 5.0;\n\t\t\telse\n\t\t\t\tface = direction.y > 0.0 ? 1.0 : 4.0;\n\t\t}\n\t\treturn face;\n\t}\n\tvec2 getUV( vec3 direction, float face ) {\n\t\tvec2 uv;\n\t\tif ( face == 0.0 ) {\n\t\t\tuv = vec2( direction.z, direction.y ) / abs( direction.x );\n\t\t} else if ( face == 1.0 ) {\n\t\t\tuv = vec2( - direction.x, - direction.z ) / abs( direction.y );\n\t\t} else if ( face == 2.0 ) {\n\t\t\tuv = vec2( - direction.x, direction.y ) / abs( direction.z );\n\t\t} else if ( face == 3.0 ) {\n\t\t\tuv = vec2( - direction.z, direction.y ) / abs( direction.x );\n\t\t} else if ( face == 4.0 ) {\n\t\t\tuv = vec2( - direction.x, direction.z ) / abs( direction.y );\n\t\t} else {\n\t\t\tuv = vec2( direction.x, direction.y ) / abs( direction.z );\n\t\t}\n\t\treturn 0.5 * ( uv + 1.0 );\n\t}\n\tvec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {\n\t\tfloat face = getFace( direction );\n\t\tfloat filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );\n\t\tmipInt = max( mipInt, cubeUV_minMipLevel );\n\t\tfloat faceSize = exp2( mipInt );\n\t\tfloat texelSize = 1.0 / ( 3.0 * cubeUV_maxTileSize );\n\t\tvec2 uv = getUV( direction, face ) * ( faceSize - 1.0 );\n\t\tvec2 f = fract( uv );\n\t\tuv += 0.5 - f;\n\t\tif ( face > 2.0 ) {\n\t\t\tuv.y += faceSize;\n\t\t\tface -= 3.0;\n\t\t}\n\t\tuv.x += face * faceSize;\n\t\tif ( mipInt < cubeUV_maxMipLevel ) {\n\t\t\tuv.y += 2.0 * cubeUV_maxTileSize;\n\t\t}\n\t\tuv.y += filterInt * 2.0 * cubeUV_minTileSize;\n\t\tuv.x += 3.0 * max( 0.0, cubeUV_maxTileSize - 2.0 * faceSize );\n\t\tuv *= texelSize;\n\t\tvec3 tl = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\n\t\tuv.x += texelSize;\n\t\tvec3 tr = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\n\t\tuv.y += texelSize;\n\t\tvec3 br = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\n\t\tuv.x -= texelSize;\n\t\tvec3 bl = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\n\t\tvec3 tm = mix( tl, tr, f.x );\n\t\tvec3 bm = mix( bl, br, f.x );\n\t\treturn mix( tm, bm, f.y );\n\t}\n\t#define r0 1.0\n\t#define v0 0.339\n\t#define m0 - 2.0\n\t#define r1 0.8\n\t#define v1 0.276\n\t#define m1 - 1.0\n\t#define r4 0.4\n\t#define v4 0.046\n\t#define m4 2.0\n\t#define r5 0.305\n\t#define v5 0.016\n\t#define m5 3.0\n\t#define r6 0.21\n\t#define v6 0.0038\n\t#define m6 4.0\n\tfloat roughnessToMip( float roughness ) {\n\t\tfloat mip = 0.0;\n\t\tif ( roughness >= r1 ) {\n\t\t\tmip = ( r0 - roughness ) * ( m1 - m0 ) / ( r0 - r1 ) + m0;\n\t\t} else if ( roughness >= r4 ) {\n\t\t\tmip = ( r1 - roughness ) * ( m4 - m1 ) / ( r1 - r4 ) + m1;\n\t\t} else if ( roughness >= r5 ) {\n\t\t\tmip = ( r4 - roughness ) * ( m5 - m4 ) / ( r4 - r5 ) + m4;\n\t\t} else if ( roughness >= r6 ) {\n\t\t\tmip = ( r5 - roughness ) * ( m6 - m5 ) / ( r5 - r6 ) + m5;\n\t\t} else {\n\t\t\tmip = - 2.0 * log2( 1.16 * roughness );\t\t}\n\t\treturn mip;\n\t}\n\tvec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {\n\t\tfloat mip = clamp( roughnessToMip( roughness ), m0, cubeUV_maxMipLevel );\n\t\tfloat mipF = fract( mip );\n\t\tfloat mipInt = floor( mip );\n\t\tvec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );\n\t\tif ( mipF == 0.0 ) {\n\t\t\treturn vec4( color0, 1.0 );\n\t\t} else {\n\t\t\tvec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );\n\t\t\treturn vec4( mix( color0, color1, mipF ), 1.0 );\n\t\t}\n\t}\n#endif",defaultnormal_vertex:"vec3 transformedNormal = objectNormal;\n#ifdef USE_INSTANCING\n\tmat3 m = mat3( instanceMatrix );\n\ttransformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );\n\ttransformedNormal = m * transformedNormal;\n#endif\ntransformedNormal = normalMatrix * transformedNormal;\n#ifdef FLIP_SIDED\n\ttransformedNormal = - transformedNormal;\n#endif\n#ifdef USE_TANGENT\n\tvec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n\t#ifdef FLIP_SIDED\n\t\ttransformedTangent = - transformedTangent;\n\t#endif\n#endif",displacementmap_pars_vertex:"#ifdef USE_DISPLACEMENTMAP\n\tuniform sampler2D displacementMap;\n\tuniform float displacementScale;\n\tuniform float displacementBias;\n#endif",displacementmap_vertex:"#ifdef USE_DISPLACEMENTMAP\n\ttransformed += normalize( objectNormal ) * ( texture2D( displacementMap, vUv ).x * displacementScale + displacementBias );\n#endif",emissivemap_fragment:"#ifdef USE_EMISSIVEMAP\n\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\n\temissiveColor.rgb = emissiveMapTexelToLinear( emissiveColor ).rgb;\n\ttotalEmissiveRadiance *= emissiveColor.rgb;\n#endif",emissivemap_pars_fragment:"#ifdef USE_EMISSIVEMAP\n\tuniform sampler2D emissiveMap;\n#endif",encodings_fragment:"gl_FragColor = linearToOutputTexel( gl_FragColor );",encodings_pars_fragment:"\nvec4 LinearToLinear( in vec4 value ) {\n\treturn value;\n}\nvec4 GammaToLinear( in vec4 value, in float gammaFactor ) {\n\treturn vec4( pow( value.rgb, vec3( gammaFactor ) ), value.a );\n}\nvec4 LinearToGamma( in vec4 value, in float gammaFactor ) {\n\treturn vec4( pow( value.rgb, vec3( 1.0 / gammaFactor ) ), value.a );\n}\nvec4 sRGBToLinear( in vec4 value ) {\n\treturn vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.a );\n}\nvec4 LinearTosRGB( in vec4 value ) {\n\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );\n}\nvec4 RGBEToLinear( in vec4 value ) {\n\treturn vec4( value.rgb * exp2( value.a * 255.0 - 128.0 ), 1.0 );\n}\nvec4 LinearToRGBE( in vec4 value ) {\n\tfloat maxComponent = max( max( value.r, value.g ), value.b );\n\tfloat fExp = clamp( ceil( log2( maxComponent ) ), -128.0, 127.0 );\n\treturn vec4( value.rgb / exp2( fExp ), ( fExp + 128.0 ) / 255.0 );\n}\nvec4 RGBMToLinear( in vec4 value, in float maxRange ) {\n\treturn vec4( value.rgb * value.a * maxRange, 1.0 );\n}\nvec4 LinearToRGBM( in vec4 value, in float maxRange ) {\n\tfloat maxRGB = max( value.r, max( value.g, value.b ) );\n\tfloat M = clamp( maxRGB / maxRange, 0.0, 1.0 );\n\tM = ceil( M * 255.0 ) / 255.0;\n\treturn vec4( value.rgb / ( M * maxRange ), M );\n}\nvec4 RGBDToLinear( in vec4 value, in float maxRange ) {\n\treturn vec4( value.rgb * ( ( maxRange / 255.0 ) / value.a ), 1.0 );\n}\nvec4 LinearToRGBD( in vec4 value, in float maxRange ) {\n\tfloat maxRGB = max( value.r, max( value.g, value.b ) );\n\tfloat D = max( maxRange / maxRGB, 1.0 );\n\tD = clamp( floor( D ) / 255.0, 0.0, 1.0 );\n\treturn vec4( value.rgb * ( D * ( 255.0 / maxRange ) ), D );\n}\nconst mat3 cLogLuvM = mat3( 0.2209, 0.3390, 0.4184, 0.1138, 0.6780, 0.7319, 0.0102, 0.1130, 0.2969 );\nvec4 LinearToLogLuv( in vec4 value ) {\n\tvec3 Xp_Y_XYZp = cLogLuvM * value.rgb;\n\tXp_Y_XYZp = max( Xp_Y_XYZp, vec3( 1e-6, 1e-6, 1e-6 ) );\n\tvec4 vResult;\n\tvResult.xy = Xp_Y_XYZp.xy / Xp_Y_XYZp.z;\n\tfloat Le = 2.0 * log2(Xp_Y_XYZp.y) + 127.0;\n\tvResult.w = fract( Le );\n\tvResult.z = ( Le - ( floor( vResult.w * 255.0 ) ) / 255.0 ) / 255.0;\n\treturn vResult;\n}\nconst mat3 cLogLuvInverseM = mat3( 6.0014, -2.7008, -1.7996, -1.3320, 3.1029, -5.7721, 0.3008, -1.0882, 5.6268 );\nvec4 LogLuvToLinear( in vec4 value ) {\n\tfloat Le = value.z * 255.0 + value.w;\n\tvec3 Xp_Y_XYZp;\n\tXp_Y_XYZp.y = exp2( ( Le - 127.0 ) / 2.0 );\n\tXp_Y_XYZp.z = Xp_Y_XYZp.y / value.y;\n\tXp_Y_XYZp.x = value.x * Xp_Y_XYZp.z;\n\tvec3 vRGB = cLogLuvInverseM * Xp_Y_XYZp.rgb;\n\treturn vec4( max( vRGB, 0.0 ), 1.0 );\n}",envmap_fragment:"#ifdef USE_ENVMAP\n\t#ifdef ENV_WORLDPOS\n\t\tvec3 cameraToFrag;\n\t\tif ( isOrthographic ) {\n\t\t\tcameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n\t\t} else {\n\t\t\tcameraToFrag = normalize( vWorldPosition - cameraPosition );\n\t\t}\n\t\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvec3 reflectVec = reflect( cameraToFrag, worldNormal );\n\t\t#else\n\t\t\tvec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );\n\t\t#endif\n\t#else\n\t\tvec3 reflectVec = vReflect;\n\t#endif\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tvec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\tvec4 envColor = textureCubeUV( envMap, reflectVec, 0.0 );\n\t#else\n\t\tvec4 envColor = vec4( 0.0 );\n\t#endif\n\t#ifndef ENVMAP_TYPE_CUBE_UV\n\t\tenvColor = envMapTexelToLinear( envColor );\n\t#endif\n\t#ifdef ENVMAP_BLENDING_MULTIPLY\n\t\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_MIX )\n\t\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_ADD )\n\t\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\n\t#endif\n#endif",envmap_common_pars_fragment:"#ifdef USE_ENVMAP\n\tuniform float envMapIntensity;\n\tuniform float flipEnvMap;\n\tuniform int maxMipLevel;\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tuniform samplerCube envMap;\n\t#else\n\t\tuniform sampler2D envMap;\n\t#endif\n\t\n#endif",envmap_pars_fragment:"#ifdef USE_ENVMAP\n\tuniform float reflectivity;\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\n\t\t#define ENV_WORLDPOS\n\t#endif\n\t#ifdef ENV_WORLDPOS\n\t\tvarying vec3 vWorldPosition;\n\t\tuniform float refractionRatio;\n\t#else\n\t\tvarying vec3 vReflect;\n\t#endif\n#endif",envmap_pars_vertex:"#ifdef USE_ENVMAP\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) ||defined( PHONG )\n\t\t#define ENV_WORLDPOS\n\t#endif\n\t#ifdef ENV_WORLDPOS\n\t\t\n\t\tvarying vec3 vWorldPosition;\n\t#else\n\t\tvarying vec3 vReflect;\n\t\tuniform float refractionRatio;\n\t#endif\n#endif",envmap_physical_pars_fragment:"#if defined( USE_ENVMAP )\n\t#ifdef ENVMAP_MODE_REFRACTION\n\t\tuniform float refractionRatio;\n\t#endif\n\tvec3 getLightProbeIndirectIrradiance( const in GeometricContext geometry, const in int maxMIPLevel ) {\n\t\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\n\t\t#ifdef ENVMAP_TYPE_CUBE\n\t\t\tvec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor = textureCubeLodEXT( envMap, queryVec, float( maxMIPLevel ) );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor = textureCube( envMap, queryVec, float( maxMIPLevel ) );\n\t\t\t#endif\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\t\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\t\tvec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );\n\t\t#else\n\t\t\tvec4 envMapColor = vec4( 0.0 );\n\t\t#endif\n\t\treturn PI * envMapColor.rgb * envMapIntensity;\n\t}\n\tfloat getSpecularMIPLevel( const in float roughness, const in int maxMIPLevel ) {\n\t\tfloat maxMIPLevelScalar = float( maxMIPLevel );\n\t\tfloat sigma = PI * roughness * roughness / ( 1.0 + roughness );\n\t\tfloat desiredMIPLevel = maxMIPLevelScalar + log2( sigma );\n\t\treturn clamp( desiredMIPLevel, 0.0, maxMIPLevelScalar );\n\t}\n\tvec3 getLightProbeIndirectRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in int maxMIPLevel ) {\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvec3 reflectVec = reflect( -viewDir, normal );\n\t\t\treflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );\n\t\t#else\n\t\t\tvec3 reflectVec = refract( -viewDir, normal, refractionRatio );\n\t\t#endif\n\t\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\n\t\tfloat specularMIPLevel = getSpecularMIPLevel( roughness, maxMIPLevel );\n\t\t#ifdef ENVMAP_TYPE_CUBE\n\t\t\tvec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor = textureCubeLodEXT( envMap, queryReflectVec, specularMIPLevel );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor = textureCube( envMap, queryReflectVec, specularMIPLevel );\n\t\t\t#endif\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\t\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\t\tvec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );\n\t\t#endif\n\t\treturn envMapColor.rgb * envMapIntensity;\n\t}\n#endif",envmap_vertex:"#ifdef USE_ENVMAP\n\t#ifdef ENV_WORLDPOS\n\t\tvWorldPosition = worldPosition.xyz;\n\t#else\n\t\tvec3 cameraToVertex;\n\t\tif ( isOrthographic ) {\n\t\t\tcameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n\t\t} else {\n\t\t\tcameraToVertex = normalize( worldPosition.xyz - cameraPosition );\n\t\t}\n\t\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvReflect = reflect( cameraToVertex, worldNormal );\n\t\t#else\n\t\t\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\n\t\t#endif\n\t#endif\n#endif",fog_vertex:"#ifdef USE_FOG\n\tfogDepth = - mvPosition.z;\n#endif",fog_pars_vertex:"#ifdef USE_FOG\n\tvarying float fogDepth;\n#endif",fog_fragment:"#ifdef USE_FOG\n\t#ifdef FOG_EXP2\n\t\tfloat fogFactor = 1.0 - exp( - fogDensity * fogDensity * fogDepth * fogDepth );\n\t#else\n\t\tfloat fogFactor = smoothstep( fogNear, fogFar, fogDepth );\n\t#endif\n\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\n#endif",fog_pars_fragment:"#ifdef USE_FOG\n\tuniform vec3 fogColor;\n\tvarying float fogDepth;\n\t#ifdef FOG_EXP2\n\t\tuniform float fogDensity;\n\t#else\n\t\tuniform float fogNear;\n\t\tuniform float fogFar;\n\t#endif\n#endif",gradientmap_pars_fragment:"#ifdef USE_GRADIENTMAP\n\tuniform sampler2D gradientMap;\n#endif\nvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\n\tfloat dotNL = dot( normal, lightDirection );\n\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\n\t#ifdef USE_GRADIENTMAP\n\t\treturn texture2D( gradientMap, coord ).rgb;\n\t#else\n\t\treturn ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );\n\t#endif\n}",lightmap_fragment:"#ifdef USE_LIGHTMAP\n\tvec4 lightMapTexel= texture2D( lightMap, vUv2 );\n\treflectedLight.indirectDiffuse += PI * lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\n#endif",lightmap_pars_fragment:"#ifdef USE_LIGHTMAP\n\tuniform sampler2D lightMap;\n\tuniform float lightMapIntensity;\n#endif",lights_lambert_vertex:"vec3 diffuse = vec3( 1.0 );\nGeometricContext geometry;\ngeometry.position = mvPosition.xyz;\ngeometry.normal = normalize( transformedNormal );\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( -mvPosition.xyz );\nGeometricContext backGeometry;\nbackGeometry.position = geometry.position;\nbackGeometry.normal = -geometry.normal;\nbackGeometry.viewDir = geometry.viewDir;\nvLightFront = vec3( 0.0 );\nvIndirectFront = vec3( 0.0 );\n#ifdef DOUBLE_SIDED\n\tvLightBack = vec3( 0.0 );\n\tvIndirectBack = vec3( 0.0 );\n#endif\nIncidentLight directLight;\nfloat dotNL;\nvec3 directLightColor_Diffuse;\nvIndirectFront += getAmbientLightIrradiance( ambientLightColor );\nvIndirectFront += getLightProbeIrradiance( lightProbe, geometry );\n#ifdef DOUBLE_SIDED\n\tvIndirectBack += getAmbientLightIrradiance( ambientLightColor );\n\tvIndirectBack += getLightProbeIrradiance( lightProbe, backGeometry );\n#endif\n#if NUM_POINT_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tgetPointDirectLightIrradiance( pointLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if NUM_SPOT_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tgetSpotDirectLightIrradiance( spotLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if NUM_DIR_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tgetDirectionalDirectLightIrradiance( directionalLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if NUM_HEMI_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\t\tvIndirectFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvIndirectBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry );\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif",lights_pars_begin:"uniform bool receiveShadow;\nuniform vec3 ambientLightColor;\nuniform vec3 lightProbe[ 9 ];\nvec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {\n\tfloat x = normal.x, y = normal.y, z = normal.z;\n\tvec3 result = shCoefficients[ 0 ] * 0.886227;\n\tresult += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;\n\tresult += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;\n\tresult += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;\n\tresult += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;\n\tresult += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;\n\tresult += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );\n\tresult += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;\n\tresult += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );\n\treturn result;\n}\nvec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in GeometricContext geometry ) {\n\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\n\tvec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );\n\treturn irradiance;\n}\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\n\tvec3 irradiance = ambientLightColor;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\treturn irradiance;\n}\n#if NUM_DIR_LIGHTS > 0\n\tstruct DirectionalLight {\n\t\tvec3 direction;\n\t\tvec3 color;\n\t};\n\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\n\tvoid getDirectionalDirectLightIrradiance( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight directLight ) {\n\t\tdirectLight.color = directionalLight.color;\n\t\tdirectLight.direction = directionalLight.direction;\n\t\tdirectLight.visible = true;\n\t}\n#endif\n#if NUM_POINT_LIGHTS > 0\n\tstruct PointLight {\n\t\tvec3 position;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t};\n\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\n\tvoid getPointDirectLightIrradiance( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight directLight ) {\n\t\tvec3 lVector = pointLight.position - geometry.position;\n\t\tdirectLight.direction = normalize( lVector );\n\t\tfloat lightDistance = length( lVector );\n\t\tdirectLight.color = pointLight.color;\n\t\tdirectLight.color *= punctualLightIntensityToIrradianceFactor( lightDistance, pointLight.distance, pointLight.decay );\n\t\tdirectLight.visible = ( directLight.color != vec3( 0.0 ) );\n\t}\n#endif\n#if NUM_SPOT_LIGHTS > 0\n\tstruct SpotLight {\n\t\tvec3 position;\n\t\tvec3 direction;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t\tfloat coneCos;\n\t\tfloat penumbraCos;\n\t};\n\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\n\tvoid getSpotDirectLightIrradiance( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight directLight ) {\n\t\tvec3 lVector = spotLight.position - geometry.position;\n\t\tdirectLight.direction = normalize( lVector );\n\t\tfloat lightDistance = length( lVector );\n\t\tfloat angleCos = dot( directLight.direction, spotLight.direction );\n\t\tif ( angleCos > spotLight.coneCos ) {\n\t\t\tfloat spotEffect = smoothstep( spotLight.coneCos, spotLight.penumbraCos, angleCos );\n\t\t\tdirectLight.color = spotLight.color;\n\t\t\tdirectLight.color *= spotEffect * punctualLightIntensityToIrradianceFactor( lightDistance, spotLight.distance, spotLight.decay );\n\t\t\tdirectLight.visible = true;\n\t\t} else {\n\t\t\tdirectLight.color = vec3( 0.0 );\n\t\t\tdirectLight.visible = false;\n\t\t}\n\t}\n#endif\n#if NUM_RECT_AREA_LIGHTS > 0\n\tstruct RectAreaLight {\n\t\tvec3 color;\n\t\tvec3 position;\n\t\tvec3 halfWidth;\n\t\tvec3 halfHeight;\n\t};\n\tuniform sampler2D ltc_1;\tuniform sampler2D ltc_2;\n\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\n#endif\n#if NUM_HEMI_LIGHTS > 0\n\tstruct HemisphereLight {\n\t\tvec3 direction;\n\t\tvec3 skyColor;\n\t\tvec3 groundColor;\n\t};\n\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\n\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in GeometricContext geometry ) {\n\t\tfloat dotNL = dot( geometry.normal, hemiLight.direction );\n\t\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\n\t\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\t\tirradiance *= PI;\n\t\t#endif\n\t\treturn irradiance;\n\t}\n#endif",lights_toon_fragment:"ToonMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;",lights_toon_pars_fragment:"varying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\nstruct ToonMaterial {\n\tvec3 diffuseColor;\n};\nvoid RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n\tvec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_Toon\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Toon\n#define Material_LightProbeLOD( material )\t(0)",lights_phong_fragment:"BlinnPhongMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;\nmaterial.specularColor = specular;\nmaterial.specularShininess = shininess;\nmaterial.specularStrength = specularStrength;",lights_phong_pars_fragment:"varying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\nstruct BlinnPhongMaterial {\n\tvec3 diffuseColor;\n\tvec3 specularColor;\n\tfloat specularShininess;\n\tfloat specularStrength;\n};\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n\treflectedLight.directSpecular += irradiance * BRDF_Specular_BlinnPhong( directLight, geometry, material.specularColor, material.specularShininess ) * material.specularStrength;\n}\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_BlinnPhong\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_BlinnPhong\n#define Material_LightProbeLOD( material )\t(0)",lights_physical_fragment:"PhysicalMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\nvec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );\nfloat geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );\nmaterial.specularRoughness = max( roughnessFactor, 0.0525 );material.specularRoughness += geometryRoughness;\nmaterial.specularRoughness = min( material.specularRoughness, 1.0 );\n#ifdef REFLECTIVITY\n\tmaterial.specularColor = mix( vec3( MAXIMUM_SPECULAR_COEFFICIENT * pow2( reflectivity ) ), diffuseColor.rgb, metalnessFactor );\n#else\n\tmaterial.specularColor = mix( vec3( DEFAULT_SPECULAR_COEFFICIENT ), diffuseColor.rgb, metalnessFactor );\n#endif\n#ifdef CLEARCOAT\n\tmaterial.clearcoat = clearcoat;\n\tmaterial.clearcoatRoughness = clearcoatRoughness;\n\t#ifdef USE_CLEARCOATMAP\n\t\tmaterial.clearcoat *= texture2D( clearcoatMap, vUv ).x;\n\t#endif\n\t#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\t\tmaterial.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vUv ).y;\n\t#endif\n\tmaterial.clearcoat = saturate( material.clearcoat );\tmaterial.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );\n\tmaterial.clearcoatRoughness += geometryRoughness;\n\tmaterial.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );\n#endif\n#ifdef USE_SHEEN\n\tmaterial.sheenColor = sheen;\n#endif",lights_physical_pars_fragment:"struct PhysicalMaterial {\n\tvec3 diffuseColor;\n\tfloat specularRoughness;\n\tvec3 specularColor;\n#ifdef CLEARCOAT\n\tfloat clearcoat;\n\tfloat clearcoatRoughness;\n#endif\n#ifdef USE_SHEEN\n\tvec3 sheenColor;\n#endif\n};\n#define MAXIMUM_SPECULAR_COEFFICIENT 0.16\n#define DEFAULT_SPECULAR_COEFFICIENT 0.04\nfloat clearcoatDHRApprox( const in float roughness, const in float dotNL ) {\n\treturn DEFAULT_SPECULAR_COEFFICIENT + ( 1.0 - DEFAULT_SPECULAR_COEFFICIENT ) * ( pow( 1.0 - dotNL, 5.0 ) * pow( 1.0 - roughness, 2.0 ) );\n}\n#if NUM_RECT_AREA_LIGHTS > 0\n\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\t\tvec3 normal = geometry.normal;\n\t\tvec3 viewDir = geometry.viewDir;\n\t\tvec3 position = geometry.position;\n\t\tvec3 lightPos = rectAreaLight.position;\n\t\tvec3 halfWidth = rectAreaLight.halfWidth;\n\t\tvec3 halfHeight = rectAreaLight.halfHeight;\n\t\tvec3 lightColor = rectAreaLight.color;\n\t\tfloat roughness = material.specularRoughness;\n\t\tvec3 rectCoords[ 4 ];\n\t\trectCoords[ 0 ] = lightPos + halfWidth - halfHeight;\t\trectCoords[ 1 ] = lightPos - halfWidth - halfHeight;\n\t\trectCoords[ 2 ] = lightPos - halfWidth + halfHeight;\n\t\trectCoords[ 3 ] = lightPos + halfWidth + halfHeight;\n\t\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\n\t\tvec4 t1 = texture2D( ltc_1, uv );\n\t\tvec4 t2 = texture2D( ltc_2, uv );\n\t\tmat3 mInv = mat3(\n\t\t\tvec3( t1.x, 0, t1.y ),\n\t\t\tvec3(    0, 1,    0 ),\n\t\t\tvec3( t1.z, 0, t1.w )\n\t\t);\n\t\tvec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\n\t\treflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\n\t\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\n\t}\n#endif\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\t#ifdef CLEARCOAT\n\t\tfloat ccDotNL = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );\n\t\tvec3 ccIrradiance = ccDotNL * directLight.color;\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\t\tccIrradiance *= PI;\n\t\t#endif\n\t\tfloat clearcoatDHR = material.clearcoat * clearcoatDHRApprox( material.clearcoatRoughness, ccDotNL );\n\t\treflectedLight.directSpecular += ccIrradiance * material.clearcoat * BRDF_Specular_GGX( directLight, geometry.viewDir, geometry.clearcoatNormal, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearcoatRoughness );\n\t#else\n\t\tfloat clearcoatDHR = 0.0;\n\t#endif\n\t#ifdef USE_SHEEN\n\t\treflectedLight.directSpecular += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Specular_Sheen(\n\t\t\tmaterial.specularRoughness,\n\t\t\tdirectLight.direction,\n\t\t\tgeometry,\n\t\t\tmaterial.sheenColor\n\t\t);\n\t#else\n\t\treflectedLight.directSpecular += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Specular_GGX( directLight, geometry.viewDir, geometry.normal, material.specularColor, material.specularRoughness);\n\t#endif\n\treflectedLight.directDiffuse += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {\n\t#ifdef CLEARCOAT\n\t\tfloat ccDotNV = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );\n\t\treflectedLight.indirectSpecular += clearcoatRadiance * material.clearcoat * BRDF_Specular_GGX_Environment( geometry.viewDir, geometry.clearcoatNormal, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearcoatRoughness );\n\t\tfloat ccDotNL = ccDotNV;\n\t\tfloat clearcoatDHR = material.clearcoat * clearcoatDHRApprox( material.clearcoatRoughness, ccDotNL );\n\t#else\n\t\tfloat clearcoatDHR = 0.0;\n\t#endif\n\tfloat clearcoatInv = 1.0 - clearcoatDHR;\n\tvec3 singleScattering = vec3( 0.0 );\n\tvec3 multiScattering = vec3( 0.0 );\n\tvec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;\n\tBRDF_Specular_Multiscattering_Environment( geometry, material.specularColor, material.specularRoughness, singleScattering, multiScattering );\n\tvec3 diffuse = material.diffuseColor * ( 1.0 - ( singleScattering + multiScattering ) );\n\treflectedLight.indirectSpecular += clearcoatInv * radiance * singleScattering;\n\treflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;\n\treflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;\n}\n#define RE_Direct\t\t\t\tRE_Direct_Physical\n#define RE_Direct_RectArea\t\tRE_Direct_RectArea_Physical\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Physical\n#define RE_IndirectSpecular\t\tRE_IndirectSpecular_Physical\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\n\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\n}",lights_fragment_begin:"\nGeometricContext geometry;\ngeometry.position = - vViewPosition;\ngeometry.normal = normal;\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );\n#ifdef CLEARCOAT\n\tgeometry.clearcoatNormal = clearcoatNormal;\n#endif\nIncidentLight directLight;\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\n\tPointLight pointLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0\n\tPointLightShadow pointLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tpointLight = pointLights[ i ];\n\t\tgetPointDirectLightIrradiance( pointLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )\n\t\tpointLightShadow = pointLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\n\tSpotLight spotLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0\n\tSpotLightShadow spotLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tspotLight = spotLights[ i ];\n\t\tgetSpotDirectLightIrradiance( spotLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\n\t\tspotLightShadow = spotLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\n\tDirectionalLight directionalLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0\n\tDirectionalLightShadow directionalLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tdirectionalLight = directionalLights[ i ];\n\t\tgetDirectionalDirectLightIrradiance( directionalLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )\n\t\tdirectionalLightShadow = directionalLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\n\tRectAreaLight rectAreaLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\n\t\trectAreaLight = rectAreaLights[ i ];\n\t\tRE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if defined( RE_IndirectDiffuse )\n\tvec3 iblIrradiance = vec3( 0.0 );\n\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\n\tirradiance += getLightProbeIrradiance( lightProbe, geometry );\n\t#if ( NUM_HEMI_LIGHTS > 0 )\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\t\t\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\n\t\t}\n\t\t#pragma unroll_loop_end\n\t#endif\n#endif\n#if defined( RE_IndirectSpecular )\n\tvec3 radiance = vec3( 0.0 );\n\tvec3 clearcoatRadiance = vec3( 0.0 );\n#endif",lights_fragment_maps:"#if defined( RE_IndirectDiffuse )\n\t#ifdef USE_LIGHTMAP\n\t\tvec4 lightMapTexel= texture2D( lightMap, vUv2 );\n\t\tvec3 lightMapIrradiance = lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\t\tlightMapIrradiance *= PI;\n\t\t#endif\n\t\tirradiance += lightMapIrradiance;\n\t#endif\n\t#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )\n\t\tiblIrradiance += getLightProbeIndirectIrradiance( geometry, maxMipLevel );\n\t#endif\n#endif\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\n\tradiance += getLightProbeIndirectRadiance( geometry.viewDir, geometry.normal, material.specularRoughness, maxMipLevel );\n\t#ifdef CLEARCOAT\n\t\tclearcoatRadiance += getLightProbeIndirectRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness, maxMipLevel );\n\t#endif\n#endif",lights_fragment_end:"#if defined( RE_IndirectDiffuse )\n\tRE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\n#endif\n#if defined( RE_IndirectSpecular )\n\tRE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );\n#endif",logdepthbuf_fragment:"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n\tgl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;\n#endif",logdepthbuf_pars_fragment:"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n\tuniform float logDepthBufFC;\n\tvarying float vFragDepth;\n\tvarying float vIsPerspective;\n#endif",logdepthbuf_pars_vertex:"#ifdef USE_LOGDEPTHBUF\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvarying float vFragDepth;\n\t\tvarying float vIsPerspective;\n\t#else\n\t\tuniform float logDepthBufFC;\n\t#endif\n#endif",logdepthbuf_vertex:"#ifdef USE_LOGDEPTHBUF\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvFragDepth = 1.0 + gl_Position.w;\n\t\tvIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );\n\t#else\n\t\tif ( isPerspectiveMatrix( projectionMatrix ) ) {\n\t\t\tgl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;\n\t\t\tgl_Position.z *= gl_Position.w;\n\t\t}\n\t#endif\n#endif",map_fragment:"#ifdef USE_MAP\n\tvec4 texelColor = texture2D( map, vUv );\n\ttexelColor = mapTexelToLinear( texelColor );\n\tdiffuseColor *= texelColor;\n#endif",map_pars_fragment:"#ifdef USE_MAP\n\tuniform sampler2D map;\n#endif",map_particle_fragment:"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n\tvec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\n#endif\n#ifdef USE_MAP\n\tvec4 mapTexel = texture2D( map, uv );\n\tdiffuseColor *= mapTexelToLinear( mapTexel );\n#endif\n#ifdef USE_ALPHAMAP\n\tdiffuseColor.a *= texture2D( alphaMap, uv ).g;\n#endif",map_particle_pars_fragment:"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n\tuniform mat3 uvTransform;\n#endif\n#ifdef USE_MAP\n\tuniform sampler2D map;\n#endif\n#ifdef USE_ALPHAMAP\n\tuniform sampler2D alphaMap;\n#endif",metalnessmap_fragment:"float metalnessFactor = metalness;\n#ifdef USE_METALNESSMAP\n\tvec4 texelMetalness = texture2D( metalnessMap, vUv );\n\tmetalnessFactor *= texelMetalness.b;\n#endif",metalnessmap_pars_fragment:"#ifdef USE_METALNESSMAP\n\tuniform sampler2D metalnessMap;\n#endif",morphnormal_vertex:"#ifdef USE_MORPHNORMALS\n\tobjectNormal *= morphTargetBaseInfluence;\n\tobjectNormal += morphNormal0 * morphTargetInfluences[ 0 ];\n\tobjectNormal += morphNormal1 * morphTargetInfluences[ 1 ];\n\tobjectNormal += morphNormal2 * morphTargetInfluences[ 2 ];\n\tobjectNormal += morphNormal3 * morphTargetInfluences[ 3 ];\n#endif",morphtarget_pars_vertex:"#ifdef USE_MORPHTARGETS\n\tuniform float morphTargetBaseInfluence;\n\t#ifndef USE_MORPHNORMALS\n\t\tuniform float morphTargetInfluences[ 8 ];\n\t#else\n\t\tuniform float morphTargetInfluences[ 4 ];\n\t#endif\n#endif",morphtarget_vertex:"#ifdef USE_MORPHTARGETS\n\ttransformed *= morphTargetBaseInfluence;\n\ttransformed += morphTarget0 * morphTargetInfluences[ 0 ];\n\ttransformed += morphTarget1 * morphTargetInfluences[ 1 ];\n\ttransformed += morphTarget2 * morphTargetInfluences[ 2 ];\n\ttransformed += morphTarget3 * morphTargetInfluences[ 3 ];\n\t#ifndef USE_MORPHNORMALS\n\t\ttransformed += morphTarget4 * morphTargetInfluences[ 4 ];\n\t\ttransformed += morphTarget5 * morphTargetInfluences[ 5 ];\n\t\ttransformed += morphTarget6 * morphTargetInfluences[ 6 ];\n\t\ttransformed += morphTarget7 * morphTargetInfluences[ 7 ];\n\t#endif\n#endif",normal_fragment_begin:"#ifdef FLAT_SHADED\n\tvec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );\n\tvec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );\n\tvec3 normal = normalize( cross( fdx, fdy ) );\n#else\n\tvec3 normal = normalize( vNormal );\n\t#ifdef DOUBLE_SIDED\n\t\tnormal = normal * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\t#endif\n\t#ifdef USE_TANGENT\n\t\tvec3 tangent = normalize( vTangent );\n\t\tvec3 bitangent = normalize( vBitangent );\n\t\t#ifdef DOUBLE_SIDED\n\t\t\ttangent = tangent * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\t\t\tbitangent = bitangent * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\t\t#endif\n\t\t#if defined( TANGENTSPACE_NORMALMAP ) || defined( USE_CLEARCOAT_NORMALMAP )\n\t\t\tmat3 vTBN = mat3( tangent, bitangent, normal );\n\t\t#endif\n\t#endif\n#endif\nvec3 geometryNormal = normal;",normal_fragment_maps:"#ifdef OBJECTSPACE_NORMALMAP\n\tnormal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n\t#ifdef FLIP_SIDED\n\t\tnormal = - normal;\n\t#endif\n\t#ifdef DOUBLE_SIDED\n\t\tnormal = normal * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\t#endif\n\tnormal = normalize( normalMatrix * normal );\n#elif defined( TANGENTSPACE_NORMALMAP )\n\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n\tmapN.xy *= normalScale;\n\t#ifdef USE_TANGENT\n\t\tnormal = normalize( vTBN * mapN );\n\t#else\n\t\tnormal = perturbNormal2Arb( -vViewPosition, normal, mapN );\n\t#endif\n#elif defined( USE_BUMPMAP )\n\tnormal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\n#endif",normalmap_pars_fragment:"#ifdef USE_NORMALMAP\n\tuniform sampler2D normalMap;\n\tuniform vec2 normalScale;\n#endif\n#ifdef OBJECTSPACE_NORMALMAP\n\tuniform mat3 normalMatrix;\n#endif\n#if ! defined ( USE_TANGENT ) && ( defined ( TANGENTSPACE_NORMALMAP ) || defined ( USE_CLEARCOAT_NORMALMAP ) )\n\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm, vec3 mapN ) {\n\t\tvec3 q0 = vec3( dFdx( eye_pos.x ), dFdx( eye_pos.y ), dFdx( eye_pos.z ) );\n\t\tvec3 q1 = vec3( dFdy( eye_pos.x ), dFdy( eye_pos.y ), dFdy( eye_pos.z ) );\n\t\tvec2 st0 = dFdx( vUv.st );\n\t\tvec2 st1 = dFdy( vUv.st );\n\t\tfloat scale = sign( st1.t * st0.s - st0.t * st1.s );\n\t\tvec3 S = normalize( ( q0 * st1.t - q1 * st0.t ) * scale );\n\t\tvec3 T = normalize( ( - q0 * st1.s + q1 * st0.s ) * scale );\n\t\tvec3 N = normalize( surf_norm );\n\t\tmat3 tsn = mat3( S, T, N );\n\t\tmapN.xy *= ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\t\treturn normalize( tsn * mapN );\n\t}\n#endif",clearcoat_normal_fragment_begin:"#ifdef CLEARCOAT\n\tvec3 clearcoatNormal = geometryNormal;\n#endif",clearcoat_normal_fragment_maps:"#ifdef USE_CLEARCOAT_NORMALMAP\n\tvec3 clearcoatMapN = texture2D( clearcoatNormalMap, vUv ).xyz * 2.0 - 1.0;\n\tclearcoatMapN.xy *= clearcoatNormalScale;\n\t#ifdef USE_TANGENT\n\t\tclearcoatNormal = normalize( vTBN * clearcoatMapN );\n\t#else\n\t\tclearcoatNormal = perturbNormal2Arb( - vViewPosition, clearcoatNormal, clearcoatMapN );\n\t#endif\n#endif",clearcoat_pars_fragment:"#ifdef USE_CLEARCOATMAP\n\tuniform sampler2D clearcoatMap;\n#endif\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\tuniform sampler2D clearcoatRoughnessMap;\n#endif\n#ifdef USE_CLEARCOAT_NORMALMAP\n\tuniform sampler2D clearcoatNormalMap;\n\tuniform vec2 clearcoatNormalScale;\n#endif",packing:"vec3 packNormalToRGB( const in vec3 normal ) {\n\treturn normalize( normal ) * 0.5 + 0.5;\n}\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\n\treturn 2.0 * rgb.xyz - 1.0;\n}\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\nconst float ShiftRight8 = 1. / 256.;\nvec4 packDepthToRGBA( const in float v ) {\n\tvec4 r = vec4( fract( v * PackFactors ), v );\n\tr.yzw -= r.xyz * ShiftRight8;\treturn r * PackUpscale;\n}\nfloat unpackRGBAToDepth( const in vec4 v ) {\n\treturn dot( v, UnpackFactors );\n}\nvec4 pack2HalfToRGBA( vec2 v ) {\n\tvec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ));\n\treturn vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w);\n}\nvec2 unpackRGBATo2Half( vec4 v ) {\n\treturn vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );\n}\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn ( viewZ + near ) / ( near - far );\n}\nfloat orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\n\treturn linearClipZ * ( near - far ) - near;\n}\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn (( near + viewZ ) * far ) / (( far - near ) * viewZ );\n}\nfloat perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\n\treturn ( near * far ) / ( ( far - near ) * invClipZ - far );\n}",premultiplied_alpha_fragment:"#ifdef PREMULTIPLIED_ALPHA\n\tgl_FragColor.rgb *= gl_FragColor.a;\n#endif",project_vertex:"vec4 mvPosition = vec4( transformed, 1.0 );\n#ifdef USE_INSTANCING\n\tmvPosition = instanceMatrix * mvPosition;\n#endif\nmvPosition = modelViewMatrix * mvPosition;\ngl_Position = projectionMatrix * mvPosition;",dithering_fragment:"#ifdef DITHERING\n\tgl_FragColor.rgb = dithering( gl_FragColor.rgb );\n#endif",dithering_pars_fragment:"#ifdef DITHERING\n\tvec3 dithering( vec3 color ) {\n\t\tfloat grid_position = rand( gl_FragCoord.xy );\n\t\tvec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\n\t\tdither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\n\t\treturn color + dither_shift_RGB;\n\t}\n#endif",roughnessmap_fragment:"float roughnessFactor = roughness;\n#ifdef USE_ROUGHNESSMAP\n\tvec4 texelRoughness = texture2D( roughnessMap, vUv );\n\troughnessFactor *= texelRoughness.g;\n#endif",roughnessmap_pars_fragment:"#ifdef USE_ROUGHNESSMAP\n\tuniform sampler2D roughnessMap;\n#endif",shadowmap_pars_fragment:"#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tstruct DirectionalLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tstruct SpotLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tstruct PointLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t\tfloat shadowCameraNear;\n\t\t\tfloat shadowCameraFar;\n\t\t};\n\t\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n\t#endif\n\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\n\t\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\n\t}\n\tvec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {\n\t\treturn unpackRGBATo2Half( texture2D( shadow, uv ) );\n\t}\n\tfloat VSMShadow (sampler2D shadow, vec2 uv, float compare ){\n\t\tfloat occlusion = 1.0;\n\t\tvec2 distribution = texture2DDistribution( shadow, uv );\n\t\tfloat hard_shadow = step( compare , distribution.x );\n\t\tif (hard_shadow != 1.0 ) {\n\t\t\tfloat distance = compare - distribution.x ;\n\t\t\tfloat variance = max( 0.00000, distribution.y * distribution.y );\n\t\t\tfloat softness_probability = variance / (variance + distance * distance );\t\t\tsoftness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );\t\t\tocclusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );\n\t\t}\n\t\treturn occlusion;\n\t}\n\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\n\t\tfloat shadow = 1.0;\n\t\tshadowCoord.xyz /= shadowCoord.w;\n\t\tshadowCoord.z += shadowBias;\n\t\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\n\t\tbool inFrustum = all( inFrustumVec );\n\t\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\n\t\tbool frustumTest = all( frustumTestVec );\n\t\tif ( frustumTest ) {\n\t\t#if defined( SHADOWMAP_TYPE_PCF )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx0 = - texelSize.x * shadowRadius;\n\t\t\tfloat dy0 = - texelSize.y * shadowRadius;\n\t\t\tfloat dx1 = + texelSize.x * shadowRadius;\n\t\t\tfloat dy1 = + texelSize.y * shadowRadius;\n\t\t\tfloat dx2 = dx0 / 2.0;\n\t\t\tfloat dy2 = dy0 / 2.0;\n\t\t\tfloat dx3 = dx1 / 2.0;\n\t\t\tfloat dy3 = dy1 / 2.0;\n\t\t\tshadow = (\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\n\t\t\t) * ( 1.0 / 17.0 );\n\t\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx = texelSize.x;\n\t\t\tfloat dy = texelSize.y;\n\t\t\tvec2 uv = shadowCoord.xy;\n\t\t\tvec2 f = fract( uv * shadowMapSize + 0.5 );\n\t\t\tuv -= f * texelSize;\n\t\t\tshadow = (\n\t\t\t\ttexture2DCompare( shadowMap, uv, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),\n\t\t\t\t\t f.x ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),\n\t\t\t\t\t f.x ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t f.y ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t f.y ) +\n\t\t\t\tmix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ), \n\t\t\t\t\t\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),\n\t\t\t\t\t\t  f.x ),\n\t\t\t\t\t mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ), \n\t\t\t\t\t\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t\t  f.x ),\n\t\t\t\t\t f.y )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#elif defined( SHADOWMAP_TYPE_VSM )\n\t\t\tshadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );\n\t\t#else\n\t\t\tshadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\n\t\t#endif\n\t\t}\n\t\treturn shadow;\n\t}\n\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\n\t\tvec3 absV = abs( v );\n\t\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\n\t\tabsV *= scaleToCube;\n\t\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\n\t\tvec2 planar = v.xy;\n\t\tfloat almostATexel = 1.5 * texelSizeY;\n\t\tfloat almostOne = 1.0 - almostATexel;\n\t\tif ( absV.z >= almostOne ) {\n\t\t\tif ( v.z > 0.0 )\n\t\t\t\tplanar.x = 4.0 - v.x;\n\t\t} else if ( absV.x >= almostOne ) {\n\t\t\tfloat signX = sign( v.x );\n\t\t\tplanar.x = v.z * signX + 2.0 * signX;\n\t\t} else if ( absV.y >= almostOne ) {\n\t\t\tfloat signY = sign( v.y );\n\t\t\tplanar.x = v.x + 2.0 * signY + 2.0;\n\t\t\tplanar.y = v.z * signY - 2.0;\n\t\t}\n\t\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\n\t}\n\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\n\t\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\n\t\tvec3 lightToPosition = shadowCoord.xyz;\n\t\tfloat dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );\t\tdp += shadowBias;\n\t\tvec3 bd3D = normalize( lightToPosition );\n\t\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )\n\t\t\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\n\t\t\treturn (\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#else\n\t\t\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\n\t\t#endif\n\t}\n#endif",shadowmap_pars_vertex:"#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tstruct DirectionalLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t\tuniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tstruct SpotLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tstruct PointLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t\tfloat shadowCameraNear;\n\t\t\tfloat shadowCameraFar;\n\t\t};\n\t\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n\t#endif\n#endif",shadowmap_vertex:"#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0 || NUM_SPOT_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0\n\t\tvec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\t\tvec4 shadowWorldPosition;\n\t#endif\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );\n\t\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\n\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias, 0 );\n\t\tvSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * shadowWorldPosition;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );\n\t\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n#endif",shadowmask_pars_fragment:"float getShadowMask() {\n\tfloat shadow = 1.0;\n\t#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\tDirectionalLightShadow directionalLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n\t\tdirectionalLight = directionalLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\tSpotLightShadow spotLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\n\t\tspotLight = spotLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\tPointLightShadow pointLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n\t\tpointLight = pointLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#endif\n\treturn shadow;\n}",skinbase_vertex:"#ifdef USE_SKINNING\n\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\n\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\n\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\n\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\n#endif",skinning_pars_vertex:"#ifdef USE_SKINNING\n\tuniform mat4 bindMatrix;\n\tuniform mat4 bindMatrixInverse;\n\t#ifdef BONE_TEXTURE\n\t\tuniform highp sampler2D boneTexture;\n\t\tuniform int boneTextureSize;\n\t\tmat4 getBoneMatrix( const in float i ) {\n\t\t\tfloat j = i * 4.0;\n\t\t\tfloat x = mod( j, float( boneTextureSize ) );\n\t\t\tfloat y = floor( j / float( boneTextureSize ) );\n\t\t\tfloat dx = 1.0 / float( boneTextureSize );\n\t\t\tfloat dy = 1.0 / float( boneTextureSize );\n\t\t\ty = dy * ( y + 0.5 );\n\t\t\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\n\t\t\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\n\t\t\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\n\t\t\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\n\t\t\tmat4 bone = mat4( v1, v2, v3, v4 );\n\t\t\treturn bone;\n\t\t}\n\t#else\n\t\tuniform mat4 boneMatrices[ MAX_BONES ];\n\t\tmat4 getBoneMatrix( const in float i ) {\n\t\t\tmat4 bone = boneMatrices[ int(i) ];\n\t\t\treturn bone;\n\t\t}\n\t#endif\n#endif",skinning_vertex:"#ifdef USE_SKINNING\n\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\n\tvec4 skinned = vec4( 0.0 );\n\tskinned += boneMatX * skinVertex * skinWeight.x;\n\tskinned += boneMatY * skinVertex * skinWeight.y;\n\tskinned += boneMatZ * skinVertex * skinWeight.z;\n\tskinned += boneMatW * skinVertex * skinWeight.w;\n\ttransformed = ( bindMatrixInverse * skinned ).xyz;\n#endif",skinnormal_vertex:"#ifdef USE_SKINNING\n\tmat4 skinMatrix = mat4( 0.0 );\n\tskinMatrix += skinWeight.x * boneMatX;\n\tskinMatrix += skinWeight.y * boneMatY;\n\tskinMatrix += skinWeight.z * boneMatZ;\n\tskinMatrix += skinWeight.w * boneMatW;\n\tskinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;\n\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\n\t#ifdef USE_TANGENT\n\t\tobjectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n\t#endif\n#endif",specularmap_fragment:"float specularStrength;\n#ifdef USE_SPECULARMAP\n\tvec4 texelSpecular = texture2D( specularMap, vUv );\n\tspecularStrength = texelSpecular.r;\n#else\n\tspecularStrength = 1.0;\n#endif",specularmap_pars_fragment:"#ifdef USE_SPECULARMAP\n\tuniform sampler2D specularMap;\n#endif",tonemapping_fragment:"#if defined( TONE_MAPPING )\n\tgl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\n#endif",tonemapping_pars_fragment:"#ifndef saturate\n#define saturate(a) clamp( a, 0.0, 1.0 )\n#endif\nuniform float toneMappingExposure;\nvec3 LinearToneMapping( vec3 color ) {\n\treturn toneMappingExposure * color;\n}\nvec3 ReinhardToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\treturn saturate( color / ( vec3( 1.0 ) + color ) );\n}\nvec3 OptimizedCineonToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\tcolor = max( vec3( 0.0 ), color - 0.004 );\n\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\n}\nvec3 RRTAndODTFit( vec3 v ) {\n\tvec3 a = v * ( v + 0.0245786 ) - 0.000090537;\n\tvec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;\n\treturn a / b;\n}\nvec3 ACESFilmicToneMapping( vec3 color ) {\n\tconst mat3 ACESInputMat = mat3(\n\t\tvec3( 0.59719, 0.07600, 0.02840 ),\t\tvec3( 0.35458, 0.90834, 0.13383 ),\n\t\tvec3( 0.04823, 0.01566, 0.83777 )\n\t);\n\tconst mat3 ACESOutputMat = mat3(\n\t\tvec3(  1.60475, -0.10208, -0.00327 ),\t\tvec3( -0.53108,  1.10813, -0.07276 ),\n\t\tvec3( -0.07367, -0.00605,  1.07602 )\n\t);\n\tcolor *= toneMappingExposure / 0.6;\n\tcolor = ACESInputMat * color;\n\tcolor = RRTAndODTFit( color );\n\tcolor = ACESOutputMat * color;\n\treturn saturate( color );\n}\nvec3 CustomToneMapping( vec3 color ) { return color; }",transmissionmap_fragment:"#ifdef USE_TRANSMISSIONMAP\n\ttotalTransmission *= texture2D( transmissionMap, vUv ).r;\n#endif",transmissionmap_pars_fragment:"#ifdef USE_TRANSMISSIONMAP\n\tuniform sampler2D transmissionMap;\n#endif",uv_pars_fragment:"#if ( defined( USE_UV ) && ! defined( UVS_VERTEX_ONLY ) )\n\tvarying vec2 vUv;\n#endif",uv_pars_vertex:"#ifdef USE_UV\n\t#ifdef UVS_VERTEX_ONLY\n\t\tvec2 vUv;\n\t#else\n\t\tvarying vec2 vUv;\n\t#endif\n\tuniform mat3 uvTransform;\n#endif",uv_vertex:"#ifdef USE_UV\n\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n#endif",uv2_pars_fragment:"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tvarying vec2 vUv2;\n#endif",uv2_pars_vertex:"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tattribute vec2 uv2;\n\tvarying vec2 vUv2;\n\tuniform mat3 uv2Transform;\n#endif",uv2_vertex:"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tvUv2 = ( uv2Transform * vec3( uv2, 1 ) ).xy;\n#endif",worldpos_vertex:"#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP )\n\tvec4 worldPosition = vec4( transformed, 1.0 );\n\t#ifdef USE_INSTANCING\n\t\tworldPosition = instanceMatrix * worldPosition;\n\t#endif\n\tworldPosition = modelMatrix * worldPosition;\n#endif",background_frag:"uniform sampler2D t2D;\nvarying vec2 vUv;\nvoid main() {\n\tvec4 texColor = texture2D( t2D, vUv );\n\tgl_FragColor = mapTexelToLinear( texColor );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",background_vert:"varying vec2 vUv;\nuniform mat3 uvTransform;\nvoid main() {\n\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n\tgl_Position = vec4( position.xy, 1.0, 1.0 );\n}",cube_frag:"#include <envmap_common_pars_fragment>\nuniform float opacity;\nvarying vec3 vWorldDirection;\n#include <cube_uv_reflection_fragment>\nvoid main() {\n\tvec3 vReflect = vWorldDirection;\n\t#include <envmap_fragment>\n\tgl_FragColor = envColor;\n\tgl_FragColor.a *= opacity;\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",cube_vert:"varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\tgl_Position.z = gl_Position.w;\n}",depth_frag:"#if DEPTH_PACKING == 3200\n\tuniform float opacity;\n#endif\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#if DEPTH_PACKING == 3200\n\t\tdiffuseColor.a = opacity;\n\t#endif\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <logdepthbuf_fragment>\n\tfloat fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;\n\t#if DEPTH_PACKING == 3200\n\t\tgl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );\n\t#elif DEPTH_PACKING == 3201\n\t\tgl_FragColor = packDepthToRGBA( fragCoordZ );\n\t#endif\n}",depth_vert:"#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n\t#include <uv_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvHighPrecisionZW = gl_Position.zw;\n}",distanceRGBA_frag:"#define DISTANCE\nuniform vec3 referencePosition;\nuniform float nearDistance;\nuniform float farDistance;\nvarying vec3 vWorldPosition;\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main () {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\tfloat dist = length( vWorldPosition - referencePosition );\n\tdist = ( dist - nearDistance ) / ( farDistance - nearDistance );\n\tdist = saturate( dist );\n\tgl_FragColor = packDepthToRGBA( dist );\n}",distanceRGBA_vert:"#define DISTANCE\nvarying vec3 vWorldPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <clipping_planes_vertex>\n\tvWorldPosition = worldPosition.xyz;\n}",equirect_frag:"uniform sampler2D tEquirect;\nvarying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvec3 direction = normalize( vWorldDirection );\n\tvec2 sampleUV = equirectUv( direction );\n\tvec4 texColor = texture2D( tEquirect, sampleUV );\n\tgl_FragColor = mapTexelToLinear( texColor );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",equirect_vert:"varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n}",linedashed_frag:"uniform vec3 diffuse;\nuniform float opacity;\nuniform float dashSize;\nuniform float totalSize;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\n\t\tdiscard;\n\t}\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <color_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n}",linedashed_vert:"uniform float scale;\nattribute float lineDistance;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\tvLineDistance = scale * lineDistance;\n\t#include <color_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n}",meshbasic_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <fog_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\t#ifdef USE_LIGHTMAP\n\t\n\t\tvec4 lightMapTexel= texture2D( lightMap, vUv2 );\n\t\treflectedLight.indirectDiffuse += lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\n\t#else\n\t\treflectedLight.indirectDiffuse += vec3( 1.0 );\n\t#endif\n\t#include <aomap_fragment>\n\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\n\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\n\t#include <envmap_fragment>\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshbasic_vert:"#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_ENVMAP\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <worldpos_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <envmap_vertex>\n\t#include <fog_vertex>\n}",meshlambert_frag:"uniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\nvarying vec3 vLightFront;\nvarying vec3 vIndirectFront;\n#ifdef DOUBLE_SIDED\n\tvarying vec3 vLightBack;\n\tvarying vec3 vIndirectBack;\n#endif\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <fog_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <emissivemap_fragment>\n\t#ifdef DOUBLE_SIDED\n\t\treflectedLight.indirectDiffuse += ( gl_FrontFacing ) ? vIndirectFront : vIndirectBack;\n\t#else\n\t\treflectedLight.indirectDiffuse += vIndirectFront;\n\t#endif\n\t#include <lightmap_fragment>\n\treflectedLight.indirectDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb );\n\t#ifdef DOUBLE_SIDED\n\t\treflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;\n\t#else\n\t\treflectedLight.directDiffuse = vLightFront;\n\t#endif\n\treflectedLight.directDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb ) * getShadowMask();\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshlambert_vert:"#define LAMBERT\nvarying vec3 vLightFront;\nvarying vec3 vIndirectFront;\n#ifdef DOUBLE_SIDED\n\tvarying vec3 vLightBack;\n\tvarying vec3 vIndirectBack;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <lights_lambert_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",meshmatcap_frag:"#define MATCAP\nuniform vec3 diffuse;\nuniform float opacity;\nuniform sampler2D matcap;\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\tvec3 viewDir = normalize( vViewPosition );\n\tvec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );\n\tvec3 y = cross( viewDir, x );\n\tvec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;\n\t#ifdef USE_MATCAP\n\t\tvec4 matcapColor = texture2D( matcap, uv );\n\t\tmatcapColor = matcapTexelToLinear( matcapColor );\n\t#else\n\t\tvec4 matcapColor = vec4( 1.0 );\n\t#endif\n\tvec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshmatcap_vert:"#define MATCAP\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <color_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#ifndef FLAT_SHADED\n\t\tvNormal = normalize( transformedNormal );\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n\tvViewPosition = - mvPosition.xyz;\n}",meshtoon_frag:"#define TOON\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <gradientmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <lights_toon_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_toon_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshtoon_vert:"#define TOON\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",meshphong_frag:"#define PHONG\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <lights_phong_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_phong_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshphong_vert:"#define PHONG\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",meshphysical_frag:"#define STANDARD\n#ifdef PHYSICAL\n\t#define REFLECTIVITY\n\t#define CLEARCOAT\n\t#define TRANSMISSION\n#endif\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float roughness;\nuniform float metalness;\nuniform float opacity;\n#ifdef TRANSMISSION\n\tuniform float transmission;\n#endif\n#ifdef REFLECTIVITY\n\tuniform float reflectivity;\n#endif\n#ifdef CLEARCOAT\n\tuniform float clearcoat;\n\tuniform float clearcoatRoughness;\n#endif\n#ifdef USE_SHEEN\n\tuniform vec3 sheen;\n#endif\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <transmissionmap_pars_fragment>\n#include <bsdfs>\n#include <cube_uv_reflection_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_physical_pars_fragment>\n#include <fog_pars_fragment>\n#include <lights_pars_begin>\n#include <lights_physical_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <clearcoat_pars_fragment>\n#include <roughnessmap_pars_fragment>\n#include <metalnessmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#ifdef TRANSMISSION\n\t\tfloat totalTransmission = transmission;\n\t#endif\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <roughnessmap_fragment>\n\t#include <metalnessmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <clearcoat_normal_fragment_begin>\n\t#include <clearcoat_normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <transmissionmap_fragment>\n\t#include <lights_physical_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\t#ifdef TRANSMISSION\n\t\tdiffuseColor.a *= mix( saturate( 1. - totalTransmission + linearToRelativeLuminance( reflectedLight.directSpecular + reflectedLight.indirectSpecular ) ), 1.0, metalness );\n\t#endif\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshphysical_vert:"#define STANDARD\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n\t#ifdef USE_TANGENT\n\t\tvTangent = normalize( transformedTangent );\n\t\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\n\t#endif\n#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",normal_frag:"#define NORMAL\nuniform float opacity;\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvarying vec3 vViewPosition;\n#endif\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif\n#include <packing>\n#include <uv_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\t#include <logdepthbuf_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\tgl_FragColor = vec4( packNormalToRGB( normal ), opacity );\n}",normal_vert:"#define NORMAL\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvarying vec3 vViewPosition;\n#endif\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n\t#ifdef USE_TANGENT\n\t\tvTangent = normalize( transformedTangent );\n\t\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\n\t#endif\n#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvViewPosition = - mvPosition.xyz;\n#endif\n}",points_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <color_pars_fragment>\n#include <map_particle_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_particle_fragment>\n\t#include <color_fragment>\n\t#include <alphatest_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n}",points_vert:"uniform float size;\nuniform float scale;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <color_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <project_vertex>\n\tgl_PointSize = size;\n\t#ifdef USE_SIZEATTENUATION\n\t\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\n\t\tif ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );\n\t#endif\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <fog_vertex>\n}",shadow_frag:"uniform vec3 color;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\nvoid main() {\n\tgl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}",shadow_vert:"#include <common>\n#include <fog_pars_vertex>\n#include <shadowmap_pars_vertex>\nvoid main() {\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",sprite_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}",sprite_vert:"uniform float rotation;\nuniform vec2 center;\n#include <common>\n#include <uv_pars_vertex>\n#include <fog_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\tvec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\n\tvec2 scale;\n\tscale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );\n\tscale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );\n\t#ifndef USE_SIZEATTENUATION\n\t\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\n\t\tif ( isPerspective ) scale *= - mvPosition.z;\n\t#endif\n\tvec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;\n\tvec2 rotatedPosition;\n\trotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\n\trotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\n\tmvPosition.xy += rotatedPosition;\n\tgl_Position = projectionMatrix * mvPosition;\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n}"},ri={common:{diffuse:{value:new qe(15658734)},opacity:{value:1},map:{value:null},uvTransform:{value:new gt},uv2Transform:{value:new gt},alphaMap:{value:null}},specularmap:{specularMap:{value:null}},envmap:{envMap:{value:null},flipEnvMap:{value:-1},reflectivity:{value:1},refractionRatio:{value:.98},maxMipLevel:{value:0}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1}},emissivemap:{emissiveMap:{value:null}},bumpmap:{bumpMap:{value:null},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalScale:{value:new mt(1,1)}},displacementmap:{displacementMap:{value:null},displacementScale:{value:1},displacementBias:{value:0}},roughnessmap:{roughnessMap:{value:null}},metalnessmap:{metalnessMap:{value:null}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new qe(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotShadowMap:{value:[]},spotShadowMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new qe(15658734)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},uvTransform:{value:new gt}},sprite:{diffuse:{value:new qe(15658734)},opacity:{value:1},center:{value:new mt(.5,.5)},rotation:{value:0},map:{value:null},alphaMap:{value:null},uvTransform:{value:new gt}}},oi={basic:{uniforms:Gn([ri.common,ri.specularmap,ri.envmap,ri.aomap,ri.lightmap,ri.fog]),vertexShader:ii.meshbasic_vert,fragmentShader:ii.meshbasic_frag},lambert:{uniforms:Gn([ri.common,ri.specularmap,ri.envmap,ri.aomap,ri.lightmap,ri.emissivemap,ri.fog,ri.lights,{emissive:{value:new qe(0)}}]),vertexShader:ii.meshlambert_vert,fragmentShader:ii.meshlambert_frag},phong:{uniforms:Gn([ri.common,ri.specularmap,ri.envmap,ri.aomap,ri.lightmap,ri.emissivemap,ri.bumpmap,ri.normalmap,ri.displacementmap,ri.fog,ri.lights,{emissive:{value:new qe(0)},specular:{value:new qe(1118481)},shininess:{value:30}}]),vertexShader:ii.meshphong_vert,fragmentShader:ii.meshphong_frag},standard:{uniforms:Gn([ri.common,ri.envmap,ri.aomap,ri.lightmap,ri.emissivemap,ri.bumpmap,ri.normalmap,ri.displacementmap,ri.roughnessmap,ri.metalnessmap,ri.fog,ri.lights,{emissive:{value:new qe(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:ii.meshphysical_vert,fragmentShader:ii.meshphysical_frag},toon:{uniforms:Gn([ri.common,ri.aomap,ri.lightmap,ri.emissivemap,ri.bumpmap,ri.normalmap,ri.displacementmap,ri.gradientmap,ri.fog,ri.lights,{emissive:{value:new qe(0)}}]),vertexShader:ii.meshtoon_vert,fragmentShader:ii.meshtoon_frag},matcap:{uniforms:Gn([ri.common,ri.bumpmap,ri.normalmap,ri.displacementmap,ri.fog,{matcap:{value:null}}]),vertexShader:ii.meshmatcap_vert,fragmentShader:ii.meshmatcap_frag},points:{uniforms:Gn([ri.points,ri.fog]),vertexShader:ii.points_vert,fragmentShader:ii.points_frag},dashed:{uniforms:Gn([ri.common,ri.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:ii.linedashed_vert,fragmentShader:ii.linedashed_frag},depth:{uniforms:Gn([ri.common,ri.displacementmap]),vertexShader:ii.depth_vert,fragmentShader:ii.depth_frag},normal:{uniforms:Gn([ri.common,ri.bumpmap,ri.normalmap,ri.displacementmap,{opacity:{value:1}}]),vertexShader:ii.normal_vert,fragmentShader:ii.normal_frag},sprite:{uniforms:Gn([ri.sprite,ri.fog]),vertexShader:ii.sprite_vert,fragmentShader:ii.sprite_frag},background:{uniforms:{uvTransform:{value:new gt},t2D:{value:null}},vertexShader:ii.background_vert,fragmentShader:ii.background_frag},cube:{uniforms:Gn([ri.envmap,{opacity:{value:1}}]),vertexShader:ii.cube_vert,fragmentShader:ii.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:ii.equirect_vert,fragmentShader:ii.equirect_frag},distanceRGBA:{uniforms:Gn([ri.common,ri.displacementmap,{referencePosition:{value:new Et},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:ii.distanceRGBA_vert,fragmentShader:ii.distanceRGBA_frag},shadow:{uniforms:Gn([ri.lights,ri.fog,{color:{value:new qe(0)},opacity:{value:1}}]),vertexShader:ii.shadow_vert,fragmentShader:ii.shadow_frag}};function si(t,e,n,i,r){const o=new qe(0);let s,a,c=0,l=null,h=0,u=null;function d(t,e){n.buffers.color.setClear(t.r,t.g,t.b,e,r)}return{getClearColor:function(){return o},setClearColor:function(t,e){o.set(t),c=void 0!==e?e:1,d(o,c)},getClearAlpha:function(){return c},setClearAlpha:function(t){c=t,d(o,c)},render:function(n,r,p,f){let m=!0===r.isScene?r.background:null;m&&m.isTexture&&(m=e.get(m));const g=t.xr,v=g.getSession&&g.getSession();v&&"additive"===v.environmentBlendMode&&(m=null),null===m?d(o,c):m&&m.isColor&&(d(m,1),f=!0),(t.autoClear||f)&&t.clear(t.autoClearColor,t.autoClearDepth,t.autoClearStencil),m&&(m.isCubeTexture||m.isWebGLCubeRenderTarget||306===m.mapping)?(void 0===a&&(a=new Un(new Fn(1,1,1),new jn({name:"BackgroundCubeMaterial",uniforms:kn(oi.cube.uniforms),vertexShader:oi.cube.vertexShader,fragmentShader:oi.cube.fragmentShader,side:1,depthTest:!1,depthWrite:!1,fog:!1})),a.geometry.deleteAttribute("normal"),a.geometry.deleteAttribute("uv"),a.onBeforeRender=function(t,e,n){this.matrixWorld.copyPosition(n.matrixWorld)},Object.defineProperty(a.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),i.update(a)),m.isWebGLCubeRenderTarget&&(m=m.texture),a.material.uniforms.envMap.value=m,a.material.uniforms.flipEnvMap.value=m.isCubeTexture&&m._needsFlipEnvMap?-1:1,l===m&&h===m.version&&u===t.toneMapping||(a.material.needsUpdate=!0,l=m,h=m.version,u=t.toneMapping),n.unshift(a,a.geometry,a.material,0,0,null)):m&&m.isTexture&&(void 0===s&&(s=new Un(new ni(2,2),new jn({name:"BackgroundMaterial",uniforms:kn(oi.background.uniforms),vertexShader:oi.background.vertexShader,fragmentShader:oi.background.fragmentShader,side:0,depthTest:!1,depthWrite:!1,fog:!1})),s.geometry.deleteAttribute("normal"),Object.defineProperty(s.material,"map",{get:function(){return this.uniforms.t2D.value}}),i.update(s)),s.material.uniforms.t2D.value=m,!0===m.matrixAutoUpdate&&m.updateMatrix(),s.material.uniforms.uvTransform.value.copy(m.matrix),l===m&&h===m.version&&u===t.toneMapping||(s.material.needsUpdate=!0,l=m,h=m.version,u=t.toneMapping),n.unshift(s,s.geometry,s.material,0,0,null))}}}function ai(t,e,n,i){const r=t.getParameter(34921),o=i.isWebGL2?null:e.get("OES_vertex_array_object"),s=i.isWebGL2||null!==o,a={},c=d(null);let l=c;function h(e){return i.isWebGL2?t.bindVertexArray(e):o.bindVertexArrayOES(e)}function u(e){return i.isWebGL2?t.deleteVertexArray(e):o.deleteVertexArrayOES(e)}function d(t){const e=[],n=[],i=[];for(let t=0;t<r;t++)e[t]=0,n[t]=0,i[t]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:e,enabledAttributes:n,attributeDivisors:i,object:t,attributes:{},index:null}}function p(){const t=l.newAttributes;for(let e=0,n=t.length;e<n;e++)t[e]=0}function f(t){m(t,0)}function m(n,r){const o=l.newAttributes,s=l.enabledAttributes,a=l.attributeDivisors;if(o[n]=1,0===s[n]&&(t.enableVertexAttribArray(n),s[n]=1),a[n]!==r){(i.isWebGL2?t:e.get("ANGLE_instanced_arrays"))[i.isWebGL2?"vertexAttribDivisor":"vertexAttribDivisorANGLE"](n,r),a[n]=r}}function g(){const e=l.newAttributes,n=l.enabledAttributes;for(let i=0,r=n.length;i<r;i++)n[i]!==e[i]&&(t.disableVertexAttribArray(i),n[i]=0)}function v(e,n,r,o,s,a){!0!==i.isWebGL2||5124!==r&&5125!==r?t.vertexAttribPointer(e,n,r,o,s,a):t.vertexAttribIPointer(e,n,r,s,a)}function y(){x(),l!==c&&(l=c,h(l.object))}function x(){c.geometry=null,c.program=null,c.wireframe=!1}return{setup:function(r,c,u,y,x){let _=!1;if(s){const e=function(e,n,r){const s=!0===r.wireframe;let c=a[e.id];void 0===c&&(c={},a[e.id]=c);let l=c[n.id];void 0===l&&(l={},c[n.id]=l);let h=l[s];void 0===h&&(h=d(i.isWebGL2?t.createVertexArray():o.createVertexArrayOES()),l[s]=h);return h}(y,u,c);l!==e&&(l=e,h(l.object)),_=function(t,e){const n=l.attributes,i=t.attributes;if(Object.keys(n).length!==Object.keys(i).length)return!0;for(const t in i){const e=n[t],r=i[t];if(void 0===e)return!0;if(e.attribute!==r)return!0;if(e.data!==r.data)return!0}return l.index!==e}(y,x),_&&function(t,e){const n={},i=t.attributes;for(const t in i){const e=i[t],r={};r.attribute=e,e.data&&(r.data=e.data),n[t]=r}l.attributes=n,l.index=e}(y,x)}else{const t=!0===c.wireframe;l.geometry===y.id&&l.program===u.id&&l.wireframe===t||(l.geometry=y.id,l.program=u.id,l.wireframe=t,_=!0)}!0===r.isInstancedMesh&&(_=!0),null!==x&&n.update(x,34963),_&&(!function(r,o,s,a){if(!1===i.isWebGL2&&(r.isInstancedMesh||a.isInstancedBufferGeometry)&&null===e.get("ANGLE_instanced_arrays"))return;p();const c=a.attributes,l=s.getAttributes(),h=o.defaultAttributeValues;for(const e in l){const i=l[e];if(i>=0){const o=c[e];if(void 0!==o){const e=o.normalized,r=o.itemSize,s=n.get(o);if(void 0===s)continue;const c=s.buffer,l=s.type,h=s.bytesPerElement;if(o.isInterleavedBufferAttribute){const n=o.data,s=n.stride,u=o.offset;n&&n.isInstancedInterleavedBuffer?(m(i,n.meshPerAttribute),void 0===a._maxInstanceCount&&(a._maxInstanceCount=n.meshPerAttribute*n.count)):f(i),t.bindBuffer(34962,c),v(i,r,l,e,s*h,u*h)}else o.isInstancedBufferAttribute?(m(i,o.meshPerAttribute),void 0===a._maxInstanceCount&&(a._maxInstanceCount=o.meshPerAttribute*o.count)):f(i),t.bindBuffer(34962,c),v(i,r,l,e,0,0)}else if("instanceMatrix"===e){const e=n.get(r.instanceMatrix);if(void 0===e)continue;const o=e.buffer,s=e.type;m(i+0,1),m(i+1,1),m(i+2,1),m(i+3,1),t.bindBuffer(34962,o),t.vertexAttribPointer(i+0,4,s,!1,64,0),t.vertexAttribPointer(i+1,4,s,!1,64,16),t.vertexAttribPointer(i+2,4,s,!1,64,32),t.vertexAttribPointer(i+3,4,s,!1,64,48)}else if("instanceColor"===e){const e=n.get(r.instanceColor);if(void 0===e)continue;const o=e.buffer,s=e.type;m(i,1),t.bindBuffer(34962,o),t.vertexAttribPointer(i,3,s,!1,12,0)}else if(void 0!==h){const n=h[e];if(void 0!==n)switch(n.length){case 2:t.vertexAttrib2fv(i,n);break;case 3:t.vertexAttrib3fv(i,n);break;case 4:t.vertexAttrib4fv(i,n);break;default:t.vertexAttrib1fv(i,n)}}}}g()}(r,c,u,y),null!==x&&t.bindBuffer(34963,n.get(x).buffer))},reset:y,resetDefaultState:x,dispose:function(){y();for(const t in a){const e=a[t];for(const t in e){const n=e[t];for(const t in n)u(n[t].object),delete n[t];delete e[t]}delete a[t]}},releaseStatesOfGeometry:function(t){if(void 0===a[t.id])return;const e=a[t.id];for(const t in e){const n=e[t];for(const t in n)u(n[t].object),delete n[t];delete e[t]}delete a[t.id]},releaseStatesOfProgram:function(t){for(const e in a){const n=a[e];if(void 0===n[t.id])continue;const i=n[t.id];for(const t in i)u(i[t].object),delete i[t];delete n[t.id]}},initAttributes:p,enableAttribute:f,disableUnusedAttributes:g}}function ci(t,e,n,i){const r=i.isWebGL2;let o;this.setMode=function(t){o=t},this.render=function(e,i){t.drawArrays(o,e,i),n.update(i,o,1)},this.renderInstances=function(i,s,a){if(0===a)return;let c,l;if(r)c=t,l="drawArraysInstanced";else if(c=e.get("ANGLE_instanced_arrays"),l="drawArraysInstancedANGLE",null===c)return void console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");c[l](o,i,s,a),n.update(s,o,a)}}function li(t,e,n){let i;function r(e){if("highp"===e){if(t.getShaderPrecisionFormat(35633,36338).precision>0&&t.getShaderPrecisionFormat(35632,36338).precision>0)return"highp";e="mediump"}return"mediump"===e&&t.getShaderPrecisionFormat(35633,36337).precision>0&&t.getShaderPrecisionFormat(35632,36337).precision>0?"mediump":"lowp"}const o="undefined"!=typeof WebGL2RenderingContext&&t instanceof WebGL2RenderingContext||"undefined"!=typeof WebGL2ComputeRenderingContext&&t instanceof WebGL2ComputeRenderingContext;let s=void 0!==n.precision?n.precision:"highp";const a=r(s);a!==s&&(console.warn("THREE.WebGLRenderer:",s,"not supported, using",a,"instead."),s=a);const c=!0===n.logarithmicDepthBuffer,l=t.getParameter(34930),h=t.getParameter(35660),u=t.getParameter(3379),d=t.getParameter(34076),p=t.getParameter(34921),f=t.getParameter(36347),m=t.getParameter(36348),g=t.getParameter(36349),v=h>0,y=o||!!e.get("OES_texture_float");return{isWebGL2:o,getMaxAnisotropy:function(){if(void 0!==i)return i;const n=e.get("EXT_texture_filter_anisotropic");return i=null!==n?t.getParameter(n.MAX_TEXTURE_MAX_ANISOTROPY_EXT):0,i},getMaxPrecision:r,precision:s,logarithmicDepthBuffer:c,maxTextures:l,maxVertexTextures:h,maxTextureSize:u,maxCubemapSize:d,maxAttributes:p,maxVertexUniforms:f,maxVaryings:m,maxFragmentUniforms:g,vertexTextures:v,floatFragmentTextures:y,floatVertexTextures:v&&y,maxSamples:o?t.getParameter(36183):0}}function hi(t){const e=this;let n=null,i=0,r=!1,o=!1;const s=new Le,a=new gt,c={value:null,needsUpdate:!1};function l(){c.value!==n&&(c.value=n,c.needsUpdate=i>0),e.numPlanes=i,e.numIntersection=0}function h(t,n,i,r){const o=null!==t?t.length:0;let l=null;if(0!==o){if(l=c.value,!0!==r||null===l){const e=i+4*o,r=n.matrixWorldInverse;a.getNormalMatrix(r),(null===l||l.length<e)&&(l=new Float32Array(e));for(let e=0,n=i;e!==o;++e,n+=4)s.copy(t[e]).applyMatrix4(r,a),s.normal.toArray(l,n),l[n+3]=s.constant}c.value=l,c.needsUpdate=!0}return e.numPlanes=o,e.numIntersection=0,l}this.uniform=c,this.numPlanes=0,this.numIntersection=0,this.init=function(t,e,o){const s=0!==t.length||e||0!==i||r;return r=e,n=h(t,o,0),i=t.length,s},this.beginShadows=function(){o=!0,h(null)},this.endShadows=function(){o=!1,l()},this.setState=function(e,s,a){const u=e.clippingPlanes,d=e.clipIntersection,p=e.clipShadows,f=t.get(e);if(!r||null===u||0===u.length||o&&!p)o?h(null):l();else{const t=o?0:i,e=4*t;let r=f.clippingState||null;c.value=r,r=h(u,s,e,a);for(let t=0;t!==e;++t)r[t]=n[t];f.clippingState=r,this.numIntersection=d?this.numPlanes:0,this.numPlanes+=t}}}function ui(t){let e=new WeakMap;function n(t,e){return 303===e?t.mapping=301:304===e&&(t.mapping=302),t}return{get:function(i){if(i&&i.isTexture){const r=i.mapping;if(303===r||304===r){if(e.has(i)){return n(e.get(i).texture,i.mapping)}{const r=i.image;if(r&&r.height>0){const o=t.getRenderList(),s=t.getRenderTarget(),a=t.getRenderState(),c=new Zn(r.height/2);return c.fromEquirectangularTexture(t,i),e.set(i,c),t.setRenderTarget(s),t.setRenderList(o),t.setRenderState(a),n(c.texture,i.mapping)}return null}}}return i},dispose:function(){e=new WeakMap}}}function di(t){const e={};return{has:function(n){if(void 0!==e[n])return null!==e[n];let i;switch(n){case"WEBGL_depth_texture":i=t.getExtension("WEBGL_depth_texture")||t.getExtension("MOZ_WEBGL_depth_texture")||t.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":i=t.getExtension("EXT_texture_filter_anisotropic")||t.getExtension("MOZ_EXT_texture_filter_anisotropic")||t.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":i=t.getExtension("WEBGL_compressed_texture_s3tc")||t.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||t.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":i=t.getExtension("WEBGL_compressed_texture_pvrtc")||t.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:i=t.getExtension(n)}return e[n]=i,null!==i},get:function(t){return this.has(t)||console.warn("THREE.WebGLRenderer: "+t+" extension not supported."),e[t]}}}function pi(t,e,n,i){const r=new WeakMap,o=new WeakMap;function s(t){const a=t.target,c=r.get(a);null!==c.index&&e.remove(c.index);for(const t in c.attributes)e.remove(c.attributes[t]);a.removeEventListener("dispose",s),r.delete(a);const l=o.get(c);l&&(e.remove(l),o.delete(c)),i.releaseStatesOfGeometry(a),!0===a.isInstancedBufferGeometry&&delete a._maxInstanceCount,n.memory.geometries--}function a(t){const n=[],i=t.index,r=t.attributes.position;let s=0;if(null!==i){const t=i.array;s=i.version;for(let e=0,i=t.length;e<i;e+=3){const i=t[e+0],r=t[e+1],o=t[e+2];n.push(i,r,r,o,o,i)}}else{const t=r.array;s=r.version;for(let e=0,i=t.length/3-1;e<i;e+=3){const t=e+0,i=e+1,r=e+2;n.push(t,i,i,r,r,t)}}const a=new(un(n)>65535?an:on)(n,1);a.version=s;const c=o.get(t);c&&e.remove(c),o.set(t,a)}return{get:function(t,e){let i=r.get(e);return i||(e.addEventListener("dispose",s),e.isBufferGeometry?i=e:e.isGeometry&&(void 0===e._bufferGeometry&&(e._bufferGeometry=(new xn).setFromObject(t)),i=e._bufferGeometry),r.set(e,i),n.memory.geometries++,i)},update:function(t){const n=t.attributes;for(const t in n)e.update(n[t],34962);const i=t.morphAttributes;for(const t in i){const n=i[t];for(let t=0,i=n.length;t<i;t++)e.update(n[t],34962)}},getWireframeAttribute:function(t){const e=o.get(t);if(e){const n=t.index;null!==n&&e.version<n.version&&a(t)}else a(t);return o.get(t)}}}function fi(t,e,n,i){const r=i.isWebGL2;let o,s,a;this.setMode=function(t){o=t},this.setIndex=function(t){s=t.type,a=t.bytesPerElement},this.render=function(e,i){t.drawElements(o,i,s,e*a),n.update(i,o,1)},this.renderInstances=function(i,c,l){if(0===l)return;let h,u;if(r)h=t,u="drawElementsInstanced";else if(h=e.get("ANGLE_instanced_arrays"),u="drawElementsInstancedANGLE",null===h)return void console.error("THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");h[u](o,c,s,i*a,l),n.update(c,o,l)}}function mi(t){const e={frame:0,calls:0,triangles:0,points:0,lines:0};return{memory:{geometries:0,textures:0},render:e,programs:null,autoReset:!0,reset:function(){e.frame++,e.calls=0,e.triangles=0,e.points=0,e.lines=0},update:function(t,n,i){switch(e.calls++,n){case 4:e.triangles+=i*(t/3);break;case 1:e.lines+=i*(t/2);break;case 3:e.lines+=i*(t-1);break;case 2:e.lines+=i*t;break;case 0:e.points+=i*t;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",n)}}}}function gi(t,e){return t[0]-e[0]}function vi(t,e){return Math.abs(e[1])-Math.abs(t[1])}function yi(t){const e={},n=new Float32Array(8),i=[];for(let t=0;t<8;t++)i[t]=[t,0];return{update:function(r,o,s,a){const c=r.morphTargetInfluences,l=void 0===c?0:c.length;let h=e[o.id];if(void 0===h){h=[];for(let t=0;t<l;t++)h[t]=[t,0];e[o.id]=h}for(let t=0;t<l;t++){const e=h[t];e[0]=t,e[1]=c[t]}h.sort(vi);for(let t=0;t<8;t++)t<l&&h[t][1]?(i[t][0]=h[t][0],i[t][1]=h[t][1]):(i[t][0]=Number.MAX_SAFE_INTEGER,i[t][1]=0);i.sort(gi);const u=s.morphTargets&&o.morphAttributes.position,d=s.morphNormals&&o.morphAttributes.normal;let p=0;for(let t=0;t<8;t++){const e=i[t],r=e[0],s=e[1];r!==Number.MAX_SAFE_INTEGER&&s?(u&&o.getAttribute("morphTarget"+t)!==u[r]&&o.setAttribute("morphTarget"+t,u[r]),d&&o.getAttribute("morphNormal"+t)!==d[r]&&o.setAttribute("morphNormal"+t,d[r]),n[t]=s,p+=s):(u&&void 0!==o.getAttribute("morphTarget"+t)&&o.deleteAttribute("morphTarget"+t),d&&void 0!==o.getAttribute("morphNormal"+t)&&o.deleteAttribute("morphNormal"+t),n[t]=0)}const f=o.morphTargetsRelative?1:1-p;a.getUniforms().setValue(t,"morphTargetBaseInfluence",f),a.getUniforms().setValue(t,"morphTargetInfluences",n)}}}function xi(t,e,n,i){let r=new WeakMap;return{update:function(t){const o=i.render.frame,s=t.geometry,a=e.get(t,s);return r.get(a)!==o&&(s.isGeometry&&a.updateFromObject(t),e.update(a),r.set(a,o)),t.isInstancedMesh&&(n.update(t.instanceMatrix,34962),null!==t.instanceColor&&n.update(t.instanceColor,34962)),a},dispose:function(){r=new WeakMap}}}function _i(t,e,n,i){_t.call(this,null),this.image={data:t||null,width:e||1,height:n||1,depth:i||1},this.magFilter=1003,this.minFilter=1003,this.wrapR=1001,this.generateMipmaps=!1,this.flipY=!1,this.needsUpdate=!0}function bi(t,e,n,i){_t.call(this,null),this.image={data:t||null,width:e||1,height:n||1,depth:i||1},this.magFilter=1003,this.minFilter=1003,this.wrapR=1001,this.generateMipmaps=!1,this.flipY=!1,this.needsUpdate=!0}oi.physical={uniforms:Gn([oi.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatNormalScale:{value:new mt(1,1)},clearcoatNormalMap:{value:null},sheen:{value:new qe(0)},transmission:{value:0},transmissionMap:{value:null}}]),vertexShader:ii.meshphysical_vert,fragmentShader:ii.meshphysical_frag},_i.prototype=Object.create(_t.prototype),_i.prototype.constructor=_i,_i.prototype.isDataTexture2DArray=!0,bi.prototype=Object.create(_t.prototype),bi.prototype.constructor=bi,bi.prototype.isDataTexture3D=!0;const wi=new _t,Mi=new _i,Si=new bi,Ei=new Yn,Ti=[],Ai=[],Li=new Float32Array(16),Ri=new Float32Array(9),Pi=new Float32Array(4);function Ci(t,e,n){const i=t[0];if(i<=0||i>0)return t;const r=e*n;let o=Ti[r];if(void 0===o&&(o=new Float32Array(r),Ti[r]=o),0!==e){i.toArray(o,0);for(let i=1,r=0;i!==e;++i)r+=n,t[i].toArray(o,r)}return o}function Ni(t,e){if(t.length!==e.length)return!1;for(let n=0,i=t.length;n<i;n++)if(t[n]!==e[n])return!1;return!0}function Oi(t,e){for(let n=0,i=e.length;n<i;n++)t[n]=e[n]}function Ii(t,e){let n=Ai[e];void 0===n&&(n=new Int32Array(e),Ai[e]=n);for(let i=0;i!==e;++i)n[i]=t.allocateTextureUnit();return n}function Di(t,e){const n=this.cache;n[0]!==e&&(t.uniform1f(this.addr,e),n[0]=e)}function zi(t,e){const n=this.cache;if(void 0!==e.x)n[0]===e.x&&n[1]===e.y||(t.uniform2f(this.addr,e.x,e.y),n[0]=e.x,n[1]=e.y);else{if(Ni(n,e))return;t.uniform2fv(this.addr,e),Oi(n,e)}}function Ui(t,e){const n=this.cache;if(void 0!==e.x)n[0]===e.x&&n[1]===e.y&&n[2]===e.z||(t.uniform3f(this.addr,e.x,e.y,e.z),n[0]=e.x,n[1]=e.y,n[2]=e.z);else if(void 0!==e.r)n[0]===e.r&&n[1]===e.g&&n[2]===e.b||(t.uniform3f(this.addr,e.r,e.g,e.b),n[0]=e.r,n[1]=e.g,n[2]=e.b);else{if(Ni(n,e))return;t.uniform3fv(this.addr,e),Oi(n,e)}}function Bi(t,e){const n=this.cache;if(void 0!==e.x)n[0]===e.x&&n[1]===e.y&&n[2]===e.z&&n[3]===e.w||(t.uniform4f(this.addr,e.x,e.y,e.z,e.w),n[0]=e.x,n[1]=e.y,n[2]=e.z,n[3]=e.w);else{if(Ni(n,e))return;t.uniform4fv(this.addr,e),Oi(n,e)}}function Hi(t,e){const n=this.cache,i=e.elements;if(void 0===i){if(Ni(n,e))return;t.uniformMatrix2fv(this.addr,!1,e),Oi(n,e)}else{if(Ni(n,i))return;Pi.set(i),t.uniformMatrix2fv(this.addr,!1,Pi),Oi(n,i)}}function Fi(t,e){const n=this.cache,i=e.elements;if(void 0===i){if(Ni(n,e))return;t.uniformMatrix3fv(this.addr,!1,e),Oi(n,e)}else{if(Ni(n,i))return;Ri.set(i),t.uniformMatrix3fv(this.addr,!1,Ri),Oi(n,i)}}function ki(t,e){const n=this.cache,i=e.elements;if(void 0===i){if(Ni(n,e))return;t.uniformMatrix4fv(this.addr,!1,e),Oi(n,e)}else{if(Ni(n,i))return;Li.set(i),t.uniformMatrix4fv(this.addr,!1,Li),Oi(n,i)}}function Gi(t,e,n){const i=this.cache,r=n.allocateTextureUnit();i[0]!==r&&(t.uniform1i(this.addr,r),i[0]=r),n.safeSetTexture2D(e||wi,r)}function Vi(t,e,n){const i=this.cache,r=n.allocateTextureUnit();i[0]!==r&&(t.uniform1i(this.addr,r),i[0]=r),n.setTexture2DArray(e||Mi,r)}function ji(t,e,n){const i=this.cache,r=n.allocateTextureUnit();i[0]!==r&&(t.uniform1i(this.addr,r),i[0]=r),n.setTexture3D(e||Si,r)}function Wi(t,e,n){const i=this.cache,r=n.allocateTextureUnit();i[0]!==r&&(t.uniform1i(this.addr,r),i[0]=r),n.safeSetTextureCube(e||Ei,r)}function qi(t,e){const n=this.cache;n[0]!==e&&(t.uniform1i(this.addr,e),n[0]=e)}function Xi(t,e){const n=this.cache;Ni(n,e)||(t.uniform2iv(this.addr,e),Oi(n,e))}function Yi(t,e){const n=this.cache;Ni(n,e)||(t.uniform3iv(this.addr,e),Oi(n,e))}function Zi(t,e){const n=this.cache;Ni(n,e)||(t.uniform4iv(this.addr,e),Oi(n,e))}function $i(t,e){const n=this.cache;n[0]!==e&&(t.uniform1ui(this.addr,e),n[0]=e)}function Ji(t,e){t.uniform1fv(this.addr,e)}function Qi(t,e){t.uniform1iv(this.addr,e)}function Ki(t,e){t.uniform2iv(this.addr,e)}function tr(t,e){t.uniform3iv(this.addr,e)}function er(t,e){t.uniform4iv(this.addr,e)}function nr(t,e){const n=Ci(e,this.size,2);t.uniform2fv(this.addr,n)}function ir(t,e){const n=Ci(e,this.size,3);t.uniform3fv(this.addr,n)}function rr(t,e){const n=Ci(e,this.size,4);t.uniform4fv(this.addr,n)}function or(t,e){const n=Ci(e,this.size,4);t.uniformMatrix2fv(this.addr,!1,n)}function sr(t,e){const n=Ci(e,this.size,9);t.uniformMatrix3fv(this.addr,!1,n)}function ar(t,e){const n=Ci(e,this.size,16);t.uniformMatrix4fv(this.addr,!1,n)}function cr(t,e,n){const i=e.length,r=Ii(n,i);t.uniform1iv(this.addr,r);for(let t=0;t!==i;++t)n.safeSetTexture2D(e[t]||wi,r[t])}function lr(t,e,n){const i=e.length,r=Ii(n,i);t.uniform1iv(this.addr,r);for(let t=0;t!==i;++t)n.safeSetTextureCube(e[t]||Ei,r[t])}function hr(t,e,n){this.id=t,this.addr=n,this.cache=[],this.setValue=function(t){switch(t){case 5126:return Di;case 35664:return zi;case 35665:return Ui;case 35666:return Bi;case 35674:return Hi;case 35675:return Fi;case 35676:return ki;case 5124:case 35670:return qi;case 35667:case 35671:return Xi;case 35668:case 35672:return Yi;case 35669:case 35673:return Zi;case 5125:return $i;case 35678:case 36198:case 36298:case 36306:case 35682:return Gi;case 35679:case 36299:case 36307:return ji;case 35680:case 36300:case 36308:case 36293:return Wi;case 36289:case 36303:case 36311:case 36292:return Vi}}(e.type)}function ur(t,e,n){this.id=t,this.addr=n,this.cache=[],this.size=e.size,this.setValue=function(t){switch(t){case 5126:return Ji;case 35664:return nr;case 35665:return ir;case 35666:return rr;case 35674:return or;case 35675:return sr;case 35676:return ar;case 5124:case 35670:return Qi;case 35667:case 35671:return Ki;case 35668:case 35672:return tr;case 35669:case 35673:return er;case 35678:case 36198:case 36298:case 36306:case 35682:return cr;case 35680:case 36300:case 36308:case 36293:return lr}}(e.type)}function dr(t){this.id=t,this.seq=[],this.map={}}ur.prototype.updateCache=function(t){const e=this.cache;t instanceof Float32Array&&e.length!==t.length&&(this.cache=new Float32Array(t.length)),Oi(e,t)},dr.prototype.setValue=function(t,e,n){const i=this.seq;for(let r=0,o=i.length;r!==o;++r){const o=i[r];o.setValue(t,e[o.id],n)}};const pr=/([\w\d_]+)(\])?(\[|\.)?/g;function fr(t,e){t.seq.push(e),t.map[e.id]=e}function mr(t,e,n){const i=t.name,r=i.length;for(pr.lastIndex=0;;){const o=pr.exec(i),s=pr.lastIndex;let a=o[1];const c="]"===o[2],l=o[3];if(c&&(a|=0),void 0===l||"["===l&&s+2===r){fr(n,void 0===l?new hr(a,t,e):new ur(a,t,e));break}{let t=n.map[a];void 0===t&&(t=new dr(a),fr(n,t)),n=t}}}function gr(t,e){this.seq=[],this.map={};const n=t.getProgramParameter(e,35718);for(let i=0;i<n;++i){const n=t.getActiveUniform(e,i);mr(n,t.getUniformLocation(e,n.name),this)}}function vr(t,e,n){const i=t.createShader(e);return t.shaderSource(i,n),t.compileShader(i),i}gr.prototype.setValue=function(t,e,n,i){const r=this.map[e];void 0!==r&&r.setValue(t,n,i)},gr.prototype.setOptional=function(t,e,n){const i=e[n];void 0!==i&&this.setValue(t,n,i)},gr.upload=function(t,e,n,i){for(let r=0,o=e.length;r!==o;++r){const o=e[r],s=n[o.id];!1!==s.needsUpdate&&o.setValue(t,s.value,i)}},gr.seqWithValue=function(t,e){const n=[];for(let i=0,r=t.length;i!==r;++i){const r=t[i];r.id in e&&n.push(r)}return n};let yr=0;function xr(t){switch(t){case 3e3:return["Linear","( value )"];case 3001:return["sRGB","( value )"];case 3002:return["RGBE","( value )"];case 3004:return["RGBM","( value, 7.0 )"];case 3005:return["RGBM","( value, 16.0 )"];case 3006:return["RGBD","( value, 256.0 )"];case 3007:return["Gamma","( value, float( GAMMA_FACTOR ) )"];case 3003:return["LogLuv","( value )"];default:return console.warn("THREE.WebGLProgram: Unsupported encoding:",t),["Linear","( value )"]}}function _r(t,e,n){const i=t.getShaderParameter(e,35713),r=t.getShaderInfoLog(e).trim();if(i&&""===r)return"";return"THREE.WebGLShader: gl.getShaderInfoLog() "+n+"\n"+r+function(t){const e=t.split("\n");for(let t=0;t<e.length;t++)e[t]=t+1+": "+e[t];return e.join("\n")}(t.getShaderSource(e))}function br(t,e){const n=xr(e);return"vec4 "+t+"( vec4 value ) { return "+n[0]+"ToLinear"+n[1]+"; }"}function wr(t,e){const n=xr(e);return"vec4 "+t+"( vec4 value ) { return LinearTo"+n[0]+n[1]+"; }"}function Mr(t,e){let n;switch(e){case 1:n="Linear";break;case 2:n="Reinhard";break;case 3:n="OptimizedCineon";break;case 4:n="ACESFilmic";break;case 5:n="Custom";break;default:console.warn("THREE.WebGLProgram: Unsupported toneMapping:",e),n="Linear"}return"vec3 "+t+"( vec3 color ) { return "+n+"ToneMapping( color ); }"}function Sr(t){return""!==t}function Er(t,e){return t.replace(/NUM_DIR_LIGHTS/g,e.numDirLights).replace(/NUM_SPOT_LIGHTS/g,e.numSpotLights).replace(/NUM_RECT_AREA_LIGHTS/g,e.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,e.numPointLights).replace(/NUM_HEMI_LIGHTS/g,e.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,e.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS/g,e.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,e.numPointLightShadows)}function Tr(t,e){return t.replace(/NUM_CLIPPING_PLANES/g,e.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,e.numClippingPlanes-e.numClipIntersection)}const Ar=/^[ \t]*#include +<([\w\d./]+)>/gm;function Lr(t){return t.replace(Ar,Rr)}function Rr(t,e){const n=ii[e];if(void 0===n)throw new Error("Can not resolve #include <"+e+">");return Lr(n)}const Pr=/#pragma unroll_loop[\s]+?for \( int i \= (\d+)\; i < (\d+)\; i \+\+ \) \{([\s\S]+?)(?=\})\}/g,Cr=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;function Nr(t){return t.replace(Cr,Ir).replace(Pr,Or)}function Or(t,e,n,i){return console.warn("WebGLProgram: #pragma unroll_loop shader syntax is deprecated. Please use #pragma unroll_loop_start syntax instead."),Ir(t,e,n,i)}function Ir(t,e,n,i){let r="";for(let t=parseInt(e);t<parseInt(n);t++)r+=i.replace(/\[\s*i\s*\]/g,"[ "+t+" ]").replace(/UNROLLED_LOOP_INDEX/g,t);return r}function Dr(t){let e="precision "+t.precision+" float;\nprecision "+t.precision+" int;";return"highp"===t.precision?e+="\n#define HIGH_PRECISION":"mediump"===t.precision?e+="\n#define MEDIUM_PRECISION":"lowp"===t.precision&&(e+="\n#define LOW_PRECISION"),e}function zr(t,e,n,i){const r=t.getContext(),o=n.defines;let s=n.vertexShader,a=n.fragmentShader;const c=function(t){let e="SHADOWMAP_TYPE_BASIC";return 1===t.shadowMapType?e="SHADOWMAP_TYPE_PCF":2===t.shadowMapType?e="SHADOWMAP_TYPE_PCF_SOFT":3===t.shadowMapType&&(e="SHADOWMAP_TYPE_VSM"),e}(n),l=function(t){let e="ENVMAP_TYPE_CUBE";if(t.envMap)switch(t.envMapMode){case 301:case 302:e="ENVMAP_TYPE_CUBE";break;case 306:case 307:e="ENVMAP_TYPE_CUBE_UV"}return e}(n),h=function(t){let e="ENVMAP_MODE_REFLECTION";if(t.envMap)switch(t.envMapMode){case 302:case 307:e="ENVMAP_MODE_REFRACTION"}return e}(n),u=function(t){let e="ENVMAP_BLENDING_NONE";if(t.envMap)switch(t.combine){case 0:e="ENVMAP_BLENDING_MULTIPLY";break;case 1:e="ENVMAP_BLENDING_MIX";break;case 2:e="ENVMAP_BLENDING_ADD"}return e}(n),d=t.gammaFactor>0?t.gammaFactor:1,p=n.isWebGL2?"":function(t){return[t.extensionDerivatives||t.envMapCubeUV||t.bumpMap||t.tangentSpaceNormalMap||t.clearcoatNormalMap||t.flatShading||"physical"===t.shaderID?"#extension GL_OES_standard_derivatives : enable":"",(t.extensionFragDepth||t.logarithmicDepthBuffer)&&t.rendererExtensionFragDepth?"#extension GL_EXT_frag_depth : enable":"",t.extensionDrawBuffers&&t.rendererExtensionDrawBuffers?"#extension GL_EXT_draw_buffers : require":"",(t.extensionShaderTextureLOD||t.envMap)&&t.rendererExtensionShaderTextureLod?"#extension GL_EXT_shader_texture_lod : enable":""].filter(Sr).join("\n")}(n),f=function(t){const e=[];for(const n in t){const i=t[n];!1!==i&&e.push("#define "+n+" "+i)}return e.join("\n")}(o),m=r.createProgram();let g,v,y=n.glslVersion?"#version "+n.glslVersion+"\n":"";n.isRawShaderMaterial?(g=[f].filter(Sr).join("\n"),g.length>0&&(g+="\n"),v=[p,f].filter(Sr).join("\n"),v.length>0&&(v+="\n")):(g=[Dr(n),"#define SHADER_NAME "+n.shaderName,f,n.instancing?"#define USE_INSTANCING":"",n.instancingColor?"#define USE_INSTANCING_COLOR":"",n.supportsVertexTextures?"#define VERTEX_TEXTURES":"","#define GAMMA_FACTOR "+d,"#define MAX_BONES "+n.maxBones,n.useFog&&n.fog?"#define USE_FOG":"",n.useFog&&n.fogExp2?"#define FOG_EXP2":"",n.map?"#define USE_MAP":"",n.envMap?"#define USE_ENVMAP":"",n.envMap?"#define "+h:"",n.lightMap?"#define USE_LIGHTMAP":"",n.aoMap?"#define USE_AOMAP":"",n.emissiveMap?"#define USE_EMISSIVEMAP":"",n.bumpMap?"#define USE_BUMPMAP":"",n.normalMap?"#define USE_NORMALMAP":"",n.normalMap&&n.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",n.normalMap&&n.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",n.clearcoatMap?"#define USE_CLEARCOATMAP":"",n.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",n.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",n.displacementMap&&n.supportsVertexTextures?"#define USE_DISPLACEMENTMAP":"",n.specularMap?"#define USE_SPECULARMAP":"",n.roughnessMap?"#define USE_ROUGHNESSMAP":"",n.metalnessMap?"#define USE_METALNESSMAP":"",n.alphaMap?"#define USE_ALPHAMAP":"",n.transmissionMap?"#define USE_TRANSMISSIONMAP":"",n.vertexTangents?"#define USE_TANGENT":"",n.vertexColors?"#define USE_COLOR":"",n.vertexUvs?"#define USE_UV":"",n.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",n.flatShading?"#define FLAT_SHADED":"",n.skinning?"#define USE_SKINNING":"",n.useVertexTexture?"#define BONE_TEXTURE":"",n.morphTargets?"#define USE_MORPHTARGETS":"",n.morphNormals&&!1===n.flatShading?"#define USE_MORPHNORMALS":"",n.doubleSided?"#define DOUBLE_SIDED":"",n.flipSided?"#define FLIP_SIDED":"",n.shadowMapEnabled?"#define USE_SHADOWMAP":"",n.shadowMapEnabled?"#define "+c:"",n.sizeAttenuation?"#define USE_SIZEATTENUATION":"",n.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",n.logarithmicDepthBuffer&&n.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","\tattribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","\tattribute vec3 instanceColor;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_TANGENT","\tattribute vec4 tangent;","#endif","#ifdef USE_COLOR","\tattribute vec3 color;","#endif","#ifdef USE_MORPHTARGETS","\tattribute vec3 morphTarget0;","\tattribute vec3 morphTarget1;","\tattribute vec3 morphTarget2;","\tattribute vec3 morphTarget3;","\t#ifdef USE_MORPHNORMALS","\t\tattribute vec3 morphNormal0;","\t\tattribute vec3 morphNormal1;","\t\tattribute vec3 morphNormal2;","\t\tattribute vec3 morphNormal3;","\t#else","\t\tattribute vec3 morphTarget4;","\t\tattribute vec3 morphTarget5;","\t\tattribute vec3 morphTarget6;","\t\tattribute vec3 morphTarget7;","\t#endif","#endif","#ifdef USE_SKINNING","\tattribute vec4 skinIndex;","\tattribute vec4 skinWeight;","#endif","\n"].filter(Sr).join("\n"),v=[p,Dr(n),"#define SHADER_NAME "+n.shaderName,f,n.alphaTest?"#define ALPHATEST "+n.alphaTest+(n.alphaTest%1?"":".0"):"","#define GAMMA_FACTOR "+d,n.useFog&&n.fog?"#define USE_FOG":"",n.useFog&&n.fogExp2?"#define FOG_EXP2":"",n.map?"#define USE_MAP":"",n.matcap?"#define USE_MATCAP":"",n.envMap?"#define USE_ENVMAP":"",n.envMap?"#define "+l:"",n.envMap?"#define "+h:"",n.envMap?"#define "+u:"",n.lightMap?"#define USE_LIGHTMAP":"",n.aoMap?"#define USE_AOMAP":"",n.emissiveMap?"#define USE_EMISSIVEMAP":"",n.bumpMap?"#define USE_BUMPMAP":"",n.normalMap?"#define USE_NORMALMAP":"",n.normalMap&&n.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",n.normalMap&&n.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",n.clearcoatMap?"#define USE_CLEARCOATMAP":"",n.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",n.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",n.specularMap?"#define USE_SPECULARMAP":"",n.roughnessMap?"#define USE_ROUGHNESSMAP":"",n.metalnessMap?"#define USE_METALNESSMAP":"",n.alphaMap?"#define USE_ALPHAMAP":"",n.sheen?"#define USE_SHEEN":"",n.transmissionMap?"#define USE_TRANSMISSIONMAP":"",n.vertexTangents?"#define USE_TANGENT":"",n.vertexColors||n.instancingColor?"#define USE_COLOR":"",n.vertexUvs?"#define USE_UV":"",n.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",n.gradientMap?"#define USE_GRADIENTMAP":"",n.flatShading?"#define FLAT_SHADED":"",n.doubleSided?"#define DOUBLE_SIDED":"",n.flipSided?"#define FLIP_SIDED":"",n.shadowMapEnabled?"#define USE_SHADOWMAP":"",n.shadowMapEnabled?"#define "+c:"",n.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",n.physicallyCorrectLights?"#define PHYSICALLY_CORRECT_LIGHTS":"",n.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",n.logarithmicDepthBuffer&&n.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"",(n.extensionShaderTextureLOD||n.envMap)&&n.rendererExtensionShaderTextureLod?"#define TEXTURE_LOD_EXT":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",0!==n.toneMapping?"#define TONE_MAPPING":"",0!==n.toneMapping?ii.tonemapping_pars_fragment:"",0!==n.toneMapping?Mr("toneMapping",n.toneMapping):"",n.dithering?"#define DITHERING":"",ii.encodings_pars_fragment,n.map?br("mapTexelToLinear",n.mapEncoding):"",n.matcap?br("matcapTexelToLinear",n.matcapEncoding):"",n.envMap?br("envMapTexelToLinear",n.envMapEncoding):"",n.emissiveMap?br("emissiveMapTexelToLinear",n.emissiveMapEncoding):"",n.lightMap?br("lightMapTexelToLinear",n.lightMapEncoding):"",wr("linearToOutputTexel",n.outputEncoding),n.depthPacking?"#define DEPTH_PACKING "+n.depthPacking:"","\n"].filter(Sr).join("\n")),s=Lr(s),s=Er(s,n),s=Tr(s,n),a=Lr(a),a=Er(a,n),a=Tr(a,n),s=Nr(s),a=Nr(a),n.isWebGL2&&!0!==n.isRawShaderMaterial&&(y="#version 300 es\n",g=["#define attribute in","#define varying out","#define texture2D texture"].join("\n")+"\n"+g,v=["#define varying in","300 es"===n.glslVersion?"":"out highp vec4 pc_fragColor;","300 es"===n.glslVersion?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join("\n")+"\n"+v);const x=y+v+a,_=vr(r,35633,y+g+s),b=vr(r,35632,x);if(r.attachShader(m,_),r.attachShader(m,b),void 0!==n.index0AttributeName?r.bindAttribLocation(m,0,n.index0AttributeName):!0===n.morphTargets&&r.bindAttribLocation(m,0,"position"),r.linkProgram(m),t.debug.checkShaderErrors){const t=r.getProgramInfoLog(m).trim(),e=r.getShaderInfoLog(_).trim(),n=r.getShaderInfoLog(b).trim();let i=!0,o=!0;if(!1===r.getProgramParameter(m,35714)){i=!1;const e=_r(r,_,"vertex"),n=_r(r,b,"fragment");console.error("THREE.WebGLProgram: shader error: ",r.getError(),"35715",r.getProgramParameter(m,35715),"gl.getProgramInfoLog",t,e,n)}else""!==t?console.warn("THREE.WebGLProgram: gl.getProgramInfoLog()",t):""!==e&&""!==n||(o=!1);o&&(this.diagnostics={runnable:i,programLog:t,vertexShader:{log:e,prefix:g},fragmentShader:{log:n,prefix:v}})}let w,M;return r.deleteShader(_),r.deleteShader(b),this.getUniforms=function(){return void 0===w&&(w=new gr(r,m)),w},this.getAttributes=function(){return void 0===M&&(M=function(t,e){const n={},i=t.getProgramParameter(e,35721);for(let r=0;r<i;r++){const i=t.getActiveAttrib(e,r).name;n[i]=t.getAttribLocation(e,i)}return n}(r,m)),M},this.destroy=function(){i.releaseStatesOfProgram(this),r.deleteProgram(m),this.program=void 0},this.name=n.shaderName,this.id=yr++,this.cacheKey=e,this.usedTimes=1,this.program=m,this.vertexShader=_,this.fragmentShader=b,this}function Ur(t,e,n,i,r,o){const s=[],a=i.isWebGL2,c=i.logarithmicDepthBuffer,l=i.floatVertexTextures,h=i.maxVertexUniforms,u=i.vertexTextures;let d=i.precision;const p={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"},f=["precision","isWebGL2","supportsVertexTextures","outputEncoding","instancing","instancingColor","map","mapEncoding","matcap","matcapEncoding","envMap","envMapMode","envMapEncoding","envMapCubeUV","lightMap","lightMapEncoding","aoMap","emissiveMap","emissiveMapEncoding","bumpMap","normalMap","objectSpaceNormalMap","tangentSpaceNormalMap","clearcoatMap","clearcoatRoughnessMap","clearcoatNormalMap","displacementMap","specularMap","roughnessMap","metalnessMap","gradientMap","alphaMap","combine","vertexColors","vertexTangents","vertexUvs","uvsVertexOnly","fog","useFog","fogExp2","flatShading","sizeAttenuation","logarithmicDepthBuffer","skinning","maxBones","useVertexTexture","morphTargets","morphNormals","maxMorphTargets","maxMorphNormals","premultipliedAlpha","numDirLights","numPointLights","numSpotLights","numHemiLights","numRectAreaLights","numDirLightShadows","numPointLightShadows","numSpotLightShadows","shadowMapEnabled","shadowMapType","toneMapping","physicallyCorrectLights","alphaTest","doubleSided","flipSided","numClippingPlanes","numClipIntersection","depthPacking","dithering","sheen","transmissionMap"];function m(t){let e;return t?t.isTexture?e=t.encoding:t.isWebGLRenderTarget&&(console.warn("THREE.WebGLPrograms.getTextureEncodingFromMap: don't use render targets as textures. Use their .texture property instead."),e=t.texture.encoding):e=3e3,e}return{getParameters:function(r,s,f,g,v){const y=g.fog,x=r.isMeshStandardMaterial?g.environment:null,_=e.get(r.envMap||x),b=p[r.type],w=v.isSkinnedMesh?function(t){const e=t.skeleton.bones;if(l)return 1024;{const t=h,n=Math.floor((t-20)/4),i=Math.min(n,e.length);return i<e.length?(console.warn("THREE.WebGLRenderer: Skeleton has "+e.length+" bones. This GPU supports "+i+"."),0):i}}(v):0;let M,S;if(null!==r.precision&&(d=i.getMaxPrecision(r.precision),d!==r.precision&&console.warn("THREE.WebGLProgram.getParameters:",r.precision,"not supported, using",d,"instead.")),b){const t=oi[b];M=t.vertexShader,S=t.fragmentShader}else M=r.vertexShader,S=r.fragmentShader;const E=t.getRenderTarget();return{isWebGL2:a,shaderID:b,shaderName:r.type,vertexShader:M,fragmentShader:S,defines:r.defines,isRawShaderMaterial:!0===r.isRawShaderMaterial,glslVersion:r.glslVersion,precision:d,instancing:!0===v.isInstancedMesh,instancingColor:!0===v.isInstancedMesh&&null!==v.instanceColor,supportsVertexTextures:u,outputEncoding:null!==E?m(E.texture):t.outputEncoding,map:!!r.map,mapEncoding:m(r.map),matcap:!!r.matcap,matcapEncoding:m(r.matcap),envMap:!!_,envMapMode:_&&_.mapping,envMapEncoding:m(_),envMapCubeUV:!!_&&(306===_.mapping||307===_.mapping),lightMap:!!r.lightMap,lightMapEncoding:m(r.lightMap),aoMap:!!r.aoMap,emissiveMap:!!r.emissiveMap,emissiveMapEncoding:m(r.emissiveMap),bumpMap:!!r.bumpMap,normalMap:!!r.normalMap,objectSpaceNormalMap:1===r.normalMapType,tangentSpaceNormalMap:0===r.normalMapType,clearcoatMap:!!r.clearcoatMap,clearcoatRoughnessMap:!!r.clearcoatRoughnessMap,clearcoatNormalMap:!!r.clearcoatNormalMap,displacementMap:!!r.displacementMap,roughnessMap:!!r.roughnessMap,metalnessMap:!!r.metalnessMap,specularMap:!!r.specularMap,alphaMap:!!r.alphaMap,gradientMap:!!r.gradientMap,sheen:!!r.sheen,transmissionMap:!!r.transmissionMap,combine:r.combine,vertexTangents:r.normalMap&&r.vertexTangents,vertexColors:r.vertexColors,vertexUvs:!!(r.map||r.bumpMap||r.normalMap||r.specularMap||r.alphaMap||r.emissiveMap||r.roughnessMap||r.metalnessMap||r.clearcoatMap||r.clearcoatRoughnessMap||r.clearcoatNormalMap||r.displacementMap||r.transmissionMap),uvsVertexOnly:!(r.map||r.bumpMap||r.normalMap||r.specularMap||r.alphaMap||r.emissiveMap||r.roughnessMap||r.metalnessMap||r.clearcoatNormalMap||r.transmissionMap||!r.displacementMap),fog:!!y,useFog:r.fog,fogExp2:y&&y.isFogExp2,flatShading:r.flatShading,sizeAttenuation:r.sizeAttenuation,logarithmicDepthBuffer:c,skinning:r.skinning&&w>0,maxBones:w,useVertexTexture:l,morphTargets:r.morphTargets,morphNormals:r.morphNormals,maxMorphTargets:t.maxMorphTargets,maxMorphNormals:t.maxMorphNormals,numDirLights:s.directional.length,numPointLights:s.point.length,numSpotLights:s.spot.length,numRectAreaLights:s.rectArea.length,numHemiLights:s.hemi.length,numDirLightShadows:s.directionalShadowMap.length,numPointLightShadows:s.pointShadowMap.length,numSpotLightShadows:s.spotShadowMap.length,numClippingPlanes:o.numPlanes,numClipIntersection:o.numIntersection,dithering:r.dithering,shadowMapEnabled:t.shadowMap.enabled&&f.length>0,shadowMapType:t.shadowMap.type,toneMapping:r.toneMapped?t.toneMapping:0,physicallyCorrectLights:t.physicallyCorrectLights,premultipliedAlpha:r.premultipliedAlpha,alphaTest:r.alphaTest,doubleSided:2===r.side,flipSided:1===r.side,depthPacking:void 0!==r.depthPacking&&r.depthPacking,index0AttributeName:r.index0AttributeName,extensionDerivatives:r.extensions&&r.extensions.derivatives,extensionFragDepth:r.extensions&&r.extensions.fragDepth,extensionDrawBuffers:r.extensions&&r.extensions.drawBuffers,extensionShaderTextureLOD:r.extensions&&r.extensions.shaderTextureLOD,rendererExtensionFragDepth:a||n.has("EXT_frag_depth"),rendererExtensionDrawBuffers:a||n.has("WEBGL_draw_buffers"),rendererExtensionShaderTextureLod:a||n.has("EXT_shader_texture_lod"),customProgramCacheKey:r.customProgramCacheKey()}},getProgramCacheKey:function(e){const n=[];if(e.shaderID?n.push(e.shaderID):(n.push(e.fragmentShader),n.push(e.vertexShader)),void 0!==e.defines)for(const t in e.defines)n.push(t),n.push(e.defines[t]);if(!1===e.isRawShaderMaterial){for(let t=0;t<f.length;t++)n.push(e[f[t]]);n.push(t.outputEncoding),n.push(t.gammaFactor)}return n.push(e.customProgramCacheKey),n.join()},getUniforms:function(t){const e=p[t.type];let n;if(e){const t=oi[e];n=Vn.clone(t.uniforms)}else n=t.uniforms;return n},acquireProgram:function(e,n){let i;for(let t=0,e=s.length;t<e;t++){const e=s[t];if(e.cacheKey===n){i=e,++i.usedTimes;break}}return void 0===i&&(i=new zr(t,n,e,r),s.push(i)),i},releaseProgram:function(t){if(0==--t.usedTimes){const e=s.indexOf(t);s[e]=s[s.length-1],s.pop(),t.destroy()}},programs:s}}function Br(){let t=new WeakMap;return{get:function(e){let n=t.get(e);return void 0===n&&(n={},t.set(e,n)),n},remove:function(e){t.delete(e)},update:function(e,n,i){t.get(e)[n]=i},dispose:function(){t=new WeakMap}}}function Hr(t,e){return t.groupOrder!==e.groupOrder?t.groupOrder-e.groupOrder:t.renderOrder!==e.renderOrder?t.renderOrder-e.renderOrder:t.program!==e.program?t.program.id-e.program.id:t.material.id!==e.material.id?t.material.id-e.material.id:t.z!==e.z?t.z-e.z:t.id-e.id}function Fr(t,e){return t.groupOrder!==e.groupOrder?t.groupOrder-e.groupOrder:t.renderOrder!==e.renderOrder?t.renderOrder-e.renderOrder:t.z!==e.z?e.z-t.z:t.id-e.id}function kr(t){const e=[];let n=0;const i=[],r=[],o={id:-1};function s(i,r,s,a,c,l){let h=e[n];const u=t.get(s);return void 0===h?(h={id:i.id,object:i,geometry:r,material:s,program:u.program||o,groupOrder:a,renderOrder:i.renderOrder,z:c,group:l},e[n]=h):(h.id=i.id,h.object=i,h.geometry=r,h.material=s,h.program=u.program||o,h.groupOrder=a,h.renderOrder=i.renderOrder,h.z=c,h.group=l),n++,h}return{opaque:i,transparent:r,init:function(){n=0,i.length=0,r.length=0},push:function(t,e,n,o,a,c){const l=s(t,e,n,o,a,c);(!0===n.transparent?r:i).push(l)},unshift:function(t,e,n,o,a,c){const l=s(t,e,n,o,a,c);(!0===n.transparent?r:i).unshift(l)},finish:function(){for(let t=n,i=e.length;t<i;t++){const n=e[t];if(null===n.id)break;n.id=null,n.object=null,n.geometry=null,n.material=null,n.program=null,n.group=null}},sort:function(t,e){i.length>1&&i.sort(t||Hr),r.length>1&&r.sort(e||Fr)}}}function Gr(t){let e=new WeakMap;return{get:function(n,i){const r=e.get(n);let o;return void 0===r?(o=new kr(t),e.set(n,new WeakMap),e.get(n).set(i,o)):(o=r.get(i),void 0===o&&(o=new kr(t),r.set(i,o))),o},dispose:function(){e=new WeakMap}}}function Vr(){const t={};return{get:function(e){if(void 0!==t[e.id])return t[e.id];let n;switch(e.type){case"DirectionalLight":n={direction:new Et,color:new qe};break;case"SpotLight":n={position:new Et,direction:new Et,color:new qe,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":n={position:new Et,color:new qe,distance:0,decay:0};break;case"HemisphereLight":n={direction:new Et,skyColor:new qe,groundColor:new qe};break;case"RectAreaLight":n={color:new qe,position:new Et,halfWidth:new Et,halfHeight:new Et}}return t[e.id]=n,n}}}let jr=0;function Wr(t,e){return(e.castShadow?1:0)-(t.castShadow?1:0)}function qr(){const t=new Vr,e=function(){const t={};return{get:function(e){if(void 0!==t[e.id])return t[e.id];let n;switch(e.type){case"DirectionalLight":case"SpotLight":n={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new mt};break;case"PointLight":n={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new mt,shadowCameraNear:1,shadowCameraFar:1e3}}return t[e.id]=n,n}}}(),n={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotShadow:[],spotShadowMap:[],spotShadowMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[]};for(let t=0;t<9;t++)n.probe.push(new Et);const i=new Et,r=new Kt,o=new Kt;return{setup:function(s,a,c){let l=0,h=0,u=0;for(let t=0;t<9;t++)n.probe[t].set(0,0,0);let d=0,p=0,f=0,m=0,g=0,v=0,y=0,x=0;const _=c.matrixWorldInverse;s.sort(Wr);for(let a=0,c=s.length;a<c;a++){const c=s[a],b=c.color,w=c.intensity,M=c.distance,S=c.shadow&&c.shadow.map?c.shadow.map.texture:null;if(c.isAmbientLight)l+=b.r*w,h+=b.g*w,u+=b.b*w;else if(c.isLightProbe)for(let t=0;t<9;t++)n.probe[t].addScaledVector(c.sh.coefficients[t],w);else if(c.isDirectionalLight){const r=t.get(c);if(r.color.copy(c.color).multiplyScalar(c.intensity),r.direction.setFromMatrixPosition(c.matrixWorld),i.setFromMatrixPosition(c.target.matrixWorld),r.direction.sub(i),r.direction.transformDirection(_),c.castShadow){const t=c.shadow,i=e.get(c);i.shadowBias=t.bias,i.shadowNormalBias=t.normalBias,i.shadowRadius=t.radius,i.shadowMapSize=t.mapSize,n.directionalShadow[d]=i,n.directionalShadowMap[d]=S,n.directionalShadowMatrix[d]=c.shadow.matrix,v++}n.directional[d]=r,d++}else if(c.isSpotLight){const r=t.get(c);if(r.position.setFromMatrixPosition(c.matrixWorld),r.position.applyMatrix4(_),r.color.copy(b).multiplyScalar(w),r.distance=M,r.direction.setFromMatrixPosition(c.matrixWorld),i.setFromMatrixPosition(c.target.matrixWorld),r.direction.sub(i),r.direction.transformDirection(_),r.coneCos=Math.cos(c.angle),r.penumbraCos=Math.cos(c.angle*(1-c.penumbra)),r.decay=c.decay,c.castShadow){const t=c.shadow,i=e.get(c);i.shadowBias=t.bias,i.shadowNormalBias=t.normalBias,i.shadowRadius=t.radius,i.shadowMapSize=t.mapSize,n.spotShadow[f]=i,n.spotShadowMap[f]=S,n.spotShadowMatrix[f]=c.shadow.matrix,x++}n.spot[f]=r,f++}else if(c.isRectAreaLight){const e=t.get(c);e.color.copy(b).multiplyScalar(w),e.position.setFromMatrixPosition(c.matrixWorld),e.position.applyMatrix4(_),o.identity(),r.copy(c.matrixWorld),r.premultiply(_),o.extractRotation(r),e.halfWidth.set(.5*c.width,0,0),e.halfHeight.set(0,.5*c.height,0),e.halfWidth.applyMatrix4(o),e.halfHeight.applyMatrix4(o),n.rectArea[m]=e,m++}else if(c.isPointLight){const i=t.get(c);if(i.position.setFromMatrixPosition(c.matrixWorld),i.position.applyMatrix4(_),i.color.copy(c.color).multiplyScalar(c.intensity),i.distance=c.distance,i.decay=c.decay,c.castShadow){const t=c.shadow,i=e.get(c);i.shadowBias=t.bias,i.shadowNormalBias=t.normalBias,i.shadowRadius=t.radius,i.shadowMapSize=t.mapSize,i.shadowCameraNear=t.camera.near,i.shadowCameraFar=t.camera.far,n.pointShadow[p]=i,n.pointShadowMap[p]=S,n.pointShadowMatrix[p]=c.shadow.matrix,y++}n.point[p]=i,p++}else if(c.isHemisphereLight){const e=t.get(c);e.direction.setFromMatrixPosition(c.matrixWorld),e.direction.transformDirection(_),e.direction.normalize(),e.skyColor.copy(c.color).multiplyScalar(w),e.groundColor.copy(c.groundColor).multiplyScalar(w),n.hemi[g]=e,g++}}m>0&&(n.rectAreaLTC1=ri.LTC_1,n.rectAreaLTC2=ri.LTC_2),n.ambient[0]=l,n.ambient[1]=h,n.ambient[2]=u;const b=n.hash;b.directionalLength===d&&b.pointLength===p&&b.spotLength===f&&b.rectAreaLength===m&&b.hemiLength===g&&b.numDirectionalShadows===v&&b.numPointShadows===y&&b.numSpotShadows===x||(n.directional.length=d,n.spot.length=f,n.rectArea.length=m,n.point.length=p,n.hemi.length=g,n.directionalShadow.length=v,n.directionalShadowMap.length=v,n.pointShadow.length=y,n.pointShadowMap.length=y,n.spotShadow.length=x,n.spotShadowMap.length=x,n.directionalShadowMatrix.length=v,n.pointShadowMatrix.length=y,n.spotShadowMatrix.length=x,b.directionalLength=d,b.pointLength=p,b.spotLength=f,b.rectAreaLength=m,b.hemiLength=g,b.numDirectionalShadows=v,b.numPointShadows=y,b.numSpotShadows=x,n.version=jr++)},state:n}}function Xr(){const t=new qr,e=[],n=[];return{init:function(){e.length=0,n.length=0},state:{lightsArray:e,shadowsArray:n,lights:t},setupLights:function(i){t.setup(e,n,i)},pushLight:function(t){e.push(t)},pushShadow:function(t){n.push(t)}}}function Yr(){let t=new WeakMap;return{get:function(e,n){let i;return!1===t.has(e)?(i=new Xr,t.set(e,new WeakMap),t.get(e).set(n,i)):!1===t.get(e).has(n)?(i=new Xr,t.get(e).set(n,i)):i=t.get(e).get(n),i},dispose:function(){t=new WeakMap}}}function Zr(t){Ze.call(this),this.type="MeshDepthMaterial",this.depthPacking=3200,this.skinning=!1,this.morphTargets=!1,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.setValues(t)}function $r(t){Ze.call(this),this.type="MeshDistanceMaterial",this.referencePosition=new Et,this.nearDistance=1,this.farDistance=1e3,this.skinning=!1,this.morphTargets=!1,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.fog=!1,this.setValues(t)}Zr.prototype=Object.create(Ze.prototype),Zr.prototype.constructor=Zr,Zr.prototype.isMeshDepthMaterial=!0,Zr.prototype.copy=function(t){return Ze.prototype.copy.call(this,t),this.depthPacking=t.depthPacking,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.map=t.map,this.alphaMap=t.alphaMap,this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this},$r.prototype=Object.create(Ze.prototype),$r.prototype.constructor=$r,$r.prototype.isMeshDistanceMaterial=!0,$r.prototype.copy=function(t){return Ze.prototype.copy.call(this,t),this.referencePosition.copy(t.referencePosition),this.nearDistance=t.nearDistance,this.farDistance=t.farDistance,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.map=t.map,this.alphaMap=t.alphaMap,this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this};function Jr(t,e,n){let i=new Kn;const r=new mt,o=new mt,s=new bt,a=[],c=[],l={},h={0:1,1:0,2:2},u=new jn({defines:{SAMPLE_RATE:2/8,HALF_SAMPLE_RATE:1/8},uniforms:{shadow_pass:{value:null},resolution:{value:new mt},radius:{value:4}},vertexShader:"void main() {\n\tgl_Position = vec4( position, 1.0 );\n}",fragmentShader:"uniform sampler2D shadow_pass;\nuniform vec2 resolution;\nuniform float radius;\n#include <packing>\nvoid main() {\n\tfloat mean = 0.0;\n\tfloat squared_mean = 0.0;\n\tfloat depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy ) / resolution ) );\n\tfor ( float i = -1.0; i < 1.0 ; i += SAMPLE_RATE) {\n\t\t#ifdef HORIZONAL_PASS\n\t\t\tvec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( i, 0.0 ) * radius ) / resolution ) );\n\t\t\tmean += distribution.x;\n\t\t\tsquared_mean += distribution.y * distribution.y + distribution.x * distribution.x;\n\t\t#else\n\t\t\tfloat depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, i ) * radius ) / resolution ) );\n\t\t\tmean += depth;\n\t\t\tsquared_mean += depth * depth;\n\t\t#endif\n\t}\n\tmean = mean * HALF_SAMPLE_RATE;\n\tsquared_mean = squared_mean * HALF_SAMPLE_RATE;\n\tfloat std_dev = sqrt( squared_mean - mean * mean );\n\tgl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );\n}"}),d=u.clone();d.defines.HORIZONAL_PASS=1;const p=new xn;p.setAttribute("position",new Ke(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));const f=new Un(p,u),m=this;function g(n,i){const r=e.update(f);u.uniforms.shadow_pass.value=n.map.texture,u.uniforms.resolution.value=n.mapSize,u.uniforms.radius.value=n.radius,t.setRenderTarget(n.mapPass),t.clear(),t.renderBufferDirect(i,null,r,u,f,null),d.uniforms.shadow_pass.value=n.mapPass.texture,d.uniforms.resolution.value=n.mapSize,d.uniforms.radius.value=n.radius,t.setRenderTarget(n.map),t.clear(),t.renderBufferDirect(i,null,r,d,f,null)}function v(t,e,n){const i=t<<0|e<<1|n<<2;let r=a[i];return void 0===r&&(r=new Zr({depthPacking:3201,morphTargets:t,skinning:e}),a[i]=r),r}function y(t,e,n){const i=t<<0|e<<1|n<<2;let r=c[i];return void 0===r&&(r=new $r({morphTargets:t,skinning:e}),c[i]=r),r}function x(e,n,i,r,o,s,a){let c=null,u=v,d=e.customDepthMaterial;if(!0===r.isPointLight&&(u=y,d=e.customDistanceMaterial),void 0===d){let t=!1;!0===i.morphTargets&&(t=n.morphAttributes&&n.morphAttributes.position&&n.morphAttributes.position.length>0);let r=!1;!0===e.isSkinnedMesh&&(!0===i.skinning?r=!0:console.warn("THREE.WebGLShadowMap: THREE.SkinnedMesh with material.skinning set to false:",e));c=u(t,r,!0===e.isInstancedMesh)}else c=d;if(t.localClippingEnabled&&!0===i.clipShadows&&0!==i.clippingPlanes.length){const t=c.uuid,e=i.uuid;let n=l[t];void 0===n&&(n={},l[t]=n);let r=n[e];void 0===r&&(r=c.clone(),n[e]=r),c=r}return c.visible=i.visible,c.wireframe=i.wireframe,c.side=3===a?null!==i.shadowSide?i.shadowSide:i.side:null!==i.shadowSide?i.shadowSide:h[i.side],c.clipShadows=i.clipShadows,c.clippingPlanes=i.clippingPlanes,c.clipIntersection=i.clipIntersection,c.wireframeLinewidth=i.wireframeLinewidth,c.linewidth=i.linewidth,!0===r.isPointLight&&!0===c.isMeshDistanceMaterial&&(c.referencePosition.setFromMatrixPosition(r.matrixWorld),c.nearDistance=o,c.farDistance=s),c}function _(n,r,o,s,a){if(!1===n.visible)return;if(n.layers.test(r.layers)&&(n.isMesh||n.isLine||n.isPoints)&&(n.castShadow||n.receiveShadow&&3===a)&&(!n.frustumCulled||i.intersectsObject(n))){n.modelViewMatrix.multiplyMatrices(o.matrixWorldInverse,n.matrixWorld);const i=e.update(n),r=n.material;if(Array.isArray(r)){const e=i.groups;for(let c=0,l=e.length;c<l;c++){const l=e[c],h=r[l.materialIndex];if(h&&h.visible){const e=x(n,i,h,s,o.near,o.far,a);t.renderBufferDirect(o,null,i,e,n,l)}}}else if(r.visible){const e=x(n,i,r,s,o.near,o.far,a);t.renderBufferDirect(o,null,i,e,n,null)}}const c=n.children;for(let t=0,e=c.length;t<e;t++)_(c[t],r,o,s,a)}this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=1,this.render=function(e,a,c){if(!1===m.enabled)return;if(!1===m.autoUpdate&&!1===m.needsUpdate)return;if(0===e.length)return;const l=t.getRenderTarget(),h=t.getActiveCubeFace(),u=t.getActiveMipmapLevel(),d=t.state;d.setBlending(0),d.buffers.color.setClear(1,1,1,1),d.buffers.depth.setTest(!0),d.setScissorTest(!1);for(let l=0,h=e.length;l<h;l++){const h=e[l],u=h.shadow;if(void 0===u){console.warn("THREE.WebGLShadowMap:",h,"has no shadow.");continue}if(!1===u.autoUpdate&&!1===u.needsUpdate)continue;r.copy(u.mapSize);const p=u.getFrameExtents();if(r.multiply(p),o.copy(u.mapSize),(r.x>n||r.y>n)&&(r.x>n&&(o.x=Math.floor(n/p.x),r.x=o.x*p.x,u.mapSize.x=o.x),r.y>n&&(o.y=Math.floor(n/p.y),r.y=o.y*p.y,u.mapSize.y=o.y)),null===u.map&&!u.isPointLightShadow&&3===this.type){const t={minFilter:1006,magFilter:1006,format:1023};u.map=new wt(r.x,r.y,t),u.map.texture.name=h.name+".shadowMap",u.mapPass=new wt(r.x,r.y,t),u.camera.updateProjectionMatrix()}if(null===u.map){const t={minFilter:1003,magFilter:1003,format:1023};u.map=new wt(r.x,r.y,t),u.map.texture.name=h.name+".shadowMap",u.camera.updateProjectionMatrix()}t.setRenderTarget(u.map),t.clear();const f=u.getViewportCount();for(let t=0;t<f;t++){const e=u.getViewport(t);s.set(o.x*e.x,o.y*e.y,o.x*e.z,o.y*e.w),d.viewport(s),u.updateMatrices(h,t),i=u.getFrustum(),_(a,c,u.camera,h,this.type)}u.isPointLightShadow||3!==this.type||g(u,c),u.needsUpdate=!1}m.needsUpdate=!1,t.setRenderTarget(l,h,u)}}function Qr(t,e,n){const i=n.isWebGL2;const r=new function(){let e=!1;const n=new bt;let i=null;const r=new bt(0,0,0,0);return{setMask:function(n){i===n||e||(t.colorMask(n,n,n,n),i=n)},setLocked:function(t){e=t},setClear:function(e,i,o,s,a){!0===a&&(e*=s,i*=s,o*=s),n.set(e,i,o,s),!1===r.equals(n)&&(t.clearColor(e,i,o,s),r.copy(n))},reset:function(){e=!1,i=null,r.set(-1,0,0,0)}}},o=new function(){let e=!1,n=null,i=null,r=null;return{setTest:function(t){t?O(2929):I(2929)},setMask:function(i){n===i||e||(t.depthMask(i),n=i)},setFunc:function(e){if(i!==e){if(e)switch(e){case 0:t.depthFunc(512);break;case 1:t.depthFunc(519);break;case 2:t.depthFunc(513);break;case 3:t.depthFunc(515);break;case 4:t.depthFunc(514);break;case 5:t.depthFunc(518);break;case 6:t.depthFunc(516);break;case 7:t.depthFunc(517);break;default:t.depthFunc(515)}else t.depthFunc(515);i=e}},setLocked:function(t){e=t},setClear:function(e){r!==e&&(t.clearDepth(e),r=e)},reset:function(){e=!1,n=null,i=null,r=null}}},s=new function(){let e=!1,n=null,i=null,r=null,o=null,s=null,a=null,c=null,l=null;return{setTest:function(t){e||(t?O(2960):I(2960))},setMask:function(i){n===i||e||(t.stencilMask(i),n=i)},setFunc:function(e,n,s){i===e&&r===n&&o===s||(t.stencilFunc(e,n,s),i=e,r=n,o=s)},setOp:function(e,n,i){s===e&&a===n&&c===i||(t.stencilOp(e,n,i),s=e,a=n,c=i)},setLocked:function(t){e=t},setClear:function(e){l!==e&&(t.clearStencil(e),l=e)},reset:function(){e=!1,n=null,i=null,r=null,o=null,s=null,a=null,c=null,l=null}}};let a={},c=null,l=null,h=null,u=null,d=null,p=null,f=null,m=null,g=null,v=!1,y=null,x=null,_=null,b=null,w=null;const M=t.getParameter(35661);let S=!1,E=0;const T=t.getParameter(7938);-1!==T.indexOf("WebGL")?(E=parseFloat(/^WebGL\ ([0-9])/.exec(T)[1]),S=E>=1):-1!==T.indexOf("OpenGL ES")&&(E=parseFloat(/^OpenGL\ ES\ ([0-9])/.exec(T)[1]),S=E>=2);let A=null,L={};const R=new bt,P=new bt;function C(e,n,i){const r=new Uint8Array(4),o=t.createTexture();t.bindTexture(e,o),t.texParameteri(e,10241,9728),t.texParameteri(e,10240,9728);for(let e=0;e<i;e++)t.texImage2D(n+e,0,6408,1,1,0,6408,5121,r);return o}const N={};function O(e){!0!==a[e]&&(t.enable(e),a[e]=!0)}function I(e){!1!==a[e]&&(t.disable(e),a[e]=!1)}N[3553]=C(3553,3553,1),N[34067]=C(34067,34069,6),r.setClear(0,0,0,1),o.setClear(1),s.setClear(0),O(2929),o.setFunc(3),B(!1),H(1),O(2884),U(0);const D={100:32774,101:32778,102:32779};if(i)D[103]=32775,D[104]=32776;else{const t=e.get("EXT_blend_minmax");null!==t&&(D[103]=t.MIN_EXT,D[104]=t.MAX_EXT)}const z={200:0,201:1,202:768,204:770,210:776,208:774,206:772,203:769,205:771,209:775,207:773};function U(e,n,i,r,o,s,a,c){if(0!==e){if(l||(O(3042),l=!0),5===e)o=o||n,s=s||i,a=a||r,n===u&&o===f||(t.blendEquationSeparate(D[n],D[o]),u=n,f=o),i===d&&r===p&&s===m&&a===g||(t.blendFuncSeparate(z[i],z[r],z[s],z[a]),d=i,p=r,m=s,g=a),h=e,v=null;else if(e!==h||c!==v){if(100===u&&100===f||(t.blendEquation(32774),u=100,f=100),c)switch(e){case 1:t.blendFuncSeparate(1,771,1,771);break;case 2:t.blendFunc(1,1);break;case 3:t.blendFuncSeparate(0,0,769,771);break;case 4:t.blendFuncSeparate(0,768,0,770);break;default:console.error("THREE.WebGLState: Invalid blending: ",e)}else switch(e){case 1:t.blendFuncSeparate(770,771,1,771);break;case 2:t.blendFunc(770,1);break;case 3:t.blendFunc(0,769);break;case 4:t.blendFunc(0,768);break;default:console.error("THREE.WebGLState: Invalid blending: ",e)}d=null,p=null,m=null,g=null,h=e,v=c}}else l&&(I(3042),l=!1)}function B(e){y!==e&&(e?t.frontFace(2304):t.frontFace(2305),y=e)}function H(e){0!==e?(O(2884),e!==x&&(1===e?t.cullFace(1029):2===e?t.cullFace(1028):t.cullFace(1032))):I(2884),x=e}function F(e,n,i){e?(O(32823),b===n&&w===i||(t.polygonOffset(n,i),b=n,w=i)):I(32823)}function k(e){void 0===e&&(e=33984+M-1),A!==e&&(t.activeTexture(e),A=e)}return{buffers:{color:r,depth:o,stencil:s},enable:O,disable:I,useProgram:function(e){return c!==e&&(t.useProgram(e),c=e,!0)},setBlending:U,setMaterial:function(t,e){2===t.side?I(2884):O(2884);let n=1===t.side;e&&(n=!n),B(n),1===t.blending&&!1===t.transparent?U(0):U(t.blending,t.blendEquation,t.blendSrc,t.blendDst,t.blendEquationAlpha,t.blendSrcAlpha,t.blendDstAlpha,t.premultipliedAlpha),o.setFunc(t.depthFunc),o.setTest(t.depthTest),o.setMask(t.depthWrite),r.setMask(t.colorWrite);const i=t.stencilWrite;s.setTest(i),i&&(s.setMask(t.stencilWriteMask),s.setFunc(t.stencilFunc,t.stencilRef,t.stencilFuncMask),s.setOp(t.stencilFail,t.stencilZFail,t.stencilZPass)),F(t.polygonOffset,t.polygonOffsetFactor,t.polygonOffsetUnits)},setFlipSided:B,setCullFace:H,setLineWidth:function(e){e!==_&&(S&&t.lineWidth(e),_=e)},setPolygonOffset:F,setScissorTest:function(t){t?O(3089):I(3089)},activeTexture:k,bindTexture:function(e,n){null===A&&k();let i=L[A];void 0===i&&(i={type:void 0,texture:void 0},L[A]=i),i.type===e&&i.texture===n||(t.bindTexture(e,n||N[e]),i.type=e,i.texture=n)},unbindTexture:function(){const e=L[A];void 0!==e&&void 0!==e.type&&(t.bindTexture(e.type,null),e.type=void 0,e.texture=void 0)},compressedTexImage2D:function(){try{t.compressedTexImage2D.apply(t,arguments)}catch(t){console.error("THREE.WebGLState:",t)}},texImage2D:function(){try{t.texImage2D.apply(t,arguments)}catch(t){console.error("THREE.WebGLState:",t)}},texImage3D:function(){try{t.texImage3D.apply(t,arguments)}catch(t){console.error("THREE.WebGLState:",t)}},scissor:function(e){!1===R.equals(e)&&(t.scissor(e.x,e.y,e.z,e.w),R.copy(e))},viewport:function(e){!1===P.equals(e)&&(t.viewport(e.x,e.y,e.z,e.w),P.copy(e))},reset:function(){a={},A=null,L={},c=null,h=null,y=null,x=null,r.reset(),o.reset(),s.reset()}}}function Kr(t,e,n,i,r,o,s){const a=r.isWebGL2,c=r.maxTextures,l=r.maxCubemapSize,h=r.maxTextureSize,u=r.maxSamples,d=new WeakMap;let p,f=!1;try{f="undefined"!=typeof OffscreenCanvas&&null!==new OffscreenCanvas(1,1).getContext("2d")}catch(t){}function m(t,e){return f?new OffscreenCanvas(t,e):document.createElementNS("http://www.w3.org/1999/xhtml","canvas")}function g(t,e,n,i){let r=1;if((t.width>i||t.height>i)&&(r=i/Math.max(t.width,t.height)),r<1||!0===e){if("undefined"!=typeof HTMLImageElement&&t instanceof HTMLImageElement||"undefined"!=typeof HTMLCanvasElement&&t instanceof HTMLCanvasElement||"undefined"!=typeof ImageBitmap&&t instanceof ImageBitmap){const i=e?ft.floorPowerOfTwo:Math.floor,o=i(r*t.width),s=i(r*t.height);void 0===p&&(p=m(o,s));const a=n?m(o,s):p;a.width=o,a.height=s;return a.getContext("2d").drawImage(t,0,0,o,s),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+t.width+"x"+t.height+") to ("+o+"x"+s+")."),a}return"data"in t&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+t.width+"x"+t.height+")."),t}return t}function v(t){return ft.isPowerOfTwo(t.width)&&ft.isPowerOfTwo(t.height)}function y(t,e){return t.generateMipmaps&&e&&1003!==t.minFilter&&1006!==t.minFilter}function x(e,n,r,o){t.generateMipmap(e);i.get(n).__maxMipLevel=Math.log(Math.max(r,o))*Math.LOG2E}function _(n,i,r){if(!1===a)return i;if(null!==n){if(void 0!==t[n])return t[n];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+n+"'")}let o=i;return 6403===i&&(5126===r&&(o=33326),5131===r&&(o=33325),5121===r&&(o=33321)),6407===i&&(5126===r&&(o=34837),5131===r&&(o=34843),5121===r&&(o=32849)),6408===i&&(5126===r&&(o=34836),5131===r&&(o=34842),5121===r&&(o=32856)),33325!==o&&33326!==o&&34842!==o&&34836!==o||e.get("EXT_color_buffer_float"),o}function b(t){return 1003===t||1004===t||1005===t?9728:9729}function w(e){const n=e.target;n.removeEventListener("dispose",w),function(e){const n=i.get(e);if(void 0===n.__webglInit)return;t.deleteTexture(n.__webglTexture),i.remove(e)}(n),n.isVideoTexture&&d.delete(n),s.memory.textures--}function M(e){const n=e.target;n.removeEventListener("dispose",M),function(e){const n=i.get(e),r=i.get(e.texture);if(!e)return;void 0!==r.__webglTexture&&t.deleteTexture(r.__webglTexture);e.depthTexture&&e.depthTexture.dispose();if(e.isWebGLCubeRenderTarget)for(let e=0;e<6;e++)t.deleteFramebuffer(n.__webglFramebuffer[e]),n.__webglDepthbuffer&&t.deleteRenderbuffer(n.__webglDepthbuffer[e]);else t.deleteFramebuffer(n.__webglFramebuffer),n.__webglDepthbuffer&&t.deleteRenderbuffer(n.__webglDepthbuffer),n.__webglMultisampledFramebuffer&&t.deleteFramebuffer(n.__webglMultisampledFramebuffer),n.__webglColorRenderbuffer&&t.deleteRenderbuffer(n.__webglColorRenderbuffer),n.__webglDepthRenderbuffer&&t.deleteRenderbuffer(n.__webglDepthRenderbuffer);i.remove(e.texture),i.remove(e)}(n),s.memory.textures--}let S=0;function E(t,e){const r=i.get(t);if(t.isVideoTexture&&function(t){const e=s.render.frame;d.get(t)!==e&&(d.set(t,e),t.update())}(t),t.version>0&&r.__version!==t.version){const n=t.image;if(void 0===n)console.warn("THREE.WebGLRenderer: Texture marked for update but image is undefined");else{if(!1!==n.complete)return void C(r,t,e);console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete")}}n.activeTexture(33984+e),n.bindTexture(3553,r.__webglTexture)}function T(e,r){const s=i.get(e);e.version>0&&s.__version!==e.version?function(e,i,r){if(6!==i.image.length)return;P(e,i),n.activeTexture(33984+r),n.bindTexture(34067,e.__webglTexture),t.pixelStorei(37440,i.flipY);const s=i&&(i.isCompressedTexture||i.image[0].isCompressedTexture),c=i.image[0]&&i.image[0].isDataTexture,h=[];for(let t=0;t<6;t++)h[t]=s||c?c?i.image[t].image:i.image[t]:g(i.image[t],!1,!0,l);const u=h[0],d=v(u)||a,p=o.convert(i.format),f=o.convert(i.type),m=_(i.internalFormat,p,f);let b;if(R(34067,i,d),s){for(let t=0;t<6;t++){b=h[t].mipmaps;for(let e=0;e<b.length;e++){const r=b[e];1023!==i.format&&1022!==i.format?null!==p?n.compressedTexImage2D(34069+t,e,m,r.width,r.height,0,r.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):n.texImage2D(34069+t,e,m,r.width,r.height,0,p,f,r.data)}}e.__maxMipLevel=b.length-1}else{b=i.mipmaps;for(let t=0;t<6;t++)if(c){n.texImage2D(34069+t,0,m,h[t].width,h[t].height,0,p,f,h[t].data);for(let e=0;e<b.length;e++){const i=b[e].image[t].image;n.texImage2D(34069+t,e+1,m,i.width,i.height,0,p,f,i.data)}}else{n.texImage2D(34069+t,0,m,p,f,h[t]);for(let e=0;e<b.length;e++){const i=b[e];n.texImage2D(34069+t,e+1,m,p,f,i.image[t])}}e.__maxMipLevel=b.length}y(i,d)&&x(34067,i,u.width,u.height);e.__version=i.version,i.onUpdate&&i.onUpdate(i)}(s,e,r):(n.activeTexture(33984+r),n.bindTexture(34067,s.__webglTexture))}const A={1e3:10497,1001:33071,1002:33648},L={1003:9728,1004:9984,1005:9986,1006:9729,1007:9985,1008:9987};function R(n,o,s){s?(t.texParameteri(n,10242,A[o.wrapS]),t.texParameteri(n,10243,A[o.wrapT]),32879!==n&&35866!==n||t.texParameteri(n,32882,A[o.wrapR]),t.texParameteri(n,10240,L[o.magFilter]),t.texParameteri(n,10241,L[o.minFilter])):(t.texParameteri(n,10242,33071),t.texParameteri(n,10243,33071),32879!==n&&35866!==n||t.texParameteri(n,32882,33071),1001===o.wrapS&&1001===o.wrapT||console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping."),t.texParameteri(n,10240,b(o.magFilter)),t.texParameteri(n,10241,b(o.minFilter)),1003!==o.minFilter&&1006!==o.minFilter&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter."));const c=e.get("EXT_texture_filter_anisotropic");if(c){if(1015===o.type&&null===e.get("OES_texture_float_linear"))return;if(1016===o.type&&null===(a||e.get("OES_texture_half_float_linear")))return;(o.anisotropy>1||i.get(o).__currentAnisotropy)&&(t.texParameterf(n,c.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(o.anisotropy,r.getMaxAnisotropy())),i.get(o).__currentAnisotropy=o.anisotropy)}}function P(e,n){void 0===e.__webglInit&&(e.__webglInit=!0,n.addEventListener("dispose",w),e.__webglTexture=t.createTexture(),s.memory.textures++)}function C(e,i,r){let s=3553;i.isDataTexture2DArray&&(s=35866),i.isDataTexture3D&&(s=32879),P(e,i),n.activeTexture(33984+r),n.bindTexture(s,e.__webglTexture),t.pixelStorei(37440,i.flipY),t.pixelStorei(37441,i.premultiplyAlpha),t.pixelStorei(3317,i.unpackAlignment);const c=function(t){return!a&&(1001!==t.wrapS||1001!==t.wrapT||1003!==t.minFilter&&1006!==t.minFilter)}(i)&&!1===v(i.image),l=g(i.image,c,!1,h),u=v(l)||a,d=o.convert(i.format);let p,f=o.convert(i.type),m=_(i.internalFormat,d,f);R(s,i,u);const b=i.mipmaps;if(i.isDepthTexture)m=6402,a?m=1015===i.type?36012:1014===i.type?33190:1020===i.type?35056:33189:1015===i.type&&console.error("WebGLRenderer: Floating point depth texture requires WebGL2."),1026===i.format&&6402===m&&1012!==i.type&&1014!==i.type&&(console.warn("THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture."),i.type=1012,f=o.convert(i.type)),1027===i.format&&6402===m&&(m=34041,1020!==i.type&&(console.warn("THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture."),i.type=1020,f=o.convert(i.type))),n.texImage2D(3553,0,m,l.width,l.height,0,d,f,null);else if(i.isDataTexture)if(b.length>0&&u){for(let t=0,e=b.length;t<e;t++)p=b[t],n.texImage2D(3553,t,m,p.width,p.height,0,d,f,p.data);i.generateMipmaps=!1,e.__maxMipLevel=b.length-1}else n.texImage2D(3553,0,m,l.width,l.height,0,d,f,l.data),e.__maxMipLevel=0;else if(i.isCompressedTexture){for(let t=0,e=b.length;t<e;t++)p=b[t],1023!==i.format&&1022!==i.format?null!==d?n.compressedTexImage2D(3553,t,m,p.width,p.height,0,p.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):n.texImage2D(3553,t,m,p.width,p.height,0,d,f,p.data);e.__maxMipLevel=b.length-1}else if(i.isDataTexture2DArray)n.texImage3D(35866,0,m,l.width,l.height,l.depth,0,d,f,l.data),e.__maxMipLevel=0;else if(i.isDataTexture3D)n.texImage3D(32879,0,m,l.width,l.height,l.depth,0,d,f,l.data),e.__maxMipLevel=0;else if(b.length>0&&u){for(let t=0,e=b.length;t<e;t++)p=b[t],n.texImage2D(3553,t,m,d,f,p);i.generateMipmaps=!1,e.__maxMipLevel=b.length-1}else n.texImage2D(3553,0,m,d,f,l),e.__maxMipLevel=0;y(i,u)&&x(s,i,l.width,l.height),e.__version=i.version,i.onUpdate&&i.onUpdate(i)}function N(e,r,s,a){const c=o.convert(r.texture.format),l=o.convert(r.texture.type),h=_(r.texture.internalFormat,c,l);n.texImage2D(a,0,h,r.width,r.height,0,c,l,null),t.bindFramebuffer(36160,e),t.framebufferTexture2D(36160,s,a,i.get(r.texture).__webglTexture,0),t.bindFramebuffer(36160,null)}function O(e,n,i){if(t.bindRenderbuffer(36161,e),n.depthBuffer&&!n.stencilBuffer){let r=33189;if(i){const e=n.depthTexture;e&&e.isDepthTexture&&(1015===e.type?r=36012:1014===e.type&&(r=33190));const i=D(n);t.renderbufferStorageMultisample(36161,i,r,n.width,n.height)}else t.renderbufferStorage(36161,r,n.width,n.height);t.framebufferRenderbuffer(36160,36096,36161,e)}else if(n.depthBuffer&&n.stencilBuffer){if(i){const e=D(n);t.renderbufferStorageMultisample(36161,e,35056,n.width,n.height)}else t.renderbufferStorage(36161,34041,n.width,n.height);t.framebufferRenderbuffer(36160,33306,36161,e)}else{const e=o.convert(n.texture.format),r=o.convert(n.texture.type),s=_(n.texture.internalFormat,e,r);if(i){const e=D(n);t.renderbufferStorageMultisample(36161,e,s,n.width,n.height)}else t.renderbufferStorage(36161,s,n.width,n.height)}t.bindRenderbuffer(36161,null)}function I(e){const n=i.get(e),r=!0===e.isWebGLCubeRenderTarget;if(e.depthTexture){if(r)throw new Error("target.depthTexture not supported in Cube render targets");!function(e,n){if(n&&n.isWebGLCubeRenderTarget)throw new Error("Depth Texture with cube render targets is not supported");if(t.bindFramebuffer(36160,e),!n.depthTexture||!n.depthTexture.isDepthTexture)throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");i.get(n.depthTexture).__webglTexture&&n.depthTexture.image.width===n.width&&n.depthTexture.image.height===n.height||(n.depthTexture.image.width=n.width,n.depthTexture.image.height=n.height,n.depthTexture.needsUpdate=!0),E(n.depthTexture,0);const r=i.get(n.depthTexture).__webglTexture;if(1026===n.depthTexture.format)t.framebufferTexture2D(36160,36096,3553,r,0);else{if(1027!==n.depthTexture.format)throw new Error("Unknown depthTexture format");t.framebufferTexture2D(36160,33306,3553,r,0)}}(n.__webglFramebuffer,e)}else if(r){n.__webglDepthbuffer=[];for(let i=0;i<6;i++)t.bindFramebuffer(36160,n.__webglFramebuffer[i]),n.__webglDepthbuffer[i]=t.createRenderbuffer(),O(n.__webglDepthbuffer[i],e,!1)}else t.bindFramebuffer(36160,n.__webglFramebuffer),n.__webglDepthbuffer=t.createRenderbuffer(),O(n.__webglDepthbuffer,e,!1);t.bindFramebuffer(36160,null)}function D(t){return a&&t.isWebGLMultisampleRenderTarget?Math.min(u,t.samples):0}let z=!1,U=!1;this.allocateTextureUnit=function(){const t=S;return t>=c&&console.warn("THREE.WebGLTextures: Trying to use "+t+" texture units while this GPU supports only "+c),S+=1,t},this.resetTextureUnits=function(){S=0},this.setTexture2D=E,this.setTexture2DArray=function(t,e){const r=i.get(t);t.version>0&&r.__version!==t.version?C(r,t,e):(n.activeTexture(33984+e),n.bindTexture(35866,r.__webglTexture))},this.setTexture3D=function(t,e){const r=i.get(t);t.version>0&&r.__version!==t.version?C(r,t,e):(n.activeTexture(33984+e),n.bindTexture(32879,r.__webglTexture))},this.setTextureCube=T,this.setupRenderTarget=function(e){const r=i.get(e),c=i.get(e.texture);e.addEventListener("dispose",M),c.__webglTexture=t.createTexture(),s.memory.textures++;const l=!0===e.isWebGLCubeRenderTarget,h=!0===e.isWebGLMultisampleRenderTarget,u=v(e)||a;if(!a||1022!==e.texture.format||1015!==e.texture.type&&1016!==e.texture.type||(e.texture.format=1023,console.warn("THREE.WebGLRenderer: Rendering to textures with RGB format is not supported. Using RGBA format instead.")),l){r.__webglFramebuffer=[];for(let e=0;e<6;e++)r.__webglFramebuffer[e]=t.createFramebuffer()}else if(r.__webglFramebuffer=t.createFramebuffer(),h)if(a){r.__webglMultisampledFramebuffer=t.createFramebuffer(),r.__webglColorRenderbuffer=t.createRenderbuffer(),t.bindRenderbuffer(36161,r.__webglColorRenderbuffer);const n=o.convert(e.texture.format),i=o.convert(e.texture.type),s=_(e.texture.internalFormat,n,i),a=D(e);t.renderbufferStorageMultisample(36161,a,s,e.width,e.height),t.bindFramebuffer(36160,r.__webglMultisampledFramebuffer),t.framebufferRenderbuffer(36160,36064,36161,r.__webglColorRenderbuffer),t.bindRenderbuffer(36161,null),e.depthBuffer&&(r.__webglDepthRenderbuffer=t.createRenderbuffer(),O(r.__webglDepthRenderbuffer,e,!0)),t.bindFramebuffer(36160,null)}else console.warn("THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.");if(l){n.bindTexture(34067,c.__webglTexture),R(34067,e.texture,u);for(let t=0;t<6;t++)N(r.__webglFramebuffer[t],e,36064,34069+t);y(e.texture,u)&&x(34067,e.texture,e.width,e.height),n.bindTexture(34067,null)}else n.bindTexture(3553,c.__webglTexture),R(3553,e.texture,u),N(r.__webglFramebuffer,e,36064,3553),y(e.texture,u)&&x(3553,e.texture,e.width,e.height),n.bindTexture(3553,null);e.depthBuffer&&I(e)},this.updateRenderTargetMipmap=function(t){const e=t.texture;if(y(e,v(t)||a)){const r=t.isWebGLCubeRenderTarget?34067:3553,o=i.get(e).__webglTexture;n.bindTexture(r,o),x(r,e,t.width,t.height),n.bindTexture(r,null)}},this.updateMultisampleRenderTarget=function(e){if(e.isWebGLMultisampleRenderTarget)if(a){const n=i.get(e);t.bindFramebuffer(36008,n.__webglMultisampledFramebuffer),t.bindFramebuffer(36009,n.__webglFramebuffer);const r=e.width,o=e.height;let s=16384;e.depthBuffer&&(s|=256),e.stencilBuffer&&(s|=1024),t.blitFramebuffer(0,0,r,o,0,0,r,o,s,9728),t.bindFramebuffer(36160,n.__webglMultisampledFramebuffer)}else console.warn("THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.")},this.safeSetTexture2D=function(t,e){t&&t.isWebGLRenderTarget&&(!1===z&&(console.warn("THREE.WebGLTextures.safeSetTexture2D: don't use render targets as textures. Use their .texture property instead."),z=!0),t=t.texture),E(t,e)},this.safeSetTextureCube=function(t,e){t&&t.isWebGLCubeRenderTarget&&(!1===U&&(console.warn("THREE.WebGLTextures.safeSetTextureCube: don't use cube render targets as textures. Use their .texture property instead."),U=!0),t=t.texture),T(t,e)}}function to(t,e,n){const i=n.isWebGL2;return{convert:function(t){let n;if(1009===t)return 5121;if(1017===t)return 32819;if(1018===t)return 32820;if(1019===t)return 33635;if(1010===t)return 5120;if(1011===t)return 5122;if(1012===t)return 5123;if(1013===t)return 5124;if(1014===t)return 5125;if(1015===t)return 5126;if(1016===t)return i?5131:(n=e.get("OES_texture_half_float"),null!==n?n.HALF_FLOAT_OES:null);if(1021===t)return 6406;if(1022===t)return 6407;if(1023===t)return 6408;if(1024===t)return 6409;if(1025===t)return 6410;if(1026===t)return 6402;if(1027===t)return 34041;if(1028===t)return 6403;if(1029===t)return 36244;if(1030===t)return 33319;if(1031===t)return 33320;if(1032===t)return 36248;if(1033===t)return 36249;if(33776===t||33777===t||33778===t||33779===t){if(n=e.get("WEBGL_compressed_texture_s3tc"),null===n)return null;if(33776===t)return n.COMPRESSED_RGB_S3TC_DXT1_EXT;if(33777===t)return n.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(33778===t)return n.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(33779===t)return n.COMPRESSED_RGBA_S3TC_DXT5_EXT}if(35840===t||35841===t||35842===t||35843===t){if(n=e.get("WEBGL_compressed_texture_pvrtc"),null===n)return null;if(35840===t)return n.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(35841===t)return n.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(35842===t)return n.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(35843===t)return n.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}if(36196===t)return n=e.get("WEBGL_compressed_texture_etc1"),null!==n?n.COMPRESSED_RGB_ETC1_WEBGL:null;if((37492===t||37496===t)&&(n=e.get("WEBGL_compressed_texture_etc"),null!==n)){if(37492===t)return n.COMPRESSED_RGB8_ETC2;if(37496===t)return n.COMPRESSED_RGBA8_ETC2_EAC}return 37808===t||37809===t||37810===t||37811===t||37812===t||37813===t||37814===t||37815===t||37816===t||37817===t||37818===t||37819===t||37820===t||37821===t||37840===t||37841===t||37842===t||37843===t||37844===t||37845===t||37846===t||37847===t||37848===t||37849===t||37850===t||37851===t||37852===t||37853===t?(n=e.get("WEBGL_compressed_texture_astc"),null!==n?t:null):36492===t?(n=e.get("EXT_texture_compression_bptc"),null!==n?t:null):1020===t?i?34042:(n=e.get("WEBGL_depth_texture"),null!==n?n.UNSIGNED_INT_24_8_WEBGL:null):void 0}}}function eo(t){qn.call(this),this.cameras=t||[]}function no(){Se.call(this),this.type="Group"}function io(){this._targetRay=null,this._grip=null,this._hand=null}function ro(t,e){const n=this;let i=null,r=1,o=null,s="local-floor",a=null;const c=[],l=new Map,h=new qn;h.layers.enable(1),h.viewport=new bt;const u=new qn;u.layers.enable(2),u.viewport=new bt;const d=[h,u],p=new eo;p.layers.enable(1),p.layers.enable(2);let f=null,m=null;function g(t){const e=l.get(t.inputSource);e&&e.dispatchEvent({type:t.type,data:t.inputSource})}function v(){l.forEach((function(t,e){t.disconnect(e)})),l.clear(),t.setFramebuffer(null),t.setRenderTarget(t.getRenderTarget()),S.stop(),n.isPresenting=!1,n.dispatchEvent({type:"sessionend"})}function y(t){o=t,S.setContext(i),S.start(),n.isPresenting=!0,n.dispatchEvent({type:"sessionstart"})}function x(t){const e=i.inputSources;for(let t=0;t<c.length;t++)l.set(e[t],c[t]);for(let e=0;e<t.removed.length;e++){const n=t.removed[e],i=l.get(n);i&&(i.dispatchEvent({type:"disconnected",data:n}),l.delete(n))}for(let e=0;e<t.added.length;e++){const n=t.added[e],i=l.get(n);i&&i.dispatchEvent({type:"connected",data:n})}}this.enabled=!1,this.isPresenting=!1,this.getController=function(t){let e=c[t];return void 0===e&&(e=new io,c[t]=e),e.getTargetRaySpace()},this.getControllerGrip=function(t){let e=c[t];return void 0===e&&(e=new io,c[t]=e),e.getGripSpace()},this.getHand=function(t){let e=c[t];return void 0===e&&(e=new io,c[t]=e),e.getHandSpace()},this.setFramebufferScaleFactor=function(t){r=t,!0===n.isPresenting&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")},this.setReferenceSpaceType=function(t){s=t,!0===n.isPresenting&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")},this.getReferenceSpace=function(){return o},this.getSession=function(){return i},this.setSession=function(t){if(i=t,null!==i){i.addEventListener("select",g),i.addEventListener("selectstart",g),i.addEventListener("selectend",g),i.addEventListener("squeeze",g),i.addEventListener("squeezestart",g),i.addEventListener("squeezeend",g),i.addEventListener("end",v);const t=e.getContextAttributes();!0!==t.xrCompatible&&e.makeXRCompatible();const n={antialias:t.antialias,alpha:t.alpha,depth:t.depth,stencil:t.stencil,framebufferScaleFactor:r},o=new XRWebGLLayer(i,e,n);i.updateRenderState({baseLayer:o}),i.requestReferenceSpace(s).then(y),i.addEventListener("inputsourceschange",x)}};const _=new Et,b=new Et;function w(t,e){null===e?t.matrixWorld.copy(t.matrix):t.matrixWorld.multiplyMatrices(e.matrixWorld,t.matrix),t.matrixWorldInverse.getInverse(t.matrixWorld)}this.getCamera=function(t){p.near=u.near=h.near=t.near,p.far=u.far=h.far=t.far,f===p.near&&m===p.far||(i.updateRenderState({depthNear:p.near,depthFar:p.far}),f=p.near,m=p.far);const e=t.parent,n=p.cameras;w(p,e);for(let t=0;t<n.length;t++)w(n[t],e);t.matrixWorld.copy(p.matrixWorld);const r=t.children;for(let t=0,e=r.length;t<e;t++)r[t].updateMatrixWorld(!0);return 2===n.length?function(t,e,n){_.setFromMatrixPosition(e.matrixWorld),b.setFromMatrixPosition(n.matrixWorld);const i=_.distanceTo(b),r=e.projectionMatrix.elements,o=n.projectionMatrix.elements,s=r[14]/(r[10]-1),a=r[14]/(r[10]+1),c=(r[9]+1)/r[5],l=(r[9]-1)/r[5],h=(r[8]-1)/r[0],u=(o[8]+1)/o[0],d=s*h,p=s*u,f=i/(-h+u),m=f*-h;e.matrixWorld.decompose(t.position,t.quaternion,t.scale),t.translateX(m),t.translateZ(f),t.matrixWorld.compose(t.position,t.quaternion,t.scale),t.matrixWorldInverse.getInverse(t.matrixWorld);const g=s+f,v=a+f,y=d-m,x=p+(i-m),w=c*a/v*g,M=l*a/v*g;t.projectionMatrix.makePerspective(y,x,w,M,g,v)}(p,h,u):p.projectionMatrix.copy(h.projectionMatrix),p};let M=null;const S=new ti;S.setAnimationLoop((function(e,n){if(a=n.getViewerPose(o),null!==a){const e=a.views,n=i.renderState.baseLayer;t.setFramebuffer(n.framebuffer);let r=!1;e.length!==p.cameras.length&&(p.cameras.length=0,r=!0);for(let t=0;t<e.length;t++){const i=e[t],o=n.getViewport(i),s=d[t];s.matrix.fromArray(i.transform.matrix),s.projectionMatrix.fromArray(i.projectionMatrix),s.viewport.set(o.x,o.y,o.width,o.height),0===t&&p.matrix.copy(s.matrix),!0===r&&p.cameras.push(s)}}const r=i.inputSources;for(let t=0;t<c.length;t++){const e=c[t],i=r[t];e.update(i,n,o)}M&&M(e,n)})),this.setAnimationLoop=function(t){M=t},this.dispose=function(){}}function oo(t){function e(e,n){e.opacity.value=n.opacity,n.color&&e.diffuse.value.copy(n.color),n.emissive&&e.emissive.value.copy(n.emissive).multiplyScalar(n.emissiveIntensity),n.map&&(e.map.value=n.map),n.alphaMap&&(e.alphaMap.value=n.alphaMap),n.specularMap&&(e.specularMap.value=n.specularMap);const i=t.get(n).envMap;if(i){e.envMap.value=i,e.flipEnvMap.value=i.isCubeTexture&&i._needsFlipEnvMap?-1:1,e.reflectivity.value=n.reflectivity,e.refractionRatio.value=n.refractionRatio;const r=t.get(i).__maxMipLevel;void 0!==r&&(e.maxMipLevel.value=r)}let r,o;n.lightMap&&(e.lightMap.value=n.lightMap,e.lightMapIntensity.value=n.lightMapIntensity),n.aoMap&&(e.aoMap.value=n.aoMap,e.aoMapIntensity.value=n.aoMapIntensity),n.map?r=n.map:n.specularMap?r=n.specularMap:n.displacementMap?r=n.displacementMap:n.normalMap?r=n.normalMap:n.bumpMap?r=n.bumpMap:n.roughnessMap?r=n.roughnessMap:n.metalnessMap?r=n.metalnessMap:n.alphaMap?r=n.alphaMap:n.emissiveMap?r=n.emissiveMap:n.clearcoatMap?r=n.clearcoatMap:n.clearcoatNormalMap?r=n.clearcoatNormalMap:n.clearcoatRoughnessMap&&(r=n.clearcoatRoughnessMap),void 0!==r&&(r.isWebGLRenderTarget&&(r=r.texture),!0===r.matrixAutoUpdate&&r.updateMatrix(),e.uvTransform.value.copy(r.matrix)),n.aoMap?o=n.aoMap:n.lightMap&&(o=n.lightMap),void 0!==o&&(o.isWebGLRenderTarget&&(o=o.texture),!0===o.matrixAutoUpdate&&o.updateMatrix(),e.uv2Transform.value.copy(o.matrix))}function n(e,n){e.roughness.value=n.roughness,e.metalness.value=n.metalness,n.roughnessMap&&(e.roughnessMap.value=n.roughnessMap),n.metalnessMap&&(e.metalnessMap.value=n.metalnessMap),n.emissiveMap&&(e.emissiveMap.value=n.emissiveMap),n.bumpMap&&(e.bumpMap.value=n.bumpMap,e.bumpScale.value=n.bumpScale,1===n.side&&(e.bumpScale.value*=-1)),n.normalMap&&(e.normalMap.value=n.normalMap,e.normalScale.value.copy(n.normalScale),1===n.side&&e.normalScale.value.negate()),n.displacementMap&&(e.displacementMap.value=n.displacementMap,e.displacementScale.value=n.displacementScale,e.displacementBias.value=n.displacementBias);t.get(n).envMap&&(e.envMapIntensity.value=n.envMapIntensity)}return{refreshFogUniforms:function(t,e){t.fogColor.value.copy(e.color),e.isFog?(t.fogNear.value=e.near,t.fogFar.value=e.far):e.isFogExp2&&(t.fogDensity.value=e.density)},refreshMaterialUniforms:function(t,i,r,o){i.isMeshBasicMaterial?e(t,i):i.isMeshLambertMaterial?(e(t,i),function(t,e){e.emissiveMap&&(t.emissiveMap.value=e.emissiveMap)}(t,i)):i.isMeshToonMaterial?(e(t,i),function(t,e){e.gradientMap&&(t.gradientMap.value=e.gradientMap);e.emissiveMap&&(t.emissiveMap.value=e.emissiveMap);e.bumpMap&&(t.bumpMap.value=e.bumpMap,t.bumpScale.value=e.bumpScale,1===e.side&&(t.bumpScale.value*=-1));e.normalMap&&(t.normalMap.value=e.normalMap,t.normalScale.value.copy(e.normalScale),1===e.side&&t.normalScale.value.negate());e.displacementMap&&(t.displacementMap.value=e.displacementMap,t.displacementScale.value=e.displacementScale,t.displacementBias.value=e.displacementBias)}(t,i)):i.isMeshPhongMaterial?(e(t,i),function(t,e){t.specular.value.copy(e.specular),t.shininess.value=Math.max(e.shininess,1e-4),e.emissiveMap&&(t.emissiveMap.value=e.emissiveMap);e.bumpMap&&(t.bumpMap.value=e.bumpMap,t.bumpScale.value=e.bumpScale,1===e.side&&(t.bumpScale.value*=-1));e.normalMap&&(t.normalMap.value=e.normalMap,t.normalScale.value.copy(e.normalScale),1===e.side&&t.normalScale.value.negate());e.displacementMap&&(t.displacementMap.value=e.displacementMap,t.displacementScale.value=e.displacementScale,t.displacementBias.value=e.displacementBias)}(t,i)):i.isMeshStandardMaterial?(e(t,i),i.isMeshPhysicalMaterial?function(t,e){n(t,e),t.reflectivity.value=e.reflectivity,t.clearcoat.value=e.clearcoat,t.clearcoatRoughness.value=e.clearcoatRoughness,e.sheen&&t.sheen.value.copy(e.sheen);e.clearcoatMap&&(t.clearcoatMap.value=e.clearcoatMap);e.clearcoatRoughnessMap&&(t.clearcoatRoughnessMap.value=e.clearcoatRoughnessMap);e.clearcoatNormalMap&&(t.clearcoatNormalScale.value.copy(e.clearcoatNormalScale),t.clearcoatNormalMap.value=e.clearcoatNormalMap,1===e.side&&t.clearcoatNormalScale.value.negate());t.transmission.value=e.transmission,e.transmissionMap&&(t.transmissionMap.value=e.transmissionMap)}(t,i):n(t,i)):i.isMeshMatcapMaterial?(e(t,i),function(t,e){e.matcap&&(t.matcap.value=e.matcap);e.bumpMap&&(t.bumpMap.value=e.bumpMap,t.bumpScale.value=e.bumpScale,1===e.side&&(t.bumpScale.value*=-1));e.normalMap&&(t.normalMap.value=e.normalMap,t.normalScale.value.copy(e.normalScale),1===e.side&&t.normalScale.value.negate());e.displacementMap&&(t.displacementMap.value=e.displacementMap,t.displacementScale.value=e.displacementScale,t.displacementBias.value=e.displacementBias)}(t,i)):i.isMeshDepthMaterial?(e(t,i),function(t,e){e.displacementMap&&(t.displacementMap.value=e.displacementMap,t.displacementScale.value=e.displacementScale,t.displacementBias.value=e.displacementBias)}(t,i)):i.isMeshDistanceMaterial?(e(t,i),function(t,e){e.displacementMap&&(t.displacementMap.value=e.displacementMap,t.displacementScale.value=e.displacementScale,t.displacementBias.value=e.displacementBias);t.referencePosition.value.copy(e.referencePosition),t.nearDistance.value=e.nearDistance,t.farDistance.value=e.farDistance}(t,i)):i.isMeshNormalMaterial?(e(t,i),function(t,e){e.bumpMap&&(t.bumpMap.value=e.bumpMap,t.bumpScale.value=e.bumpScale,1===e.side&&(t.bumpScale.value*=-1));e.normalMap&&(t.normalMap.value=e.normalMap,t.normalScale.value.copy(e.normalScale),1===e.side&&t.normalScale.value.negate());e.displacementMap&&(t.displacementMap.value=e.displacementMap,t.displacementScale.value=e.displacementScale,t.displacementBias.value=e.displacementBias)}(t,i)):i.isLineBasicMaterial?(function(t,e){t.diffuse.value.copy(e.color),t.opacity.value=e.opacity}(t,i),i.isLineDashedMaterial&&function(t,e){t.dashSize.value=e.dashSize,t.totalSize.value=e.dashSize+e.gapSize,t.scale.value=e.scale}(t,i)):i.isPointsMaterial?function(t,e,n,i){t.diffuse.value.copy(e.color),t.opacity.value=e.opacity,t.size.value=e.size*n,t.scale.value=.5*i,e.map&&(t.map.value=e.map);e.alphaMap&&(t.alphaMap.value=e.alphaMap);let r;e.map?r=e.map:e.alphaMap&&(r=e.alphaMap);void 0!==r&&(!0===r.matrixAutoUpdate&&r.updateMatrix(),t.uvTransform.value.copy(r.matrix))}(t,i,r,o):i.isSpriteMaterial?function(t,e){t.diffuse.value.copy(e.color),t.opacity.value=e.opacity,t.rotation.value=e.rotation,e.map&&(t.map.value=e.map);e.alphaMap&&(t.alphaMap.value=e.alphaMap);let n;e.map?n=e.map:e.alphaMap&&(n=e.alphaMap);void 0!==n&&(!0===n.matrixAutoUpdate&&n.updateMatrix(),t.uvTransform.value.copy(n.matrix))}(t,i):i.isShadowMaterial?(t.color.value.copy(i.color),t.opacity.value=i.opacity):i.isShaderMaterial&&(i.uniformsNeedUpdate=!1)}}}function so(t){const e=void 0!==(t=t||{}).canvas?t.canvas:document.createElementNS("http://www.w3.org/1999/xhtml","canvas"),n=void 0!==t.context?t.context:null,i=void 0!==t.alpha&&t.alpha,r=void 0===t.depth||t.depth,o=void 0===t.stencil||t.stencil,s=void 0!==t.antialias&&t.antialias,a=void 0===t.premultipliedAlpha||t.premultipliedAlpha,c=void 0!==t.preserveDrawingBuffer&&t.preserveDrawingBuffer,l=void 0!==t.powerPreference?t.powerPreference:"default",h=void 0!==t.failIfMajorPerformanceCaveat&&t.failIfMajorPerformanceCaveat;let u=null,d=null;this.domElement=e,this.debug={checkShaderErrors:!0},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this.gammaFactor=2,this.outputEncoding=3e3,this.physicallyCorrectLights=!1,this.toneMapping=0,this.toneMappingExposure=1,this.maxMorphTargets=8,this.maxMorphNormals=4;const p=this;let f=!1,m=null,g=0,v=0,y=null,x=null,_=-1,b=null,w=null;const M=new bt,S=new bt;let E=null,T=e.width,A=e.height,L=1,R=null,P=null;const C=new bt(0,0,T,A),N=new bt(0,0,T,A);let O=!1;const I=new Kn;let D=!1,z=!1;const U=new Kt,B=new Et,H={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};function F(){return null===y?L:1}let k,G,V,j,W,q,X,Y,Z,$,J,Q,K,tt,et,nt,it,rt,ot,st,at,ct=n;function lt(t,n){for(let i=0;i<t.length;i++){const r=t[i],o=e.getContext(r,n);if(null!==o)return o}return null}try{const t={alpha:i,depth:r,stencil:o,antialias:s,premultipliedAlpha:a,preserveDrawingBuffer:c,powerPreference:l,failIfMajorPerformanceCaveat:h};if(e.addEventListener("webglcontextlost",pt,!1),e.addEventListener("webglcontextrestored",gt,!1),null===ct){const e=["webgl2","webgl","experimental-webgl"];if(!0===p.isWebGL1Renderer&&e.shift(),ct=lt(e,t),null===ct)throw lt(e)?new Error("Error creating WebGL context with your selected attributes."):new Error("Error creating WebGL context.")}void 0===ct.getShaderPrecisionFormat&&(ct.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}})}catch(t){throw console.error("THREE.WebGLRenderer: "+t.message),t}function ht(){k=new di(ct),G=new li(ct,k,t),!1===G.isWebGL2&&(k.get("WEBGL_depth_texture"),k.get("OES_texture_float"),k.get("OES_texture_half_float"),k.get("OES_texture_half_float_linear"),k.get("OES_standard_derivatives"),k.get("OES_element_index_uint"),k.get("OES_vertex_array_object"),k.get("ANGLE_instanced_arrays")),k.get("OES_texture_float_linear"),st=new to(ct,k,G),V=new Qr(ct,k,G),V.scissor(S.copy(N).multiplyScalar(L).floor()),V.viewport(M.copy(C).multiplyScalar(L).floor()),j=new mi(ct),W=new Br,q=new Kr(ct,k,V,W,G,st,j),X=new ui(p),Y=new ei(ct,G),at=new ai(ct,k,Y,G),Z=new pi(ct,Y,j,at),$=new xi(ct,Z,Y,j),it=new yi(ct),et=new hi(W),J=new Ur(p,X,k,G,at,et),Q=new oo(W),K=new Gr(W),tt=new Yr,nt=new si(p,X,V,$,a),rt=new ci(ct,k,j,G),ot=new fi(ct,k,j,G),j.programs=J.programs,p.capabilities=G,p.extensions=k,p.properties=W,p.renderLists=K,p.state=V,p.info=j}ht();const ut=new ro(p,ct);this.xr=ut;const dt=new Jr(p,$,G.maxTextureSize);function pt(t){t.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),f=!0}function gt(){console.log("THREE.WebGLRenderer: Context Restored."),f=!1,ht()}function vt(t){const e=t.target;e.removeEventListener("dispose",vt),function(t){yt(t),W.remove(t)}(e)}function yt(t){const e=W.get(t).program;void 0!==e&&J.releaseProgram(e)}this.shadowMap=dt,this.getContext=function(){return ct},this.getContextAttributes=function(){return ct.getContextAttributes()},this.forceContextLoss=function(){const t=k.get("WEBGL_lose_context");t&&t.loseContext()},this.forceContextRestore=function(){const t=k.get("WEBGL_lose_context");t&&t.restoreContext()},this.getPixelRatio=function(){return L},this.setPixelRatio=function(t){void 0!==t&&(L=t,this.setSize(T,A,!1))},this.getSize=function(t){return void 0===t&&(console.warn("WebGLRenderer: .getsize() now requires a Vector2 as an argument"),t=new mt),t.set(T,A)},this.setSize=function(t,n,i){ut.isPresenting?console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting."):(T=t,A=n,e.width=Math.floor(t*L),e.height=Math.floor(n*L),!1!==i&&(e.style.width=t+"px",e.style.height=n+"px"),this.setViewport(0,0,t,n))},this.getDrawingBufferSize=function(t){return void 0===t&&(console.warn("WebGLRenderer: .getdrawingBufferSize() now requires a Vector2 as an argument"),t=new mt),t.set(T*L,A*L).floor()},this.setDrawingBufferSize=function(t,n,i){T=t,A=n,L=i,e.width=Math.floor(t*i),e.height=Math.floor(n*i),this.setViewport(0,0,t,n)},this.getCurrentViewport=function(t){return void 0===t&&(console.warn("WebGLRenderer: .getCurrentViewport() now requires a Vector4 as an argument"),t=new bt),t.copy(M)},this.getViewport=function(t){return t.copy(C)},this.setViewport=function(t,e,n,i){t.isVector4?C.set(t.x,t.y,t.z,t.w):C.set(t,e,n,i),V.viewport(M.copy(C).multiplyScalar(L).floor())},this.getScissor=function(t){return t.copy(N)},this.setScissor=function(t,e,n,i){t.isVector4?N.set(t.x,t.y,t.z,t.w):N.set(t,e,n,i),V.scissor(S.copy(N).multiplyScalar(L).floor())},this.getScissorTest=function(){return O},this.setScissorTest=function(t){V.setScissorTest(O=t)},this.setOpaqueSort=function(t){R=t},this.setTransparentSort=function(t){P=t},this.getClearColor=function(){return nt.getClearColor()},this.setClearColor=function(){nt.setClearColor.apply(nt,arguments)},this.getClearAlpha=function(){return nt.getClearAlpha()},this.setClearAlpha=function(){nt.setClearAlpha.apply(nt,arguments)},this.clear=function(t,e,n){let i=0;(void 0===t||t)&&(i|=16384),(void 0===e||e)&&(i|=256),(void 0===n||n)&&(i|=1024),ct.clear(i)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){e.removeEventListener("webglcontextlost",pt,!1),e.removeEventListener("webglcontextrestored",gt,!1),K.dispose(),tt.dispose(),W.dispose(),X.dispose(),$.dispose(),at.dispose(),ut.dispose(),_t.stop()},this.renderBufferImmediate=function(t,e){at.initAttributes();const n=W.get(t);t.hasPositions&&!n.position&&(n.position=ct.createBuffer()),t.hasNormals&&!n.normal&&(n.normal=ct.createBuffer()),t.hasUvs&&!n.uv&&(n.uv=ct.createBuffer()),t.hasColors&&!n.color&&(n.color=ct.createBuffer());const i=e.getAttributes();t.hasPositions&&(ct.bindBuffer(34962,n.position),ct.bufferData(34962,t.positionArray,35048),at.enableAttribute(i.position),ct.vertexAttribPointer(i.position,3,5126,!1,0,0)),t.hasNormals&&(ct.bindBuffer(34962,n.normal),ct.bufferData(34962,t.normalArray,35048),at.enableAttribute(i.normal),ct.vertexAttribPointer(i.normal,3,5126,!1,0,0)),t.hasUvs&&(ct.bindBuffer(34962,n.uv),ct.bufferData(34962,t.uvArray,35048),at.enableAttribute(i.uv),ct.vertexAttribPointer(i.uv,2,5126,!1,0,0)),t.hasColors&&(ct.bindBuffer(34962,n.color),ct.bufferData(34962,t.colorArray,35048),at.enableAttribute(i.color),ct.vertexAttribPointer(i.color,3,5126,!1,0,0)),at.disableUnusedAttributes(),ct.drawArrays(4,0,t.count),t.count=0},this.renderBufferDirect=function(t,e,n,i,r,o){null===e&&(e=H);const s=r.isMesh&&r.matrixWorld.determinant()<0,a=At(t,e,i,r);V.setMaterial(i,s);let c=n.index;const l=n.attributes.position;if(null===c){if(void 0===l||0===l.count)return}else if(0===c.count)return;let h,u=1;!0===i.wireframe&&(c=Z.getWireframeAttribute(n),u=2),(i.morphTargets||i.morphNormals)&&it.update(r,n,i,a),at.setup(r,i,a,n,c);let d=rt;null!==c&&(h=Y.get(c),d=ot,d.setIndex(h));const p=null!==c?c.count:l.count,f=n.drawRange.start*u,m=n.drawRange.count*u,g=null!==o?o.start*u:0,v=null!==o?o.count*u:1/0,y=Math.max(f,g),x=Math.min(p,f+m,g+v)-1,_=Math.max(0,x-y+1);if(0!==_){if(r.isMesh)!0===i.wireframe?(V.setLineWidth(i.wireframeLinewidth*F()),d.setMode(1)):d.setMode(4);else if(r.isLine){let t=i.linewidth;void 0===t&&(t=1),V.setLineWidth(t*F()),r.isLineSegments?d.setMode(1):r.isLineLoop?d.setMode(2):d.setMode(3)}else r.isPoints?d.setMode(0):r.isSprite&&d.setMode(4);if(r.isInstancedMesh)d.renderInstances(y,_,r.count);else if(n.isInstancedBufferGeometry){const t=Math.min(n.instanceCount,n._maxInstanceCount);d.renderInstances(y,_,t)}else d.render(y,_)}},this.compile=function(t,e){d=tt.get(t,e),d.init(),t.traverse((function(t){t.isLight&&(d.pushLight(t),t.castShadow&&d.pushShadow(t))})),d.setupLights(e);const n=new WeakMap;t.traverse((function(e){const i=e.material;if(i)if(Array.isArray(i))for(let r=0;r<i.length;r++){const o=i[r];!1===n.has(o)&&(Tt(o,t,e),n.set(o))}else!1===n.has(i)&&(Tt(i,t,e),n.set(i))}))};let xt=null;const _t=new ti;function wt(t,e,n,i){if(!1===t.visible)return;if(t.layers.test(e.layers))if(t.isGroup)n=t.renderOrder;else if(t.isLOD)!0===t.autoUpdate&&t.update(e);else if(t.isLight)d.pushLight(t),t.castShadow&&d.pushShadow(t);else if(t.isSprite){if(!t.frustumCulled||I.intersectsSprite(t)){i&&B.setFromMatrixPosition(t.matrixWorld).applyMatrix4(U);const e=$.update(t),r=t.material;r.visible&&u.push(t,e,r,n,B.z,null)}}else if(t.isImmediateRenderObject)i&&B.setFromMatrixPosition(t.matrixWorld).applyMatrix4(U),u.push(t,null,t.material,n,B.z,null);else if((t.isMesh||t.isLine||t.isPoints)&&(t.isSkinnedMesh&&t.skeleton.frame!==j.render.frame&&(t.skeleton.update(),t.skeleton.frame=j.render.frame),!t.frustumCulled||I.intersectsObject(t))){i&&B.setFromMatrixPosition(t.matrixWorld).applyMatrix4(U);const e=$.update(t),r=t.material;if(Array.isArray(r)){const i=e.groups;for(let o=0,s=i.length;o<s;o++){const s=i[o],a=r[s.materialIndex];a&&a.visible&&u.push(t,e,a,n,B.z,s)}}else r.visible&&u.push(t,e,r,n,B.z,null)}const r=t.children;for(let t=0,o=r.length;t<o;t++)wt(r[t],e,n,i)}function Mt(t,e,n){const i=!0===e.isScene?e.overrideMaterial:null;for(let r=0,o=t.length;r<o;r++){const o=t[r],s=o.object,a=o.geometry,c=null===i?o.material:i,l=o.group;if(n.isArrayCamera){w=n;const t=n.cameras;for(let n=0,i=t.length;n<i;n++){const i=t[n];s.layers.test(i.layers)&&(V.viewport(M.copy(i.viewport)),d.setupLights(i),St(s,e,i,a,c,l))}}else w=null,St(s,e,n,a,c,l)}}function St(t,e,n,i,r,o){if(t.onBeforeRender(p,e,n,i,r,o),d=tt.get(e,w||n),t.modelViewMatrix.multiplyMatrices(n.matrixWorldInverse,t.matrixWorld),t.normalMatrix.getNormalMatrix(t.modelViewMatrix),t.isImmediateRenderObject){const i=At(n,e,r,t);V.setMaterial(r),at.reset(),function(t,e){t.render((function(t){p.renderBufferImmediate(t,e)}))}(t,i)}else p.renderBufferDirect(n,e,i,r,t,o);t.onAfterRender(p,e,n,i,r,o),d=tt.get(e,w||n)}function Tt(t,e,n){!0!==e.isScene&&(e=H);const i=W.get(t),r=d.state.lights,o=d.state.shadowsArray,s=r.state.version,a=J.getParameters(t,r.state,o,e,n),c=J.getProgramCacheKey(a);let l=i.program,h=!0;if(void 0===l)t.addEventListener("dispose",vt);else if(l.cacheKey!==c)yt(t);else if(i.lightsStateVersion!==s)h=!1;else{if(void 0!==a.shaderID){const n=t.isMeshStandardMaterial?e.environment:null;return void(i.envMap=X.get(t.envMap||n))}h=!1}h&&(a.uniforms=J.getUniforms(t),t.onBeforeCompile(a,p),l=J.acquireProgram(a,c),i.program=l,i.uniforms=a.uniforms,i.outputEncoding=a.outputEncoding);const u=i.uniforms;(t.isShaderMaterial||t.isRawShaderMaterial)&&!0!==t.clipping||(i.numClippingPlanes=et.numPlanes,i.numIntersection=et.numIntersection,u.clippingPlanes=et.uniform),i.environment=t.isMeshStandardMaterial?e.environment:null,i.fog=e.fog,i.envMap=X.get(t.envMap||i.environment),i.needsLights=function(t){return t.isMeshLambertMaterial||t.isMeshToonMaterial||t.isMeshPhongMaterial||t.isMeshStandardMaterial||t.isShadowMaterial||t.isShaderMaterial&&!0===t.lights}(t),i.lightsStateVersion=s,i.needsLights&&(u.ambientLightColor.value=r.state.ambient,u.lightProbe.value=r.state.probe,u.directionalLights.value=r.state.directional,u.directionalLightShadows.value=r.state.directionalShadow,u.spotLights.value=r.state.spot,u.spotLightShadows.value=r.state.spotShadow,u.rectAreaLights.value=r.state.rectArea,u.ltc_1.value=r.state.rectAreaLTC1,u.ltc_2.value=r.state.rectAreaLTC2,u.pointLights.value=r.state.point,u.pointLightShadows.value=r.state.pointShadow,u.hemisphereLights.value=r.state.hemi,u.directionalShadowMap.value=r.state.directionalShadowMap,u.directionalShadowMatrix.value=r.state.directionalShadowMatrix,u.spotShadowMap.value=r.state.spotShadowMap,u.spotShadowMatrix.value=r.state.spotShadowMatrix,u.pointShadowMap.value=r.state.pointShadowMap,u.pointShadowMatrix.value=r.state.pointShadowMatrix);const f=i.program.getUniforms(),m=gr.seqWithValue(f.seq,u);i.uniformsList=m}function At(t,e,n,i){!0!==e.isScene&&(e=H),q.resetTextureUnits();const r=e.fog,o=n.isMeshStandardMaterial?e.environment:null,s=null===y?p.outputEncoding:y.texture.encoding,a=X.get(n.envMap||o),c=W.get(n),l=d.state.lights;if(!0===D&&(!0===z||t!==b)){const e=t===b&&n.id===_;et.setState(n,t,e)}n.version===c.__version?n.fog&&c.fog!==r||c.environment!==o||c.needsLights&&c.lightsStateVersion!==l.state.version?Tt(n,e,i):void 0===c.numClippingPlanes||c.numClippingPlanes===et.numPlanes&&c.numIntersection===et.numIntersection?(c.outputEncoding!==s||c.envMap!==a)&&Tt(n,e,i):Tt(n,e,i):(Tt(n,e,i),c.__version=n.version);let h=!1,u=!1,f=!1;const m=c.program,g=m.getUniforms(),v=c.uniforms;if(V.useProgram(m.program)&&(h=!0,u=!0,f=!0),n.id!==_&&(_=n.id,u=!0),h||b!==t){if(g.setValue(ct,"projectionMatrix",t.projectionMatrix),G.logarithmicDepthBuffer&&g.setValue(ct,"logDepthBufFC",2/(Math.log(t.far+1)/Math.LN2)),b!==t&&(b=t,u=!0,f=!0),n.isShaderMaterial||n.isMeshPhongMaterial||n.isMeshToonMaterial||n.isMeshStandardMaterial||n.envMap){const e=g.map.cameraPosition;void 0!==e&&e.setValue(ct,B.setFromMatrixPosition(t.matrixWorld))}(n.isMeshPhongMaterial||n.isMeshToonMaterial||n.isMeshLambertMaterial||n.isMeshBasicMaterial||n.isMeshStandardMaterial||n.isShaderMaterial)&&g.setValue(ct,"isOrthographic",!0===t.isOrthographicCamera),(n.isMeshPhongMaterial||n.isMeshToonMaterial||n.isMeshLambertMaterial||n.isMeshBasicMaterial||n.isMeshStandardMaterial||n.isShaderMaterial||n.isShadowMaterial||n.skinning)&&g.setValue(ct,"viewMatrix",t.matrixWorldInverse)}if(n.skinning){g.setOptional(ct,i,"bindMatrix"),g.setOptional(ct,i,"bindMatrixInverse");const t=i.skeleton;if(t){const e=t.bones;if(G.floatVertexTextures){if(void 0===t.boneTexture){let n=Math.sqrt(4*e.length);n=ft.ceilPowerOfTwo(n),n=Math.max(n,4);const i=new Float32Array(n*n*4);i.set(t.boneMatrices);const r=new $n(i,n,n,1023,1015);t.boneMatrices=i,t.boneTexture=r,t.boneTextureSize=n}g.setValue(ct,"boneTexture",t.boneTexture,q),g.setValue(ct,"boneTextureSize",t.boneTextureSize)}else g.setOptional(ct,t,"boneMatrices")}}var x,w;return(u||c.receiveShadow!==i.receiveShadow)&&(c.receiveShadow=i.receiveShadow,g.setValue(ct,"receiveShadow",i.receiveShadow)),u&&(g.setValue(ct,"toneMappingExposure",p.toneMappingExposure),c.needsLights&&(w=f,(x=v).ambientLightColor.needsUpdate=w,x.lightProbe.needsUpdate=w,x.directionalLights.needsUpdate=w,x.directionalLightShadows.needsUpdate=w,x.pointLights.needsUpdate=w,x.pointLightShadows.needsUpdate=w,x.spotLights.needsUpdate=w,x.spotLightShadows.needsUpdate=w,x.rectAreaLights.needsUpdate=w,x.hemisphereLights.needsUpdate=w),r&&n.fog&&Q.refreshFogUniforms(v,r),Q.refreshMaterialUniforms(v,n,L,A),gr.upload(ct,c.uniformsList,v,q)),n.isShaderMaterial&&!0===n.uniformsNeedUpdate&&(gr.upload(ct,c.uniformsList,v,q),n.uniformsNeedUpdate=!1),n.isSpriteMaterial&&g.setValue(ct,"center",i.center),g.setValue(ct,"modelViewMatrix",i.modelViewMatrix),g.setValue(ct,"normalMatrix",i.normalMatrix),g.setValue(ct,"modelMatrix",i.matrixWorld),m}_t.setAnimationLoop((function(t){ut.isPresenting||xt&&xt(t)})),"undefined"!=typeof window&&_t.setContext(window),this.setAnimationLoop=function(t){xt=t,ut.setAnimationLoop(t),null===t?_t.stop():_t.start()},this.render=function(t,e){let n,i;if(void 0!==arguments[2]&&(console.warn("THREE.WebGLRenderer.render(): the renderTarget argument has been removed. Use .setRenderTarget() instead."),n=arguments[2]),void 0!==arguments[3]&&(console.warn("THREE.WebGLRenderer.render(): the forceClear argument has been removed. Use .clear() instead."),i=arguments[3]),void 0!==e&&!0!==e.isCamera)return void console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");if(!0===f)return;at.resetDefaultState(),_=-1,b=null,!0===t.autoUpdate&&t.updateMatrixWorld(),null===e.parent&&e.updateMatrixWorld(),!0===ut.enabled&&!0===ut.isPresenting&&(e=ut.getCamera(e)),!0===t.isScene&&t.onBeforeRender(p,t,e,n||y),d=tt.get(t,e),d.init(),U.multiplyMatrices(e.projectionMatrix,e.matrixWorldInverse),I.setFromProjectionMatrix(U),z=this.localClippingEnabled,D=et.init(this.clippingPlanes,z,e),u=K.get(t,e),u.init(),wt(t,e,0,p.sortObjects),u.finish(),!0===p.sortObjects&&u.sort(R,P),!0===D&&et.beginShadows();const r=d.state.shadowsArray;dt.render(r,t,e),d.setupLights(e),!0===D&&et.endShadows(),!0===this.info.autoReset&&this.info.reset(),void 0!==n&&this.setRenderTarget(n),nt.render(u,t,e,i);const o=u.opaque,s=u.transparent;o.length>0&&Mt(o,t,e),s.length>0&&Mt(s,t,e),!0===t.isScene&&t.onAfterRender(p,t,e),null!==y&&(q.updateRenderTargetMipmap(y),q.updateMultisampleRenderTarget(y)),V.buffers.depth.setTest(!0),V.buffers.depth.setMask(!0),V.buffers.color.setMask(!0),V.setPolygonOffset(!1),u=null,d=null},this.setFramebuffer=function(t){m!==t&&null===y&&ct.bindFramebuffer(36160,t),m=t},this.getActiveCubeFace=function(){return g},this.getActiveMipmapLevel=function(){return v},this.getRenderList=function(){return u},this.setRenderList=function(t){u=t},this.getRenderState=function(){return d},this.setRenderState=function(t){d=t},this.getRenderTarget=function(){return y},this.setRenderTarget=function(t,e=0,n=0){y=t,g=e,v=n,t&&void 0===W.get(t).__webglFramebuffer&&q.setupRenderTarget(t);let i=m,r=!1;if(t){const n=W.get(t).__webglFramebuffer;t.isWebGLCubeRenderTarget?(i=n[e],r=!0):i=t.isWebGLMultisampleRenderTarget?W.get(t).__webglMultisampledFramebuffer:n,M.copy(t.viewport),S.copy(t.scissor),E=t.scissorTest}else M.copy(C).multiplyScalar(L).floor(),S.copy(N).multiplyScalar(L).floor(),E=O;if(x!==i&&(ct.bindFramebuffer(36160,i),x=i),V.viewport(M),V.scissor(S),V.setScissorTest(E),r){const i=W.get(t.texture);ct.framebufferTexture2D(36160,36064,34069+e,i.__webglTexture,n)}},this.readRenderTargetPixels=function(t,e,n,i,r,o,s){if(!t||!t.isWebGLRenderTarget)return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");let a=W.get(t).__webglFramebuffer;if(t.isWebGLCubeRenderTarget&&void 0!==s&&(a=a[s]),a){let s=!1;a!==x&&(ct.bindFramebuffer(36160,a),s=!0);try{const a=t.texture,c=a.format,l=a.type;if(1023!==c&&st.convert(c)!==ct.getParameter(35739))return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");if(!(1009===l||st.convert(l)===ct.getParameter(35738)||1015===l&&(G.isWebGL2||k.get("OES_texture_float")||k.get("WEBGL_color_buffer_float"))||1016===l&&(G.isWebGL2?k.get("EXT_color_buffer_float"):k.get("EXT_color_buffer_half_float"))))return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");36053===ct.checkFramebufferStatus(36160)?e>=0&&e<=t.width-i&&n>=0&&n<=t.height-r&&ct.readPixels(e,n,i,r,st.convert(c),st.convert(l),o):console.error("THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.")}finally{s&&ct.bindFramebuffer(36160,x)}}},this.copyFramebufferToTexture=function(t,e,n){void 0===n&&(n=0);const i=Math.pow(2,-n),r=Math.floor(e.image.width*i),o=Math.floor(e.image.height*i),s=st.convert(e.format);q.setTexture2D(e,0),ct.copyTexImage2D(3553,n,s,t.x,t.y,r,o,0),V.unbindTexture()},this.copyTextureToTexture=function(t,e,n,i){void 0===i&&(i=0);const r=e.image.width,o=e.image.height,s=st.convert(n.format),a=st.convert(n.type);q.setTexture2D(n,0),ct.pixelStorei(37440,n.flipY),ct.pixelStorei(37441,n.premultiplyAlpha),ct.pixelStorei(3317,n.unpackAlignment),e.isDataTexture?ct.texSubImage2D(3553,i,t.x,t.y,r,o,s,a,e.image.data):e.isCompressedTexture?ct.compressedTexSubImage2D(3553,i,t.x,t.y,e.mipmaps[0].width,e.mipmaps[0].height,s,e.mipmaps[0].data):ct.texSubImage2D(3553,i,t.x,t.y,s,a,e.image),0===i&&n.generateMipmaps&&ct.generateMipmap(3553),V.unbindTexture()},this.initTexture=function(t){q.setTexture2D(t,0),V.unbindTexture()},"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}function ao(t){so.call(this,t)}eo.prototype=Object.assign(Object.create(qn.prototype),{constructor:eo,isArrayCamera:!0}),no.prototype=Object.assign(Object.create(Se.prototype),{constructor:no,isGroup:!0}),Object.assign(io.prototype,{constructor:io,getHandSpace:function(){if(null===this._hand&&(this._hand=new no,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints=[],this._hand.inputState={pinching:!1},window.XRHand))for(let t=0;t<=window.XRHand.LITTLE_PHALANX_TIP;t++){const t=new no;t.matrixAutoUpdate=!1,t.visible=!1,this._hand.joints.push(t),this._hand.add(t)}return this._hand},getTargetRaySpace:function(){return null===this._targetRay&&(this._targetRay=new no,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1),this._targetRay},getGripSpace:function(){return null===this._grip&&(this._grip=new no,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1),this._grip},dispatchEvent:function(t){return null!==this._targetRay&&this._targetRay.dispatchEvent(t),null!==this._grip&&this._grip.dispatchEvent(t),null!==this._hand&&this._hand.dispatchEvent(t),this},disconnect:function(t){return this.dispatchEvent({type:"disconnected",data:t}),null!==this._targetRay&&(this._targetRay.visible=!1),null!==this._grip&&(this._grip.visible=!1),null!==this._hand&&(this._hand.visible=!1),this},update:function(t,e,n){let i=null,r=null,o=null;const s=this._targetRay,a=this._grip,c=this._hand;if(t)if(c&&t.hand){o=!0;for(let i=0;i<=window.XRHand.LITTLE_PHALANX_TIP;i++)if(t.hand[i]){const r=e.getJointPose(t.hand[i],n),o=c.joints[i];null!==r&&(o.matrix.fromArray(r.transform.matrix),o.matrix.decompose(o.position,o.rotation,o.scale),o.jointRadius=r.radius),o.visible=null!==r;const s=c.joints[window.XRHand.INDEX_PHALANX_TIP],a=c.joints[window.XRHand.THUMB_PHALANX_TIP],l=s.position.distanceTo(a.position),h=.02,u=.005;c.inputState.pinching&&l>h+u?(c.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:t.handedness,target:this})):!c.inputState.pinching&&l<=h-u&&(c.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:t.handedness,target:this}))}}else null!==s&&(i=e.getPose(t.targetRaySpace,n),null!==i&&(s.matrix.fromArray(i.transform.matrix),s.matrix.decompose(s.position,s.rotation,s.scale))),null!==a&&t.gripSpace&&(r=e.getPose(t.gripSpace,n),null!==r&&(a.matrix.fromArray(r.transform.matrix),a.matrix.decompose(a.position,a.rotation,a.scale)));return null!==s&&(s.visible=null!==i),null!==a&&(a.visible=null!==r),null!==c&&(c.visible=null!==o),this}}),Object.assign(ro.prototype,ut.prototype),ao.prototype=Object.assign(Object.create(so.prototype),{constructor:ao,isWebGL1Renderer:!0});class co extends Se{constructor(){super(),Object.defineProperty(this,"isScene",{value:!0}),this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.overrideMaterial=null,this.autoUpdate=!0,"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}copy(t,e){return super.copy(t,e),null!==t.background&&(this.background=t.background.clone()),null!==t.environment&&(this.environment=t.environment.clone()),null!==t.fog&&(this.fog=t.fog.clone()),null!==t.overrideMaterial&&(this.overrideMaterial=t.overrideMaterial.clone()),this.autoUpdate=t.autoUpdate,this.matrixAutoUpdate=t.matrixAutoUpdate,this}toJSON(t){const e=super.toJSON(t);return null!==this.background&&(e.object.background=this.background.toJSON(t)),null!==this.environment&&(e.object.environment=this.environment.toJSON(t)),null!==this.fog&&(e.object.fog=this.fog.toJSON()),e}}function lo(t,e){this.array=t,this.stride=e,this.count=void 0!==t?t.length/e:0,this.usage=35044,this.updateRange={offset:0,count:-1},this.version=0,this.uuid=ft.generateUUID()}Object.defineProperty(lo.prototype,"needsUpdate",{set:function(t){!0===t&&this.version++}}),Object.assign(lo.prototype,{isInterleavedBuffer:!0,onUploadCallback:function(){},setUsage:function(t){return this.usage=t,this},copy:function(t){return this.array=new t.array.constructor(t.array),this.count=t.count,this.stride=t.stride,this.usage=t.usage,this},copyAt:function(t,e,n){t*=this.stride,n*=e.stride;for(let i=0,r=this.stride;i<r;i++)this.array[t+i]=e.array[n+i];return this},set:function(t,e){return void 0===e&&(e=0),this.array.set(t,e),this},clone:function(t){void 0===t.arrayBuffers&&(t.arrayBuffers={}),void 0===this.array.buffer._uuid&&(this.array.buffer._uuid=ft.generateUUID()),void 0===t.arrayBuffers[this.array.buffer._uuid]&&(t.arrayBuffers[this.array.buffer._uuid]=this.array.slice(0).buffer);const e=new lo(new this.array.constructor(t.arrayBuffers[this.array.buffer._uuid]),this.stride);return e.setUsage(this.usage),e},onUpload:function(t){return this.onUploadCallback=t,this},toJSON:function(t){return void 0===t.arrayBuffers&&(t.arrayBuffers={}),void 0===this.array.buffer._uuid&&(this.array.buffer._uuid=ft.generateUUID()),void 0===t.arrayBuffers[this.array.buffer._uuid]&&(t.arrayBuffers[this.array.buffer._uuid]=Array.prototype.slice.call(new Uint32Array(this.array.buffer))),{uuid:this.uuid,buffer:this.array.buffer._uuid,type:this.array.constructor.name,stride:this.stride}}});const ho=new Et;function uo(t,e,n,i){this.name="",this.data=t,this.itemSize=e,this.offset=n,this.normalized=!0===i}function po(t){Ze.call(this),this.type="SpriteMaterial",this.color=new qe(16777215),this.map=null,this.alphaMap=null,this.rotation=0,this.sizeAttenuation=!0,this.transparent=!0,this.setValues(t)}let fo;Object.defineProperties(uo.prototype,{count:{get:function(){return this.data.count}},array:{get:function(){return this.data.array}},needsUpdate:{set:function(t){this.data.needsUpdate=t}}}),Object.assign(uo.prototype,{isInterleavedBufferAttribute:!0,applyMatrix4:function(t){for(let e=0,n=this.data.count;e<n;e++)ho.x=this.getX(e),ho.y=this.getY(e),ho.z=this.getZ(e),ho.applyMatrix4(t),this.setXYZ(e,ho.x,ho.y,ho.z);return this},setX:function(t,e){return this.data.array[t*this.data.stride+this.offset]=e,this},setY:function(t,e){return this.data.array[t*this.data.stride+this.offset+1]=e,this},setZ:function(t,e){return this.data.array[t*this.data.stride+this.offset+2]=e,this},setW:function(t,e){return this.data.array[t*this.data.stride+this.offset+3]=e,this},getX:function(t){return this.data.array[t*this.data.stride+this.offset]},getY:function(t){return this.data.array[t*this.data.stride+this.offset+1]},getZ:function(t){return this.data.array[t*this.data.stride+this.offset+2]},getW:function(t){return this.data.array[t*this.data.stride+this.offset+3]},setXY:function(t,e,n){return t=t*this.data.stride+this.offset,this.data.array[t+0]=e,this.data.array[t+1]=n,this},setXYZ:function(t,e,n,i){return t=t*this.data.stride+this.offset,this.data.array[t+0]=e,this.data.array[t+1]=n,this.data.array[t+2]=i,this},setXYZW:function(t,e,n,i,r){return t=t*this.data.stride+this.offset,this.data.array[t+0]=e,this.data.array[t+1]=n,this.data.array[t+2]=i,this.data.array[t+3]=r,this},clone:function(t){if(void 0===t){console.log("THREE.InterleavedBufferAttribute.clone(): Cloning an interlaved buffer attribute will deinterleave buffer data.");const t=[];for(let e=0;e<this.count;e++){const n=e*this.data.stride+this.offset;for(let e=0;e<this.itemSize;e++)t.push(this.data.array[n+e])}return new Ke(new this.array.constructor(t),this.itemSize,this.normalized)}return void 0===t.interleavedBuffers&&(t.interleavedBuffers={}),void 0===t.interleavedBuffers[this.data.uuid]&&(t.interleavedBuffers[this.data.uuid]=this.data.clone(t)),new uo(t.interleavedBuffers[this.data.uuid],this.itemSize,this.offset,this.normalized)},toJSON:function(t){if(void 0===t){console.log("THREE.InterleavedBufferAttribute.toJSON(): Serializing an interlaved buffer attribute will deinterleave buffer data.");const t=[];for(let e=0;e<this.count;e++){const n=e*this.data.stride+this.offset;for(let e=0;e<this.itemSize;e++)t.push(this.data.array[n+e])}return{itemSize:this.itemSize,type:this.array.constructor.name,array:t,normalized:this.normalized}}return void 0===t.interleavedBuffers&&(t.interleavedBuffers={}),void 0===t.interleavedBuffers[this.data.uuid]&&(t.interleavedBuffers[this.data.uuid]=this.data.toJSON(t)),{isInterleavedBufferAttribute:!0,itemSize:this.itemSize,data:this.data.uuid,offset:this.offset,normalized:this.normalized}}}),po.prototype=Object.create(Ze.prototype),po.prototype.constructor=po,po.prototype.isSpriteMaterial=!0,po.prototype.copy=function(t){return Ze.prototype.copy.call(this,t),this.color.copy(t.color),this.map=t.map,this.alphaMap=t.alphaMap,this.rotation=t.rotation,this.sizeAttenuation=t.sizeAttenuation,this};const mo=new Et,go=new Et,vo=new Et,yo=new mt,xo=new mt,_o=new Kt,bo=new Et,wo=new Et,Mo=new Et,So=new mt,Eo=new mt,To=new mt;function Ao(t){if(Se.call(this),this.type="Sprite",void 0===fo){fo=new xn;const t=new lo(new Float32Array([-.5,-.5,0,0,0,.5,-.5,0,1,0,.5,.5,0,1,1,-.5,.5,0,0,1]),5);fo.setIndex([0,1,2,0,2,3]),fo.setAttribute("position",new uo(t,3,0,!1)),fo.setAttribute("uv",new uo(t,2,3,!1))}this.geometry=fo,this.material=void 0!==t?t:new po,this.center=new mt(.5,.5)}function Lo(t,e,n,i,r,o){yo.subVectors(t,n).addScalar(.5).multiply(i),void 0!==r?(xo.x=o*yo.x-r*yo.y,xo.y=r*yo.x+o*yo.y):xo.copy(yo),t.copy(e),t.x+=xo.x,t.y+=xo.y,t.applyMatrix4(_o)}Ao.prototype=Object.assign(Object.create(Se.prototype),{constructor:Ao,isSprite:!0,raycast:function(t,e){null===t.camera&&console.error('THREE.Sprite: "Raycaster.camera" needs to be set in order to raycast against sprites.'),go.setFromMatrixScale(this.matrixWorld),_o.copy(t.camera.matrixWorld),this.modelViewMatrix.multiplyMatrices(t.camera.matrixWorldInverse,this.matrixWorld),vo.setFromMatrixPosition(this.modelViewMatrix),t.camera.isPerspectiveCamera&&!1===this.material.sizeAttenuation&&go.multiplyScalar(-vo.z);const n=this.material.rotation;let i,r;0!==n&&(r=Math.cos(n),i=Math.sin(n));const o=this.center;Lo(bo.set(-.5,-.5,0),vo,o,go,i,r),Lo(wo.set(.5,-.5,0),vo,o,go,i,r),Lo(Mo.set(.5,.5,0),vo,o,go,i,r),So.set(0,0),Eo.set(1,0),To.set(1,1);let s=t.ray.intersectTriangle(bo,wo,Mo,!1,mo);if(null===s&&(Lo(wo.set(-.5,.5,0),vo,o,go,i,r),Eo.set(0,1),s=t.ray.intersectTriangle(bo,Mo,wo,!1,mo),null===s))return;const a=t.ray.origin.distanceTo(mo);a<t.near||a>t.far||e.push({distance:a,point:mo.clone(),uv:He.getUV(mo,bo,wo,Mo,So,Eo,To,new mt),face:null,object:this})},copy:function(t){return Se.prototype.copy.call(this,t),void 0!==t.center&&this.center.copy(t.center),this.material=t.material,this}});const Ro=new Et,Po=new Et;function Co(){Se.call(this),this._currentLevel=0,this.type="LOD",Object.defineProperties(this,{levels:{enumerable:!0,value:[]}}),this.autoUpdate=!0}function No(t,e){t&&t.isGeometry&&console.error("THREE.SkinnedMesh no longer supports THREE.Geometry. Use THREE.BufferGeometry instead."),Un.call(this,t,e),this.type="SkinnedMesh",this.bindMode="attached",this.bindMatrix=new Kt,this.bindMatrixInverse=new Kt}Co.prototype=Object.assign(Object.create(Se.prototype),{constructor:Co,isLOD:!0,copy:function(t){Se.prototype.copy.call(this,t,!1);const e=t.levels;for(let t=0,n=e.length;t<n;t++){const n=e[t];this.addLevel(n.object.clone(),n.distance)}return this.autoUpdate=t.autoUpdate,this},addLevel:function(t,e){void 0===e&&(e=0),e=Math.abs(e);const n=this.levels;let i;for(i=0;i<n.length&&!(e<n[i].distance);i++);return n.splice(i,0,{distance:e,object:t}),this.add(t),this},getCurrentLevel:function(){return this._currentLevel},getObjectForDistance:function(t){const e=this.levels;if(e.length>0){let n,i;for(n=1,i=e.length;n<i&&!(t<e[n].distance);n++);return e[n-1].object}return null},raycast:function(t,e){if(this.levels.length>0){Ro.setFromMatrixPosition(this.matrixWorld);const n=t.ray.origin.distanceTo(Ro);this.getObjectForDistance(n).raycast(t,e)}},update:function(t){const e=this.levels;if(e.length>1){Ro.setFromMatrixPosition(t.matrixWorld),Po.setFromMatrixPosition(this.matrixWorld);const n=Ro.distanceTo(Po)/t.zoom;let i,r;for(e[0].object.visible=!0,i=1,r=e.length;i<r&&n>=e[i].distance;i++)e[i-1].object.visible=!1,e[i].object.visible=!0;for(this._currentLevel=i-1;i<r;i++)e[i].object.visible=!1}},toJSON:function(t){const e=Se.prototype.toJSON.call(this,t);!1===this.autoUpdate&&(e.object.autoUpdate=!1),e.object.levels=[];const n=this.levels;for(let t=0,i=n.length;t<i;t++){const i=n[t];e.object.levels.push({object:i.object.uuid,distance:i.distance})}return e}}),No.prototype=Object.assign(Object.create(Un.prototype),{constructor:No,isSkinnedMesh:!0,copy:function(t){return Un.prototype.copy.call(this,t),this.bindMode=t.bindMode,this.bindMatrix.copy(t.bindMatrix),this.bindMatrixInverse.copy(t.bindMatrixInverse),this.skeleton=t.skeleton,this},bind:function(t,e){this.skeleton=t,void 0===e&&(this.updateMatrixWorld(!0),this.skeleton.calculateInverses(),e=this.matrixWorld),this.bindMatrix.copy(e),this.bindMatrixInverse.getInverse(e)},pose:function(){this.skeleton.pose()},normalizeSkinWeights:function(){const t=new bt,e=this.geometry.attributes.skinWeight;for(let n=0,i=e.count;n<i;n++){t.x=e.getX(n),t.y=e.getY(n),t.z=e.getZ(n),t.w=e.getW(n);const i=1/t.manhattanLength();i!==1/0?t.multiplyScalar(i):t.set(1,0,0,0),e.setXYZW(n,t.x,t.y,t.z,t.w)}},updateMatrixWorld:function(t){Un.prototype.updateMatrixWorld.call(this,t),"attached"===this.bindMode?this.bindMatrixInverse.getInverse(this.matrixWorld):"detached"===this.bindMode?this.bindMatrixInverse.getInverse(this.bindMatrix):console.warn("THREE.SkinnedMesh: Unrecognized bindMode: "+this.bindMode)},boneTransform:function(){const t=new Et,e=new bt,n=new bt,i=new Et,r=new Kt;return function(o,s){const a=this.skeleton,c=this.geometry;e.fromBufferAttribute(c.attributes.skinIndex,o),n.fromBufferAttribute(c.attributes.skinWeight,o),t.fromBufferAttribute(c.attributes.position,o).applyMatrix4(this.bindMatrix),s.set(0,0,0);for(let o=0;o<4;o++){const c=n.getComponent(o);if(0!==c){const n=e.getComponent(o);r.multiplyMatrices(a.bones[n].matrixWorld,a.boneInverses[n]),s.addScaledVector(i.copy(t).applyMatrix4(r),c)}}return s.applyMatrix4(this.bindMatrixInverse)}}()});const Oo=new Kt,Io=new Kt;function Do(t,e){if(t=t||[],this.bones=t.slice(0),this.boneMatrices=new Float32Array(16*this.bones.length),this.frame=-1,void 0===e)this.calculateInverses();else if(this.bones.length===e.length)this.boneInverses=e.slice(0);else{console.warn("THREE.Skeleton boneInverses is the wrong length."),this.boneInverses=[];for(let t=0,e=this.bones.length;t<e;t++)this.boneInverses.push(new Kt)}}function zo(){Se.call(this),this.type="Bone"}Object.assign(Do.prototype,{calculateInverses:function(){this.boneInverses=[];for(let t=0,e=this.bones.length;t<e;t++){const e=new Kt;this.bones[t]&&e.getInverse(this.bones[t].matrixWorld),this.boneInverses.push(e)}},pose:function(){for(let t=0,e=this.bones.length;t<e;t++){const e=this.bones[t];e&&e.matrixWorld.getInverse(this.boneInverses[t])}for(let t=0,e=this.bones.length;t<e;t++){const e=this.bones[t];e&&(e.parent&&e.parent.isBone?(e.matrix.getInverse(e.parent.matrixWorld),e.matrix.multiply(e.matrixWorld)):e.matrix.copy(e.matrixWorld),e.matrix.decompose(e.position,e.quaternion,e.scale))}},update:function(){const t=this.bones,e=this.boneInverses,n=this.boneMatrices,i=this.boneTexture;for(let i=0,r=t.length;i<r;i++){const r=t[i]?t[i].matrixWorld:Io;Oo.multiplyMatrices(r,e[i]),Oo.toArray(n,16*i)}void 0!==i&&(i.needsUpdate=!0)},clone:function(){return new Do(this.bones,this.boneInverses)},getBoneByName:function(t){for(let e=0,n=this.bones.length;e<n;e++){const n=this.bones[e];if(n.name===t)return n}},dispose:function(){this.boneTexture&&(this.boneTexture.dispose(),this.boneTexture=void 0)}}),zo.prototype=Object.assign(Object.create(Se.prototype),{constructor:zo,isBone:!0});const Uo=new Kt,Bo=new Kt,Ho=[],Fo=new Un;function ko(t,e,n){Un.call(this,t,e),this.instanceMatrix=new Ke(new Float32Array(16*n),16),this.instanceColor=null,this.count=n,this.frustumCulled=!1}function Go(t){Ze.call(this),this.type="LineBasicMaterial",this.color=new qe(16777215),this.linewidth=1,this.linecap="round",this.linejoin="round",this.morphTargets=!1,this.setValues(t)}ko.prototype=Object.assign(Object.create(Un.prototype),{constructor:ko,isInstancedMesh:!0,copy:function(t){return Un.prototype.copy.call(this,t),this.instanceMatrix.copy(t.instanceMatrix),this.count=t.count,this},setColorAt:function(t,e){null===this.instanceColor&&(this.instanceColor=new Ke(new Float32Array(3*this.count),3)),e.toArray(this.instanceColor.array,3*t)},getMatrixAt:function(t,e){e.fromArray(this.instanceMatrix.array,16*t)},raycast:function(t,e){const n=this.matrixWorld,i=this.count;if(Fo.geometry=this.geometry,Fo.material=this.material,void 0!==Fo.material)for(let r=0;r<i;r++){this.getMatrixAt(r,Uo),Bo.multiplyMatrices(n,Uo),Fo.matrixWorld=Bo,Fo.raycast(t,Ho);for(let t=0,n=Ho.length;t<n;t++){const n=Ho[t];n.instanceId=r,n.object=this,e.push(n)}Ho.length=0}},setMatrixAt:function(t,e){e.toArray(this.instanceMatrix.array,16*t)},updateMorphTargets:function(){}}),Go.prototype=Object.create(Ze.prototype),Go.prototype.constructor=Go,Go.prototype.isLineBasicMaterial=!0,Go.prototype.copy=function(t){return Ze.prototype.copy.call(this,t),this.color.copy(t.color),this.linewidth=t.linewidth,this.linecap=t.linecap,this.linejoin=t.linejoin,this.morphTargets=t.morphTargets,this};const Vo=new Et,jo=new Et,Wo=new Kt,qo=new Qt,Xo=new jt;function Yo(t,e,n){1===n&&console.error("THREE.Line: parameter THREE.LinePieces no longer supported. Use THREE.LineSegments instead."),Se.call(this),this.type="Line",this.geometry=void 0!==t?t:new xn,this.material=void 0!==e?e:new Go,this.updateMorphTargets()}Yo.prototype=Object.assign(Object.create(Se.prototype),{constructor:Yo,isLine:!0,copy:function(t){return Se.prototype.copy.call(this,t),this.material=t.material,this.geometry=t.geometry,this},computeLineDistances:function(){const t=this.geometry;if(t.isBufferGeometry)if(null===t.index){const e=t.attributes.position,n=[0];for(let t=1,i=e.count;t<i;t++)Vo.fromBufferAttribute(e,t-1),jo.fromBufferAttribute(e,t),n[t]=n[t-1],n[t]+=Vo.distanceTo(jo);t.setAttribute("lineDistance",new cn(n,1))}else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");else if(t.isGeometry){const e=t.vertices,n=t.lineDistances;n[0]=0;for(let t=1,i=e.length;t<i;t++)n[t]=n[t-1],n[t]+=e[t-1].distanceTo(e[t])}return this},raycast:function(t,e){const n=this.geometry,i=this.matrixWorld,r=t.params.Line.threshold;if(null===n.boundingSphere&&n.computeBoundingSphere(),Xo.copy(n.boundingSphere),Xo.applyMatrix4(i),Xo.radius+=r,!1===t.ray.intersectsSphere(Xo))return;Wo.getInverse(i),qo.copy(t.ray).applyMatrix4(Wo);const o=r/((this.scale.x+this.scale.y+this.scale.z)/3),s=o*o,a=new Et,c=new Et,l=new Et,h=new Et,u=this.isLineSegments?2:1;if(n.isBufferGeometry){const i=n.index,r=n.attributes.position;if(null!==i){const n=i.array;for(let i=0,o=n.length-1;i<o;i+=u){const o=n[i],u=n[i+1];a.fromBufferAttribute(r,o),c.fromBufferAttribute(r,u);if(qo.distanceSqToSegment(a,c,h,l)>s)continue;h.applyMatrix4(this.matrixWorld);const d=t.ray.origin.distanceTo(h);d<t.near||d>t.far||e.push({distance:d,point:l.clone().applyMatrix4(this.matrixWorld),index:i,face:null,faceIndex:null,object:this})}}else for(let n=0,i=r.count-1;n<i;n+=u){a.fromBufferAttribute(r,n),c.fromBufferAttribute(r,n+1);if(qo.distanceSqToSegment(a,c,h,l)>s)continue;h.applyMatrix4(this.matrixWorld);const i=t.ray.origin.distanceTo(h);i<t.near||i>t.far||e.push({distance:i,point:l.clone().applyMatrix4(this.matrixWorld),index:n,face:null,faceIndex:null,object:this})}}else if(n.isGeometry){const i=n.vertices,r=i.length;for(let n=0;n<r-1;n+=u){if(qo.distanceSqToSegment(i[n],i[n+1],h,l)>s)continue;h.applyMatrix4(this.matrixWorld);const r=t.ray.origin.distanceTo(h);r<t.near||r>t.far||e.push({distance:r,point:l.clone().applyMatrix4(this.matrixWorld),index:n,face:null,faceIndex:null,object:this})}}},updateMorphTargets:function(){const t=this.geometry;if(t.isBufferGeometry){const e=t.morphAttributes,n=Object.keys(e);if(n.length>0){const t=e[n[0]];if(void 0!==t){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let e=0,n=t.length;e<n;e++){const n=t[e].name||String(e);this.morphTargetInfluences.push(0),this.morphTargetDictionary[n]=e}}}}else{const e=t.morphTargets;void 0!==e&&e.length>0&&console.error("THREE.Line.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.")}}});const Zo=new Et,$o=new Et;function Jo(t,e){Yo.call(this,t,e),this.type="LineSegments"}function Qo(t,e){Yo.call(this,t,e),this.type="LineLoop"}function Ko(t){Ze.call(this),this.type="PointsMaterial",this.color=new qe(16777215),this.map=null,this.alphaMap=null,this.size=1,this.sizeAttenuation=!0,this.morphTargets=!1,this.setValues(t)}Jo.prototype=Object.assign(Object.create(Yo.prototype),{constructor:Jo,isLineSegments:!0,computeLineDistances:function(){const t=this.geometry;if(t.isBufferGeometry)if(null===t.index){const e=t.attributes.position,n=[];for(let t=0,i=e.count;t<i;t+=2)Zo.fromBufferAttribute(e,t),$o.fromBufferAttribute(e,t+1),n[t]=0===t?0:n[t-1],n[t+1]=n[t]+Zo.distanceTo($o);t.setAttribute("lineDistance",new cn(n,1))}else console.warn("THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");else if(t.isGeometry){const e=t.vertices,n=t.lineDistances;for(let t=0,i=e.length;t<i;t+=2)Zo.copy(e[t]),$o.copy(e[t+1]),n[t]=0===t?0:n[t-1],n[t+1]=n[t]+Zo.distanceTo($o)}return this}}),Qo.prototype=Object.assign(Object.create(Yo.prototype),{constructor:Qo,isLineLoop:!0}),Ko.prototype=Object.create(Ze.prototype),Ko.prototype.constructor=Ko,Ko.prototype.isPointsMaterial=!0,Ko.prototype.copy=function(t){return Ze.prototype.copy.call(this,t),this.color.copy(t.color),this.map=t.map,this.alphaMap=t.alphaMap,this.size=t.size,this.sizeAttenuation=t.sizeAttenuation,this.morphTargets=t.morphTargets,this};const ts=new Kt,es=new Qt,ns=new jt,is=new Et;function rs(t,e){Se.call(this),this.type="Points",this.geometry=void 0!==t?t:new xn,this.material=void 0!==e?e:new Ko,this.updateMorphTargets()}function os(t,e,n,i,r,o,s){const a=es.distanceSqToPoint(t);if(a<n){const n=new Et;es.closestPointToPoint(t,n),n.applyMatrix4(i);const c=r.ray.origin.distanceTo(n);if(c<r.near||c>r.far)return;o.push({distance:c,distanceToRay:Math.sqrt(a),point:n,index:e,face:null,object:s})}}function ss(t,e,n,i,r,o,s,a,c){_t.call(this,t,e,n,i,r,o,s,a,c),this.format=void 0!==s?s:1022,this.minFilter=void 0!==o?o:1006,this.magFilter=void 0!==r?r:1006,this.generateMipmaps=!1;const l=this;"requestVideoFrameCallback"in t&&t.requestVideoFrameCallback((function e(){l.needsUpdate=!0,t.requestVideoFrameCallback(e)}))}function as(t,e,n,i,r,o,s,a,c,l,h,u){_t.call(this,null,o,s,a,c,l,i,r,h,u),this.image={width:e,height:n},this.mipmaps=t,this.flipY=!1,this.generateMipmaps=!1}function cs(t,e,n,i,r,o,s,a,c){_t.call(this,t,e,n,i,r,o,s,a,c),this.needsUpdate=!0}function ls(t,e,n,i,r,o,s,a,c,l){if(1026!==(l=void 0!==l?l:1026)&&1027!==l)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");void 0===n&&1026===l&&(n=1012),void 0===n&&1027===l&&(n=1020),_t.call(this,null,i,r,o,s,a,l,n,c),this.image={width:t,height:e},this.magFilter=void 0!==s?s:1003,this.minFilter=void 0!==a?a:1003,this.flipY=!1,this.generateMipmaps=!1}rs.prototype=Object.assign(Object.create(Se.prototype),{constructor:rs,isPoints:!0,copy:function(t){return Se.prototype.copy.call(this,t),this.material=t.material,this.geometry=t.geometry,this},raycast:function(t,e){const n=this.geometry,i=this.matrixWorld,r=t.params.Points.threshold;if(null===n.boundingSphere&&n.computeBoundingSphere(),ns.copy(n.boundingSphere),ns.applyMatrix4(i),ns.radius+=r,!1===t.ray.intersectsSphere(ns))return;ts.getInverse(i),es.copy(t.ray).applyMatrix4(ts);const o=r/((this.scale.x+this.scale.y+this.scale.z)/3),s=o*o;if(n.isBufferGeometry){const r=n.index,o=n.attributes.position;if(null!==r){const n=r.array;for(let r=0,a=n.length;r<a;r++){const a=n[r];is.fromBufferAttribute(o,a),os(is,a,s,i,t,e,this)}}else for(let n=0,r=o.count;n<r;n++)is.fromBufferAttribute(o,n),os(is,n,s,i,t,e,this)}else{const r=n.vertices;for(let n=0,o=r.length;n<o;n++)os(r[n],n,s,i,t,e,this)}},updateMorphTargets:function(){const t=this.geometry;if(t.isBufferGeometry){const e=t.morphAttributes,n=Object.keys(e);if(n.length>0){const t=e[n[0]];if(void 0!==t){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let e=0,n=t.length;e<n;e++){const n=t[e].name||String(e);this.morphTargetInfluences.push(0),this.morphTargetDictionary[n]=e}}}}else{const e=t.morphTargets;void 0!==e&&e.length>0&&console.error("THREE.Points.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.")}}}),ss.prototype=Object.assign(Object.create(_t.prototype),{constructor:ss,isVideoTexture:!0,update:function(){const t=this.image;!1==="requestVideoFrameCallback"in t&&t.readyState>=t.HAVE_CURRENT_DATA&&(this.needsUpdate=!0)}}),as.prototype=Object.create(_t.prototype),as.prototype.constructor=as,as.prototype.isCompressedTexture=!0,cs.prototype=Object.create(_t.prototype),cs.prototype.constructor=cs,cs.prototype.isCanvasTexture=!0,ls.prototype=Object.create(_t.prototype),ls.prototype.constructor=ls,ls.prototype.isDepthTexture=!0;let hs=0;const us=new Kt,ds=new Se,ps=new Et;function fs(){Object.defineProperty(this,"id",{value:hs+=2}),this.uuid=ft.generateUUID(),this.name="",this.type="Geometry",this.vertices=[],this.colors=[],this.faces=[],this.faceVertexUvs=[[]],this.morphTargets=[],this.morphNormals=[],this.skinWeights=[],this.skinIndices=[],this.lineDistances=[],this.boundingBox=null,this.boundingSphere=null,this.elementsNeedUpdate=!1,this.verticesNeedUpdate=!1,this.uvsNeedUpdate=!1,this.normalsNeedUpdate=!1,this.colorsNeedUpdate=!1,this.lineDistancesNeedUpdate=!1,this.groupsNeedUpdate=!1}fs.prototype=Object.assign(Object.create(ut.prototype),{constructor:fs,isGeometry:!0,applyMatrix4:function(t){const e=(new gt).getNormalMatrix(t);for(let e=0,n=this.vertices.length;e<n;e++){this.vertices[e].applyMatrix4(t)}for(let t=0,n=this.faces.length;t<n;t++){const n=this.faces[t];n.normal.applyMatrix3(e).normalize();for(let t=0,i=n.vertexNormals.length;t<i;t++)n.vertexNormals[t].applyMatrix3(e).normalize()}return null!==this.boundingBox&&this.computeBoundingBox(),null!==this.boundingSphere&&this.computeBoundingSphere(),this.verticesNeedUpdate=!0,this.normalsNeedUpdate=!0,this},rotateX:function(t){return us.makeRotationX(t),this.applyMatrix4(us),this},rotateY:function(t){return us.makeRotationY(t),this.applyMatrix4(us),this},rotateZ:function(t){return us.makeRotationZ(t),this.applyMatrix4(us),this},translate:function(t,e,n){return us.makeTranslation(t,e,n),this.applyMatrix4(us),this},scale:function(t,e,n){return us.makeScale(t,e,n),this.applyMatrix4(us),this},lookAt:function(t){return ds.lookAt(t),ds.updateMatrix(),this.applyMatrix4(ds.matrix),this},fromBufferGeometry:function(t){const e=this,n=null!==t.index?t.index:void 0,i=t.attributes;if(void 0===i.position)return console.error("THREE.Geometry.fromBufferGeometry(): Position attribute required for conversion."),this;const r=i.position,o=i.normal,s=i.color,a=i.uv,c=i.uv2;void 0!==c&&(this.faceVertexUvs[1]=[]);for(let t=0;t<r.count;t++)e.vertices.push((new Et).fromBufferAttribute(r,t)),void 0!==s&&e.colors.push((new qe).fromBufferAttribute(s,t));function l(t,n,i,r){const l=void 0===s?[]:[e.colors[t].clone(),e.colors[n].clone(),e.colors[i].clone()],h=void 0===o?[]:[(new Et).fromBufferAttribute(o,t),(new Et).fromBufferAttribute(o,n),(new Et).fromBufferAttribute(o,i)],u=new Xe(t,n,i,h,l,r);e.faces.push(u),void 0!==a&&e.faceVertexUvs[0].push([(new mt).fromBufferAttribute(a,t),(new mt).fromBufferAttribute(a,n),(new mt).fromBufferAttribute(a,i)]),void 0!==c&&e.faceVertexUvs[1].push([(new mt).fromBufferAttribute(c,t),(new mt).fromBufferAttribute(c,n),(new mt).fromBufferAttribute(c,i)])}const h=t.groups;if(h.length>0)for(let t=0;t<h.length;t++){const e=h[t],i=e.start;for(let t=i,r=i+e.count;t<r;t+=3)void 0!==n?l(n.getX(t),n.getX(t+1),n.getX(t+2),e.materialIndex):l(t,t+1,t+2,e.materialIndex)}else if(void 0!==n)for(let t=0;t<n.count;t+=3)l(n.getX(t),n.getX(t+1),n.getX(t+2));else for(let t=0;t<r.count;t+=3)l(t,t+1,t+2);return this.computeFaceNormals(),null!==t.boundingBox&&(this.boundingBox=t.boundingBox.clone()),null!==t.boundingSphere&&(this.boundingSphere=t.boundingSphere.clone()),this},center:function(){return this.computeBoundingBox(),this.boundingBox.getCenter(ps).negate(),this.translate(ps.x,ps.y,ps.z),this},normalize:function(){this.computeBoundingSphere();const t=this.boundingSphere.center,e=this.boundingSphere.radius,n=0===e?1:1/e,i=new Kt;return i.set(n,0,0,-n*t.x,0,n,0,-n*t.y,0,0,n,-n*t.z,0,0,0,1),this.applyMatrix4(i),this},computeFaceNormals:function(){const t=new Et,e=new Et;for(let n=0,i=this.faces.length;n<i;n++){const i=this.faces[n],r=this.vertices[i.a],o=this.vertices[i.b],s=this.vertices[i.c];t.subVectors(s,o),e.subVectors(r,o),t.cross(e),t.normalize(),i.normal.copy(t)}},computeVertexNormals:function(t){void 0===t&&(t=!0);const e=new Array(this.vertices.length);for(let t=0,n=this.vertices.length;t<n;t++)e[t]=new Et;if(t){const t=new Et,n=new Et;for(let i=0,r=this.faces.length;i<r;i++){const r=this.faces[i],o=this.vertices[r.a],s=this.vertices[r.b],a=this.vertices[r.c];t.subVectors(a,s),n.subVectors(o,s),t.cross(n),e[r.a].add(t),e[r.b].add(t),e[r.c].add(t)}}else{this.computeFaceNormals();for(let t=0,n=this.faces.length;t<n;t++){const n=this.faces[t];e[n.a].add(n.normal),e[n.b].add(n.normal),e[n.c].add(n.normal)}}for(let t=0,n=this.vertices.length;t<n;t++)e[t].normalize();for(let t=0,n=this.faces.length;t<n;t++){const n=this.faces[t],i=n.vertexNormals;3===i.length?(i[0].copy(e[n.a]),i[1].copy(e[n.b]),i[2].copy(e[n.c])):(i[0]=e[n.a].clone(),i[1]=e[n.b].clone(),i[2]=e[n.c].clone())}this.faces.length>0&&(this.normalsNeedUpdate=!0)},computeFlatVertexNormals:function(){this.computeFaceNormals();for(let t=0,e=this.faces.length;t<e;t++){const e=this.faces[t],n=e.vertexNormals;3===n.length?(n[0].copy(e.normal),n[1].copy(e.normal),n[2].copy(e.normal)):(n[0]=e.normal.clone(),n[1]=e.normal.clone(),n[2]=e.normal.clone())}this.faces.length>0&&(this.normalsNeedUpdate=!0)},computeMorphNormals:function(){for(let t=0,e=this.faces.length;t<e;t++){const e=this.faces[t];e.__originalFaceNormal?e.__originalFaceNormal.copy(e.normal):e.__originalFaceNormal=e.normal.clone(),e.__originalVertexNormals||(e.__originalVertexNormals=[]);for(let t=0,n=e.vertexNormals.length;t<n;t++)e.__originalVertexNormals[t]?e.__originalVertexNormals[t].copy(e.vertexNormals[t]):e.__originalVertexNormals[t]=e.vertexNormals[t].clone()}const t=new fs;t.faces=this.faces;for(let e=0,n=this.morphTargets.length;e<n;e++){if(!this.morphNormals[e]){this.morphNormals[e]={},this.morphNormals[e].faceNormals=[],this.morphNormals[e].vertexNormals=[];const t=this.morphNormals[e].faceNormals,n=this.morphNormals[e].vertexNormals;for(let e=0,i=this.faces.length;e<i;e++){const e=new Et,i={a:new Et,b:new Et,c:new Et};t.push(e),n.push(i)}}const n=this.morphNormals[e];t.vertices=this.morphTargets[e].vertices,t.computeFaceNormals(),t.computeVertexNormals();for(let t=0,e=this.faces.length;t<e;t++){const e=this.faces[t],i=n.faceNormals[t],r=n.vertexNormals[t];i.copy(e.normal),r.a.copy(e.vertexNormals[0]),r.b.copy(e.vertexNormals[1]),r.c.copy(e.vertexNormals[2])}}for(let t=0,e=this.faces.length;t<e;t++){const e=this.faces[t];e.normal=e.__originalFaceNormal,e.vertexNormals=e.__originalVertexNormals}},computeBoundingBox:function(){null===this.boundingBox&&(this.boundingBox=new Lt),this.boundingBox.setFromPoints(this.vertices)},computeBoundingSphere:function(){null===this.boundingSphere&&(this.boundingSphere=new jt),this.boundingSphere.setFromPoints(this.vertices)},merge:function(t,e,n){if(!t||!t.isGeometry)return void console.error("THREE.Geometry.merge(): geometry not an instance of THREE.Geometry.",t);let i;const r=this.vertices.length,o=this.vertices,s=t.vertices,a=this.faces,c=t.faces,l=this.colors,h=t.colors;void 0===n&&(n=0),void 0!==e&&(i=(new gt).getNormalMatrix(e));for(let t=0,n=s.length;t<n;t++){const n=s[t].clone();void 0!==e&&n.applyMatrix4(e),o.push(n)}for(let t=0,e=h.length;t<e;t++)l.push(h[t].clone());for(let t=0,e=c.length;t<e;t++){const e=c[t];let o,s;const l=e.vertexNormals,h=e.vertexColors,u=new Xe(e.a+r,e.b+r,e.c+r);u.normal.copy(e.normal),void 0!==i&&u.normal.applyMatrix3(i).normalize();for(let t=0,e=l.length;t<e;t++)o=l[t].clone(),void 0!==i&&o.applyMatrix3(i).normalize(),u.vertexNormals.push(o);u.color.copy(e.color);for(let t=0,e=h.length;t<e;t++)s=h[t],u.vertexColors.push(s.clone());u.materialIndex=e.materialIndex+n,a.push(u)}for(let e=0,n=t.faceVertexUvs.length;e<n;e++){const n=t.faceVertexUvs[e];void 0===this.faceVertexUvs[e]&&(this.faceVertexUvs[e]=[]);for(let t=0,i=n.length;t<i;t++){const i=n[t],r=[];for(let t=0,e=i.length;t<e;t++)r.push(i[t].clone());this.faceVertexUvs[e].push(r)}}},mergeMesh:function(t){t&&t.isMesh?(t.matrixAutoUpdate&&t.updateMatrix(),this.merge(t.geometry,t.matrix)):console.error("THREE.Geometry.mergeMesh(): mesh not an instance of THREE.Mesh.",t)},mergeVertices:function(){const t={},e=[],n=[],i=Math.pow(10,4);for(let r=0,o=this.vertices.length;r<o;r++){const o=this.vertices[r],s=Math.round(o.x*i)+"_"+Math.round(o.y*i)+"_"+Math.round(o.z*i);void 0===t[s]?(t[s]=r,e.push(this.vertices[r]),n[r]=e.length-1):n[r]=n[t[s]]}const r=[];for(let t=0,e=this.faces.length;t<e;t++){const e=this.faces[t];e.a=n[e.a],e.b=n[e.b],e.c=n[e.c];const i=[e.a,e.b,e.c];for(let e=0;e<3;e++)if(i[e]===i[(e+1)%3]){r.push(t);break}}for(let t=r.length-1;t>=0;t--){const e=r[t];this.faces.splice(e,1);for(let t=0,n=this.faceVertexUvs.length;t<n;t++)this.faceVertexUvs[t].splice(e,1)}const o=this.vertices.length-e.length;return this.vertices=e,o},setFromPoints:function(t){this.vertices=[];for(let e=0,n=t.length;e<n;e++){const n=t[e];this.vertices.push(new Et(n.x,n.y,n.z||0))}return this},sortFacesByMaterialIndex:function(){const t=this.faces,e=t.length;for(let n=0;n<e;n++)t[n]._id=n;t.sort((function(t,e){return t.materialIndex-e.materialIndex}));const n=this.faceVertexUvs[0],i=this.faceVertexUvs[1];let r,o;n&&n.length===e&&(r=[]),i&&i.length===e&&(o=[]);for(let s=0;s<e;s++){const e=t[s]._id;r&&r.push(n[e]),o&&o.push(i[e])}r&&(this.faceVertexUvs[0]=r),o&&(this.faceVertexUvs[1]=o)},toJSON:function(){const t={metadata:{version:4.5,type:"Geometry",generator:"Geometry.toJSON"}};if(t.uuid=this.uuid,t.type=this.type,""!==this.name&&(t.name=this.name),void 0!==this.parameters){const e=this.parameters;for(const n in e)void 0!==e[n]&&(t[n]=e[n]);return t}const e=[];for(let t=0;t<this.vertices.length;t++){const n=this.vertices[t];e.push(n.x,n.y,n.z)}const n=[],i=[],r={},o=[],s={},a=[],c={};for(let t=0;t<this.faces.length;t++){const e=this.faces[t],i=!0,r=!1,o=void 0!==this.faceVertexUvs[0][t],s=e.normal.length()>0,a=e.vertexNormals.length>0,c=1!==e.color.r||1!==e.color.g||1!==e.color.b,p=e.vertexColors.length>0;let f=0;if(f=l(f,0,0),f=l(f,1,i),f=l(f,2,r),f=l(f,3,o),f=l(f,4,s),f=l(f,5,a),f=l(f,6,c),f=l(f,7,p),n.push(f),n.push(e.a,e.b,e.c),n.push(e.materialIndex),o){const e=this.faceVertexUvs[0][t];n.push(d(e[0]),d(e[1]),d(e[2]))}if(s&&n.push(h(e.normal)),a){const t=e.vertexNormals;n.push(h(t[0]),h(t[1]),h(t[2]))}if(c&&n.push(u(e.color)),p){const t=e.vertexColors;n.push(u(t[0]),u(t[1]),u(t[2]))}}function l(t,e,n){return n?t|1<<e:t&~(1<<e)}function h(t){const e=t.x.toString()+t.y.toString()+t.z.toString();return void 0!==r[e]||(r[e]=i.length/3,i.push(t.x,t.y,t.z)),r[e]}function u(t){const e=t.r.toString()+t.g.toString()+t.b.toString();return void 0!==s[e]||(s[e]=o.length,o.push(t.getHex())),s[e]}function d(t){const e=t.x.toString()+t.y.toString();return void 0!==c[e]||(c[e]=a.length/2,a.push(t.x,t.y)),c[e]}return t.data={},t.data.vertices=e,t.data.normals=i,o.length>0&&(t.data.colors=o),a.length>0&&(t.data.uvs=[a]),t.data.faces=n,t},clone:function(){return(new fs).copy(this)},copy:function(t){this.vertices=[],this.colors=[],this.faces=[],this.faceVertexUvs=[[]],this.morphTargets=[],this.morphNormals=[],this.skinWeights=[],this.skinIndices=[],this.lineDistances=[],this.boundingBox=null,this.boundingSphere=null,this.name=t.name;const e=t.vertices;for(let t=0,n=e.length;t<n;t++)this.vertices.push(e[t].clone());const n=t.colors;for(let t=0,e=n.length;t<e;t++)this.colors.push(n[t].clone());const i=t.faces;for(let t=0,e=i.length;t<e;t++)this.faces.push(i[t].clone());for(let e=0,n=t.faceVertexUvs.length;e<n;e++){const n=t.faceVertexUvs[e];void 0===this.faceVertexUvs[e]&&(this.faceVertexUvs[e]=[]);for(let t=0,i=n.length;t<i;t++){const i=n[t],r=[];for(let t=0,e=i.length;t<e;t++){const e=i[t];r.push(e.clone())}this.faceVertexUvs[e].push(r)}}const r=t.morphTargets;for(let t=0,e=r.length;t<e;t++){const e={};if(e.name=r[t].name,void 0!==r[t].vertices){e.vertices=[];for(let n=0,i=r[t].vertices.length;n<i;n++)e.vertices.push(r[t].vertices[n].clone())}if(void 0!==r[t].normals){e.normals=[];for(let n=0,i=r[t].normals.length;n<i;n++)e.normals.push(r[t].normals[n].clone())}this.morphTargets.push(e)}const o=t.morphNormals;for(let t=0,e=o.length;t<e;t++){const e={};if(void 0!==o[t].vertexNormals){e.vertexNormals=[];for(let n=0,i=o[t].vertexNormals.length;n<i;n++){const i=o[t].vertexNormals[n],r={};r.a=i.a.clone(),r.b=i.b.clone(),r.c=i.c.clone(),e.vertexNormals.push(r)}}if(void 0!==o[t].faceNormals){e.faceNormals=[];for(let n=0,i=o[t].faceNormals.length;n<i;n++)e.faceNormals.push(o[t].faceNormals[n].clone())}this.morphNormals.push(e)}const s=t.skinWeights;for(let t=0,e=s.length;t<e;t++)this.skinWeights.push(s[t].clone());const a=t.skinIndices;for(let t=0,e=a.length;t<e;t++)this.skinIndices.push(a[t].clone());const c=t.lineDistances;for(let t=0,e=c.length;t<e;t++)this.lineDistances.push(c[t]);const l=t.boundingBox;null!==l&&(this.boundingBox=l.clone());const h=t.boundingSphere;return null!==h&&(this.boundingSphere=h.clone()),this.elementsNeedUpdate=t.elementsNeedUpdate,this.verticesNeedUpdate=t.verticesNeedUpdate,this.uvsNeedUpdate=t.uvsNeedUpdate,this.normalsNeedUpdate=t.normalsNeedUpdate,this.colorsNeedUpdate=t.colorsNeedUpdate,this.lineDistancesNeedUpdate=t.lineDistancesNeedUpdate,this.groupsNeedUpdate=t.groupsNeedUpdate,this},dispose:function(){this.dispatchEvent({type:"dispose"})}});new Et,new Et,new Et,new He;const ms=function(t,e,n){n=n||2;const i=e&&e.length,r=i?e[0]*n:t.length;let o=gs(t,0,r,n,!0);const s=[];if(!o||o.next===o.prev)return s;let a,c,l,h,u,d,p;if(i&&(o=function(t,e,n,i){const r=[];let o,s,a,c,l;for(o=0,s=e.length;o<s;o++)a=e[o]*i,c=o<s-1?e[o+1]*i:t.length,l=gs(t,a,c,i,!1),l===l.next&&(l.steiner=!0),r.push(As(l));for(r.sort(Ms),o=0;o<r.length;o++)Ss(r[o],n),n=vs(n,n.next);return n}(t,e,o,n)),t.length>80*n){a=l=t[0],c=h=t[1];for(let e=n;e<r;e+=n)u=t[e],d=t[e+1],u<a&&(a=u),d<c&&(c=d),u>l&&(l=u),d>h&&(h=d);p=Math.max(l-a,h-c),p=0!==p?1/p:0}return ys(o,s,n,a,c,p),s};function gs(t,e,n,i,r){let o,s;if(r===function(t,e,n,i){let r=0;for(let o=e,s=n-i;o<n;o+=i)r+=(t[s]-t[o])*(t[o+1]+t[s+1]),s=o;return r}(t,e,n,i)>0)for(o=e;o<n;o+=i)s=Us(o,t[o],t[o+1],s);else for(o=n-i;o>=e;o-=i)s=Us(o,t[o],t[o+1],s);return s&&Cs(s,s.next)&&(Bs(s),s=s.next),s}function vs(t,e){if(!t)return t;e||(e=t);let n,i=t;do{if(n=!1,i.steiner||!Cs(i,i.next)&&0!==Ps(i.prev,i,i.next))i=i.next;else{if(Bs(i),i=e=i.prev,i===i.next)break;n=!0}}while(n||i!==e);return e}function ys(t,e,n,i,r,o,s){if(!t)return;!s&&o&&function(t,e,n,i){let r=t;do{null===r.z&&(r.z=Ts(r.x,r.y,e,n,i)),r.prevZ=r.prev,r.nextZ=r.next,r=r.next}while(r!==t);r.prevZ.nextZ=null,r.prevZ=null,function(t){let e,n,i,r,o,s,a,c,l=1;do{for(n=t,t=null,o=null,s=0;n;){for(s++,i=n,a=0,e=0;e<l&&(a++,i=i.nextZ,i);e++);for(c=l;a>0||c>0&&i;)0!==a&&(0===c||!i||n.z<=i.z)?(r=n,n=n.nextZ,a--):(r=i,i=i.nextZ,c--),o?o.nextZ=r:t=r,r.prevZ=o,o=r;n=i}o.nextZ=null,l*=2}while(s>1)}(r)}(t,i,r,o);let a,c,l=t;for(;t.prev!==t.next;)if(a=t.prev,c=t.next,o?_s(t,i,r,o):xs(t))e.push(a.i/n),e.push(t.i/n),e.push(c.i/n),Bs(t),t=c.next,l=c.next;else if((t=c)===l){s?1===s?ys(t=bs(vs(t),e,n),e,n,i,r,o,2):2===s&&ws(t,e,n,i,r,o):ys(vs(t),e,n,i,r,o,1);break}}function xs(t){const e=t.prev,n=t,i=t.next;if(Ps(e,n,i)>=0)return!1;let r=t.next.next;for(;r!==t.prev;){if(Ls(e.x,e.y,n.x,n.y,i.x,i.y,r.x,r.y)&&Ps(r.prev,r,r.next)>=0)return!1;r=r.next}return!0}function _s(t,e,n,i){const r=t.prev,o=t,s=t.next;if(Ps(r,o,s)>=0)return!1;const a=r.x<o.x?r.x<s.x?r.x:s.x:o.x<s.x?o.x:s.x,c=r.y<o.y?r.y<s.y?r.y:s.y:o.y<s.y?o.y:s.y,l=r.x>o.x?r.x>s.x?r.x:s.x:o.x>s.x?o.x:s.x,h=r.y>o.y?r.y>s.y?r.y:s.y:o.y>s.y?o.y:s.y,u=Ts(a,c,e,n,i),d=Ts(l,h,e,n,i);let p=t.prevZ,f=t.nextZ;for(;p&&p.z>=u&&f&&f.z<=d;){if(p!==t.prev&&p!==t.next&&Ls(r.x,r.y,o.x,o.y,s.x,s.y,p.x,p.y)&&Ps(p.prev,p,p.next)>=0)return!1;if(p=p.prevZ,f!==t.prev&&f!==t.next&&Ls(r.x,r.y,o.x,o.y,s.x,s.y,f.x,f.y)&&Ps(f.prev,f,f.next)>=0)return!1;f=f.nextZ}for(;p&&p.z>=u;){if(p!==t.prev&&p!==t.next&&Ls(r.x,r.y,o.x,o.y,s.x,s.y,p.x,p.y)&&Ps(p.prev,p,p.next)>=0)return!1;p=p.prevZ}for(;f&&f.z<=d;){if(f!==t.prev&&f!==t.next&&Ls(r.x,r.y,o.x,o.y,s.x,s.y,f.x,f.y)&&Ps(f.prev,f,f.next)>=0)return!1;f=f.nextZ}return!0}function bs(t,e,n){let i=t;do{const r=i.prev,o=i.next.next;!Cs(r,o)&&Ns(r,i,i.next,o)&&Ds(r,o)&&Ds(o,r)&&(e.push(r.i/n),e.push(i.i/n),e.push(o.i/n),Bs(i),Bs(i.next),i=t=o),i=i.next}while(i!==t);return vs(i)}function ws(t,e,n,i,r,o){let s=t;do{let t=s.next.next;for(;t!==s.prev;){if(s.i!==t.i&&Rs(s,t)){let a=zs(s,t);return s=vs(s,s.next),a=vs(a,a.next),ys(s,e,n,i,r,o),void ys(a,e,n,i,r,o)}t=t.next}s=s.next}while(s!==t)}function Ms(t,e){return t.x-e.x}function Ss(t,e){if(e=function(t,e){let n=e;const i=t.x,r=t.y;let o,s=-1/0;do{if(r<=n.y&&r>=n.next.y&&n.next.y!==n.y){const t=n.x+(r-n.y)*(n.next.x-n.x)/(n.next.y-n.y);if(t<=i&&t>s){if(s=t,t===i){if(r===n.y)return n;if(r===n.next.y)return n.next}o=n.x<n.next.x?n:n.next}}n=n.next}while(n!==e);if(!o)return null;if(i===s)return o;const a=o,c=o.x,l=o.y;let h,u=1/0;n=o;do{i>=n.x&&n.x>=c&&i!==n.x&&Ls(r<l?i:s,r,c,l,r<l?s:i,r,n.x,n.y)&&(h=Math.abs(r-n.y)/(i-n.x),Ds(n,t)&&(h<u||h===u&&(n.x>o.x||n.x===o.x&&Es(o,n)))&&(o=n,u=h)),n=n.next}while(n!==a);return o}(t,e)){const n=zs(e,t);vs(e,e.next),vs(n,n.next)}}function Es(t,e){return Ps(t.prev,t,e.prev)<0&&Ps(e.next,t,t.next)<0}function Ts(t,e,n,i,r){return(t=1431655765&((t=858993459&((t=252645135&((t=16711935&((t=32767*(t-n)*r)|t<<8))|t<<4))|t<<2))|t<<1))|(e=1431655765&((e=858993459&((e=252645135&((e=16711935&((e=32767*(e-i)*r)|e<<8))|e<<4))|e<<2))|e<<1))<<1}function As(t){let e=t,n=t;do{(e.x<n.x||e.x===n.x&&e.y<n.y)&&(n=e),e=e.next}while(e!==t);return n}function Ls(t,e,n,i,r,o,s,a){return(r-s)*(e-a)-(t-s)*(o-a)>=0&&(t-s)*(i-a)-(n-s)*(e-a)>=0&&(n-s)*(o-a)-(r-s)*(i-a)>=0}function Rs(t,e){return t.next.i!==e.i&&t.prev.i!==e.i&&!function(t,e){let n=t;do{if(n.i!==t.i&&n.next.i!==t.i&&n.i!==e.i&&n.next.i!==e.i&&Ns(n,n.next,t,e))return!0;n=n.next}while(n!==t);return!1}(t,e)&&(Ds(t,e)&&Ds(e,t)&&function(t,e){let n=t,i=!1;const r=(t.x+e.x)/2,o=(t.y+e.y)/2;do{n.y>o!=n.next.y>o&&n.next.y!==n.y&&r<(n.next.x-n.x)*(o-n.y)/(n.next.y-n.y)+n.x&&(i=!i),n=n.next}while(n!==t);return i}(t,e)&&(Ps(t.prev,t,e.prev)||Ps(t,e.prev,e))||Cs(t,e)&&Ps(t.prev,t,t.next)>0&&Ps(e.prev,e,e.next)>0)}function Ps(t,e,n){return(e.y-t.y)*(n.x-e.x)-(e.x-t.x)*(n.y-e.y)}function Cs(t,e){return t.x===e.x&&t.y===e.y}function Ns(t,e,n,i){const r=Is(Ps(t,e,n)),o=Is(Ps(t,e,i)),s=Is(Ps(n,i,t)),a=Is(Ps(n,i,e));return r!==o&&s!==a||(!(0!==r||!Os(t,n,e))||(!(0!==o||!Os(t,i,e))||(!(0!==s||!Os(n,t,i))||!(0!==a||!Os(n,e,i)))))}function Os(t,e,n){return e.x<=Math.max(t.x,n.x)&&e.x>=Math.min(t.x,n.x)&&e.y<=Math.max(t.y,n.y)&&e.y>=Math.min(t.y,n.y)}function Is(t){return t>0?1:t<0?-1:0}function Ds(t,e){return Ps(t.prev,t,t.next)<0?Ps(t,e,t.next)>=0&&Ps(t,t.prev,e)>=0:Ps(t,e,t.prev)<0||Ps(t,t.next,e)<0}function zs(t,e){const n=new Hs(t.i,t.x,t.y),i=new Hs(e.i,e.x,e.y),r=t.next,o=e.prev;return t.next=e,e.prev=t,n.next=r,r.prev=n,i.next=n,n.prev=i,o.next=i,i.prev=o,i}function Us(t,e,n,i){const r=new Hs(t,e,n);return i?(r.next=i.next,r.prev=i,i.next.prev=r,i.next=r):(r.prev=r,r.next=r),r}function Bs(t){t.next.prev=t.prev,t.prev.next=t.next,t.prevZ&&(t.prevZ.nextZ=t.nextZ),t.nextZ&&(t.nextZ.prevZ=t.prevZ)}function Hs(t,e,n){this.i=t,this.x=e,this.y=n,this.prev=null,this.next=null,this.z=null,this.prevZ=null,this.nextZ=null,this.steiner=!1}const Fs={area:function(t){const e=t.length;let n=0;for(let i=e-1,r=0;r<e;i=r++)n+=t[i].x*t[r].y-t[r].x*t[i].y;return.5*n},isClockWise:function(t){return Fs.area(t)<0},triangulateShape:function(t,e){const n=[],i=[],r=[];ks(t),Gs(n,t);let o=t.length;e.forEach(ks);for(let t=0;t<e.length;t++)i.push(o),o+=e[t].length,Gs(n,e[t]);const s=ms(n,i);for(let t=0;t<s.length;t+=3)r.push(s.slice(t,t+3));return r}};function ks(t){const e=t.length;e>2&&t[e-1].equals(t[0])&&t.pop()}function Gs(t,e){for(let n=0;n<e.length;n++)t.push(e[n].x),t.push(e[n].y)}class Vs extends xn{constructor(t,e){super(),this.type="ExtrudeBufferGeometry",this.parameters={shapes:t,options:e},t=Array.isArray(t)?t:[t];const n=this,i=[],r=[];for(let e=0,n=t.length;e<n;e++){o(t[e])}function o(t){const o=[],s=void 0!==e.curveSegments?e.curveSegments:12,a=void 0!==e.steps?e.steps:1;let c=void 0!==e.depth?e.depth:100,l=void 0===e.bevelEnabled||e.bevelEnabled,h=void 0!==e.bevelThickness?e.bevelThickness:6,u=void 0!==e.bevelSize?e.bevelSize:h-2,d=void 0!==e.bevelOffset?e.bevelOffset:0,p=void 0!==e.bevelSegments?e.bevelSegments:3;const f=e.extrudePath,m=void 0!==e.UVGenerator?e.UVGenerator:js;void 0!==e.amount&&(console.warn("THREE.ExtrudeBufferGeometry: amount has been renamed to depth."),c=e.amount);let g,v,y,x,_,b=!1;f&&(g=f.getSpacedPoints(a),b=!0,l=!1,v=f.computeFrenetFrames(a,!1),y=new Et,x=new Et,_=new Et),l||(p=0,h=0,u=0,d=0);const w=t.extractPoints(s);let M=w.shape;const S=w.holes;if(!Fs.isClockWise(M)){M=M.reverse();for(let t=0,e=S.length;t<e;t++){const e=S[t];Fs.isClockWise(e)&&(S[t]=e.reverse())}}const E=Fs.triangulateShape(M,S),T=M;for(let t=0,e=S.length;t<e;t++){const e=S[t];M=M.concat(e)}function A(t,e,n){return e||console.error("THREE.ExtrudeGeometry: vec does not exist"),e.clone().multiplyScalar(n).add(t)}const L=M.length,R=E.length;function P(t,e,n){let i,r,o;const s=t.x-e.x,a=t.y-e.y,c=n.x-t.x,l=n.y-t.y,h=s*s+a*a,u=s*l-a*c;if(Math.abs(u)>Number.EPSILON){const u=Math.sqrt(h),d=Math.sqrt(c*c+l*l),p=e.x-a/u,f=e.y+s/u,m=((n.x-l/d-p)*l-(n.y+c/d-f)*c)/(s*l-a*c);i=p+s*m-t.x,r=f+a*m-t.y;const g=i*i+r*r;if(g<=2)return new mt(i,r);o=Math.sqrt(g/2)}else{let t=!1;s>Number.EPSILON?c>Number.EPSILON&&(t=!0):s<-Number.EPSILON?c<-Number.EPSILON&&(t=!0):Math.sign(a)===Math.sign(l)&&(t=!0),t?(i=-a,r=s,o=Math.sqrt(h)):(i=s,r=a,o=Math.sqrt(h/2))}return new mt(i/o,r/o)}const C=[];for(let t=0,e=T.length,n=e-1,i=t+1;t<e;t++,n++,i++)n===e&&(n=0),i===e&&(i=0),C[t]=P(T[t],T[n],T[i]);const N=[];let O,I=C.concat();for(let t=0,e=S.length;t<e;t++){const e=S[t];O=[];for(let t=0,n=e.length,i=n-1,r=t+1;t<n;t++,i++,r++)i===n&&(i=0),r===n&&(r=0),O[t]=P(e[t],e[i],e[r]);N.push(O),I=I.concat(O)}for(let t=0;t<p;t++){const e=t/p,n=h*Math.cos(e*Math.PI/2),i=u*Math.sin(e*Math.PI/2)+d;for(let t=0,e=T.length;t<e;t++){const e=A(T[t],C[t],i);U(e.x,e.y,-n)}for(let t=0,e=S.length;t<e;t++){const e=S[t];O=N[t];for(let t=0,r=e.length;t<r;t++){const r=A(e[t],O[t],i);U(r.x,r.y,-n)}}}const D=u+d;for(let t=0;t<L;t++){const e=l?A(M[t],I[t],D):M[t];b?(x.copy(v.normals[0]).multiplyScalar(e.x),y.copy(v.binormals[0]).multiplyScalar(e.y),_.copy(g[0]).add(x).add(y),U(_.x,_.y,_.z)):U(e.x,e.y,0)}for(let t=1;t<=a;t++)for(let e=0;e<L;e++){const n=l?A(M[e],I[e],D):M[e];b?(x.copy(v.normals[t]).multiplyScalar(n.x),y.copy(v.binormals[t]).multiplyScalar(n.y),_.copy(g[t]).add(x).add(y),U(_.x,_.y,_.z)):U(n.x,n.y,c/a*t)}for(let t=p-1;t>=0;t--){const e=t/p,n=h*Math.cos(e*Math.PI/2),i=u*Math.sin(e*Math.PI/2)+d;for(let t=0,e=T.length;t<e;t++){const e=A(T[t],C[t],i);U(e.x,e.y,c+n)}for(let t=0,e=S.length;t<e;t++){const e=S[t];O=N[t];for(let t=0,r=e.length;t<r;t++){const r=A(e[t],O[t],i);b?U(r.x,r.y+g[a-1].y,g[a-1].x+n):U(r.x,r.y,c+n)}}}function z(t,e){let n=t.length;for(;--n>=0;){const i=n;let r=n-1;r<0&&(r=t.length-1);for(let t=0,n=a+2*p;t<n;t++){const n=L*t,o=L*(t+1);H(e+i+n,e+r+n,e+r+o,e+i+o)}}}function U(t,e,n){o.push(t),o.push(e),o.push(n)}function B(t,e,r){F(t),F(e),F(r);const o=i.length/3,s=m.generateTopUV(n,i,o-3,o-2,o-1);k(s[0]),k(s[1]),k(s[2])}function H(t,e,r,o){F(t),F(e),F(o),F(e),F(r),F(o);const s=i.length/3,a=m.generateSideWallUV(n,i,s-6,s-3,s-2,s-1);k(a[0]),k(a[1]),k(a[3]),k(a[1]),k(a[2]),k(a[3])}function F(t){i.push(o[3*t+0]),i.push(o[3*t+1]),i.push(o[3*t+2])}function k(t){r.push(t.x),r.push(t.y)}!function(){const t=i.length/3;if(l){let t=0,e=L*t;for(let t=0;t<R;t++){const n=E[t];B(n[2]+e,n[1]+e,n[0]+e)}t=a+2*p,e=L*t;for(let t=0;t<R;t++){const n=E[t];B(n[0]+e,n[1]+e,n[2]+e)}}else{for(let t=0;t<R;t++){const e=E[t];B(e[2],e[1],e[0])}for(let t=0;t<R;t++){const e=E[t];B(e[0]+L*a,e[1]+L*a,e[2]+L*a)}}n.addGroup(t,i.length/3-t,0)}(),function(){const t=i.length/3;let e=0;z(T,e),e+=T.length;for(let t=0,n=S.length;t<n;t++){const n=S[t];z(n,e),e+=n.length}n.addGroup(t,i.length/3-t,1)}()}this.setAttribute("position",new cn(i,3)),this.setAttribute("uv",new cn(r,2)),this.computeVertexNormals()}toJSON(){const t=xn.prototype.toJSON.call(this);return function(t,e,n){if(n.shapes=[],Array.isArray(t))for(let e=0,i=t.length;e<i;e++){const i=t[e];n.shapes.push(i.uuid)}else n.shapes.push(t.uuid);void 0!==e.extrudePath&&(n.options.extrudePath=e.extrudePath.toJSON());return n}(this.parameters.shapes,this.parameters.options,t)}}const js={generateTopUV:function(t,e,n,i,r){const o=e[3*n],s=e[3*n+1],a=e[3*i],c=e[3*i+1],l=e[3*r],h=e[3*r+1];return[new mt(o,s),new mt(a,c),new mt(l,h)]},generateSideWallUV:function(t,e,n,i,r,o){const s=e[3*n],a=e[3*n+1],c=e[3*n+2],l=e[3*i],h=e[3*i+1],u=e[3*i+2],d=e[3*r],p=e[3*r+1],f=e[3*r+2],m=e[3*o],g=e[3*o+1],v=e[3*o+2];return Math.abs(a-h)<.01?[new mt(s,1-c),new mt(l,1-u),new mt(d,1-f),new mt(m,1-v)]:[new mt(a,1-c),new mt(h,1-u),new mt(p,1-f),new mt(g,1-v)]}};class Ws extends fs{constructor(t,e){super(),this.type="ExtrudeGeometry",this.parameters={shapes:t,options:e},this.fromBufferGeometry(new Vs(t,e)),this.mergeVertices()}toJSON(){const t=super.toJSON();return function(t,e,n){if(n.shapes=[],Array.isArray(t))for(let e=0,i=t.length;e<i;e++){const i=t[e];n.shapes.push(i.uuid)}else n.shapes.push(t.uuid);void 0!==e.extrudePath&&(n.options.extrudePath=e.extrudePath.toJSON());return n}(this.parameters.shapes,this.parameters.options,t)}}function qs(t,e,n){xn.call(this),this.type="ParametricBufferGeometry",this.parameters={func:t,slices:e,stacks:n};const i=[],r=[],o=[],s=[],a=1e-5,c=new Et,l=new Et,h=new Et,u=new Et,d=new Et;t.length<3&&console.error("THREE.ParametricGeometry: Function must now modify a Vector3 as third parameter.");const p=e+1;for(let i=0;i<=n;i++){const p=i/n;for(let n=0;n<=e;n++){const i=n/e;t(i,p,l),r.push(l.x,l.y,l.z),i-a>=0?(t(i-a,p,h),u.subVectors(l,h)):(t(i+a,p,h),u.subVectors(h,l)),p-a>=0?(t(i,p-a,h),d.subVectors(l,h)):(t(i,p+a,h),d.subVectors(h,l)),c.crossVectors(u,d).normalize(),o.push(c.x,c.y,c.z),s.push(i,p)}}for(let t=0;t<n;t++)for(let n=0;n<e;n++){const e=t*p+n,r=t*p+n+1,o=(t+1)*p+n+1,s=(t+1)*p+n;i.push(e,r,s),i.push(r,o,s)}this.setIndex(i),this.setAttribute("position",new cn(r,3)),this.setAttribute("normal",new cn(o,3)),this.setAttribute("uv",new cn(s,2))}function Xs(t,e,n){fs.call(this),this.type="ParametricGeometry",this.parameters={func:t,slices:e,stacks:n},this.fromBufferGeometry(new qs(t,e,n)),this.mergeVertices()}qs.prototype=Object.create(xn.prototype),qs.prototype.constructor=qs,Xs.prototype=Object.create(fs.prototype),Xs.prototype.constructor=Xs;class Ys extends xn{constructor(t,e){super(),this.type="ShapeBufferGeometry",this.parameters={shapes:t,curveSegments:e},e=e||12;const n=[],i=[],r=[],o=[];let s=0,a=0;if(!1===Array.isArray(t))c(t);else for(let e=0;e<t.length;e++)c(t[e]),this.addGroup(s,a,e),s+=a,a=0;function c(t){const s=i.length/3,c=t.extractPoints(e);let l=c.shape;const h=c.holes;!1===Fs.isClockWise(l)&&(l=l.reverse());for(let t=0,e=h.length;t<e;t++){const e=h[t];!0===Fs.isClockWise(e)&&(h[t]=e.reverse())}const u=Fs.triangulateShape(l,h);for(let t=0,e=h.length;t<e;t++){const e=h[t];l=l.concat(e)}for(let t=0,e=l.length;t<e;t++){const e=l[t];i.push(e.x,e.y,0),r.push(0,0,1),o.push(e.x,e.y)}for(let t=0,e=u.length;t<e;t++){const e=u[t],i=e[0]+s,r=e[1]+s,o=e[2]+s;n.push(i,r,o),a+=3}}this.setIndex(n),this.setAttribute("position",new cn(i,3)),this.setAttribute("normal",new cn(r,3)),this.setAttribute("uv",new cn(o,2))}toJSON(){const t=xn.prototype.toJSON.call(this);return function(t,e){if(e.shapes=[],Array.isArray(t))for(let n=0,i=t.length;n<i;n++){const i=t[n];e.shapes.push(i.uuid)}else e.shapes.push(t.uuid);return e}(this.parameters.shapes,t)}}class Zs extends fs{constructor(t,e){super(),this.type="ShapeGeometry","object"==typeof e&&(console.warn("THREE.ShapeGeometry: Options parameter has been removed."),e=e.curveSegments),this.parameters={shapes:t,curveSegments:e},this.fromBufferGeometry(new Ys(t,e)),this.mergeVertices()}toJSON(){const t=fs.prototype.toJSON.call(this);return function(t,e){if(e.shapes=[],Array.isArray(t))for(let n=0,i=t.length;n<i;n++){const i=t[n];e.shapes.push(i.uuid)}else e.shapes.push(t.uuid);return e}(this.parameters.shapes,t)}}class $s extends xn{constructor(t,e,n,i,r){super(),this.type="TubeBufferGeometry",this.parameters={path:t,tubularSegments:e,radius:n,radialSegments:i,closed:r},e=e||64,n=n||1,i=i||8,r=r||!1;const o=t.computeFrenetFrames(e,r);this.tangents=o.tangents,this.normals=o.normals,this.binormals=o.binormals;const s=new Et,a=new Et,c=new mt;let l=new Et;const h=[],u=[],d=[],p=[];function f(r){l=t.getPointAt(r/e,l);const c=o.normals[r],d=o.binormals[r];for(let t=0;t<=i;t++){const e=t/i*Math.PI*2,r=Math.sin(e),o=-Math.cos(e);a.x=o*c.x+r*d.x,a.y=o*c.y+r*d.y,a.z=o*c.z+r*d.z,a.normalize(),u.push(a.x,a.y,a.z),s.x=l.x+n*a.x,s.y=l.y+n*a.y,s.z=l.z+n*a.z,h.push(s.x,s.y,s.z)}}!function(){for(let t=0;t<e;t++)f(t);f(!1===r?e:0),function(){for(let t=0;t<=e;t++)for(let n=0;n<=i;n++)c.x=t/e,c.y=n/i,d.push(c.x,c.y)}(),function(){for(let t=1;t<=e;t++)for(let e=1;e<=i;e++){const n=(i+1)*(t-1)+(e-1),r=(i+1)*t+(e-1),o=(i+1)*t+e,s=(i+1)*(t-1)+e;p.push(n,r,s),p.push(r,o,s)}}()}(),this.setIndex(p),this.setAttribute("position",new cn(h,3)),this.setAttribute("normal",new cn(u,3)),this.setAttribute("uv",new cn(d,2))}toJSON(){const t=xn.prototype.toJSON.call(this);return t.path=this.parameters.path.toJSON(),t}}class Js extends fs{constructor(t,e,n,i,r,o){super(),this.type="TubeGeometry",this.parameters={path:t,tubularSegments:e,radius:n,radialSegments:i,closed:r},void 0!==o&&console.warn("THREE.TubeGeometry: taper has been removed.");const s=new $s(t,e,n,i,r);this.tangents=s.tangents,this.normals=s.normals,this.binormals=s.binormals,this.fromBufferGeometry(s),this.mergeVertices()}}function Qs(t){Ze.call(this),this.type="ShadowMaterial",this.color=new qe(0),this.transparent=!0,this.setValues(t)}function Ks(t){jn.call(this,t),this.type="RawShaderMaterial"}function ta(t){Ze.call(this),this.defines={STANDARD:""},this.type="MeshStandardMaterial",this.color=new qe(16777215),this.roughness=1,this.metalness=0,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new qe(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=0,this.normalScale=new mt(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.roughnessMap=null,this.metalnessMap=null,this.alphaMap=null,this.envMap=null,this.envMapIntensity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.vertexTangents=!1,this.setValues(t)}function ea(t){ta.call(this),this.defines={STANDARD:"",PHYSICAL:""},this.type="MeshPhysicalMaterial",this.clearcoat=0,this.clearcoatMap=null,this.clearcoatRoughness=0,this.clearcoatRoughnessMap=null,this.clearcoatNormalScale=new mt(1,1),this.clearcoatNormalMap=null,this.reflectivity=.5,Object.defineProperty(this,"ior",{get:function(){return(1+.4*this.reflectivity)/(1-.4*this.reflectivity)},set:function(t){this.reflectivity=ft.clamp(2.5*(t-1)/(t+1),0,1)}}),this.sheen=null,this.transmission=0,this.transmissionMap=null,this.setValues(t)}function na(t){Ze.call(this),this.type="MeshPhongMaterial",this.color=new qe(16777215),this.specular=new qe(1118481),this.shininess=30,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new qe(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=0,this.normalScale=new mt(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=0,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(t)}function ia(t){Ze.call(this),this.defines={TOON:""},this.type="MeshToonMaterial",this.color=new qe(16777215),this.map=null,this.gradientMap=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new qe(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=0,this.normalScale=new mt(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(t)}function ra(t){Ze.call(this),this.type="MeshNormalMaterial",this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=0,this.normalScale=new mt(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(t)}function oa(t){Ze.call(this),this.type="MeshLambertMaterial",this.color=new qe(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new qe(0),this.emissiveIntensity=1,this.emissiveMap=null,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=0,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(t)}function sa(t){Ze.call(this),this.defines={MATCAP:""},this.type="MeshMatcapMaterial",this.color=new qe(16777215),this.matcap=null,this.map=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=0,this.normalScale=new mt(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(t)}function aa(t){Go.call(this),this.type="LineDashedMaterial",this.scale=1,this.dashSize=3,this.gapSize=1,this.setValues(t)}Qs.prototype=Object.create(Ze.prototype),Qs.prototype.constructor=Qs,Qs.prototype.isShadowMaterial=!0,Qs.prototype.copy=function(t){return Ze.prototype.copy.call(this,t),this.color.copy(t.color),this},Ks.prototype=Object.create(jn.prototype),Ks.prototype.constructor=Ks,Ks.prototype.isRawShaderMaterial=!0,ta.prototype=Object.create(Ze.prototype),ta.prototype.constructor=ta,ta.prototype.isMeshStandardMaterial=!0,ta.prototype.copy=function(t){return Ze.prototype.copy.call(this,t),this.defines={STANDARD:""},this.color.copy(t.color),this.roughness=t.roughness,this.metalness=t.metalness,this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.roughnessMap=t.roughnessMap,this.metalnessMap=t.metalnessMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.envMapIntensity=t.envMapIntensity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.morphNormals=t.morphNormals,this.vertexTangents=t.vertexTangents,this},ea.prototype=Object.create(ta.prototype),ea.prototype.constructor=ea,ea.prototype.isMeshPhysicalMaterial=!0,ea.prototype.copy=function(t){return ta.prototype.copy.call(this,t),this.defines={STANDARD:"",PHYSICAL:""},this.clearcoat=t.clearcoat,this.clearcoatMap=t.clearcoatMap,this.clearcoatRoughness=t.clearcoatRoughness,this.clearcoatRoughnessMap=t.clearcoatRoughnessMap,this.clearcoatNormalMap=t.clearcoatNormalMap,this.clearcoatNormalScale.copy(t.clearcoatNormalScale),this.reflectivity=t.reflectivity,t.sheen?this.sheen=(this.sheen||new qe).copy(t.sheen):this.sheen=null,this.transmission=t.transmission,this.transmissionMap=t.transmissionMap,this},na.prototype=Object.create(Ze.prototype),na.prototype.constructor=na,na.prototype.isMeshPhongMaterial=!0,na.prototype.copy=function(t){return Ze.prototype.copy.call(this,t),this.color.copy(t.color),this.specular.copy(t.specular),this.shininess=t.shininess,this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.morphNormals=t.morphNormals,this},ia.prototype=Object.create(Ze.prototype),ia.prototype.constructor=ia,ia.prototype.isMeshToonMaterial=!0,ia.prototype.copy=function(t){return Ze.prototype.copy.call(this,t),this.color.copy(t.color),this.map=t.map,this.gradientMap=t.gradientMap,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.alphaMap=t.alphaMap,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.morphNormals=t.morphNormals,this},ra.prototype=Object.create(Ze.prototype),ra.prototype.constructor=ra,ra.prototype.isMeshNormalMaterial=!0,ra.prototype.copy=function(t){return Ze.prototype.copy.call(this,t),this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.morphNormals=t.morphNormals,this},oa.prototype=Object.create(Ze.prototype),oa.prototype.constructor=oa,oa.prototype.isMeshLambertMaterial=!0,oa.prototype.copy=function(t){return Ze.prototype.copy.call(this,t),this.color.copy(t.color),this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.morphNormals=t.morphNormals,this},sa.prototype=Object.create(Ze.prototype),sa.prototype.constructor=sa,sa.prototype.isMeshMatcapMaterial=!0,sa.prototype.copy=function(t){return Ze.prototype.copy.call(this,t),this.defines={MATCAP:""},this.color.copy(t.color),this.matcap=t.matcap,this.map=t.map,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.alphaMap=t.alphaMap,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.morphNormals=t.morphNormals,this},aa.prototype=Object.create(Go.prototype),aa.prototype.constructor=aa,aa.prototype.isLineDashedMaterial=!0,aa.prototype.copy=function(t){return Go.prototype.copy.call(this,t),this.scale=t.scale,this.dashSize=t.dashSize,this.gapSize=t.gapSize,this};var ca=Object.freeze({__proto__:null,ShadowMaterial:Qs,SpriteMaterial:po,RawShaderMaterial:Ks,ShaderMaterial:jn,PointsMaterial:Ko,MeshPhysicalMaterial:ea,MeshStandardMaterial:ta,MeshPhongMaterial:na,MeshToonMaterial:ia,MeshNormalMaterial:ra,MeshLambertMaterial:oa,MeshDepthMaterial:Zr,MeshDistanceMaterial:$r,MeshBasicMaterial:$e,MeshMatcapMaterial:sa,LineDashedMaterial:aa,LineBasicMaterial:Go,Material:Ze});const la={arraySlice:function(t,e,n){return la.isTypedArray(t)?new t.constructor(t.subarray(e,void 0!==n?n:t.length)):t.slice(e,n)},convertArray:function(t,e,n){return!t||!n&&t.constructor===e?t:"number"==typeof e.BYTES_PER_ELEMENT?new e(t):Array.prototype.slice.call(t)},isTypedArray:function(t){return ArrayBuffer.isView(t)&&!(t instanceof DataView)},getKeyframeOrder:function(t){const e=t.length,n=new Array(e);for(let t=0;t!==e;++t)n[t]=t;return n.sort((function(e,n){return t[e]-t[n]})),n},sortedArray:function(t,e,n){const i=t.length,r=new t.constructor(i);for(let o=0,s=0;s!==i;++o){const i=n[o]*e;for(let n=0;n!==e;++n)r[s++]=t[i+n]}return r},flattenJSON:function(t,e,n,i){let r=1,o=t[0];for(;void 0!==o&&void 0===o[i];)o=t[r++];if(void 0===o)return;let s=o[i];if(void 0!==s)if(Array.isArray(s))do{s=o[i],void 0!==s&&(e.push(o.time),n.push.apply(n,s)),o=t[r++]}while(void 0!==o);else if(void 0!==s.toArray)do{s=o[i],void 0!==s&&(e.push(o.time),s.toArray(n,n.length)),o=t[r++]}while(void 0!==o);else do{s=o[i],void 0!==s&&(e.push(o.time),n.push(s)),o=t[r++]}while(void 0!==o)},subclip:function(t,e,n,i,r){r=r||30;const o=t.clone();o.name=e;const s=[];for(let t=0;t<o.tracks.length;++t){const e=o.tracks[t],a=e.getValueSize(),c=[],l=[];for(let t=0;t<e.times.length;++t){const o=e.times[t]*r;if(!(o<n||o>=i)){c.push(e.times[t]);for(let n=0;n<a;++n)l.push(e.values[t*a+n])}}0!==c.length&&(e.times=la.convertArray(c,e.times.constructor),e.values=la.convertArray(l,e.values.constructor),s.push(e))}o.tracks=s;let a=1/0;for(let t=0;t<o.tracks.length;++t)a>o.tracks[t].times[0]&&(a=o.tracks[t].times[0]);for(let t=0;t<o.tracks.length;++t)o.tracks[t].shift(-1*a);return o.resetDuration(),o},makeClipAdditive:function(t,e,n,i){void 0===e&&(e=0),void 0===n&&(n=t),(void 0===i||i<=0)&&(i=30);const r=n.tracks.length,o=e/i;for(let e=0;e<r;++e){const i=n.tracks[e],r=i.ValueTypeName;if("bool"===r||"string"===r)continue;const s=t.tracks.find((function(t){return t.name===i.name&&t.ValueTypeName===r}));if(void 0===s)continue;let a=0;const c=i.getValueSize();i.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(a=c/3);let l=0;const h=s.getValueSize();s.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(l=h/3);const u=i.times.length-1;let d;if(o<=i.times[0]){const t=a,e=c-a;d=la.arraySlice(i.values,t,e)}else if(o>=i.times[u]){const t=u*c+a,e=t+c-a;d=la.arraySlice(i.values,t,e)}else{const t=i.createInterpolant(),e=a,n=c-a;t.evaluate(o),d=la.arraySlice(t.resultBuffer,e,n)}if("quaternion"===r){(new St).fromArray(d).normalize().conjugate().toArray(d)}const p=s.times.length;for(let t=0;t<p;++t){const e=t*h+l;if("quaternion"===r)St.multiplyQuaternionsFlat(s.values,e,d,0,s.values,e);else{const t=h-2*l;for(let n=0;n<t;++n)s.values[e+n]-=d[n]}}}return t.blendMode=2501,t}};function ha(t,e,n,i){this.parameterPositions=t,this._cachedIndex=0,this.resultBuffer=void 0!==i?i:new e.constructor(n),this.sampleValues=e,this.valueSize=n}function ua(t,e,n,i){ha.call(this,t,e,n,i),this._weightPrev=-0,this._offsetPrev=-0,this._weightNext=-0,this._offsetNext=-0}function da(t,e,n,i){ha.call(this,t,e,n,i)}function pa(t,e,n,i){ha.call(this,t,e,n,i)}function fa(t,e,n,i){if(void 0===t)throw new Error("THREE.KeyframeTrack: track name is undefined");if(void 0===e||0===e.length)throw new Error("THREE.KeyframeTrack: no keyframes in track named "+t);this.name=t,this.times=la.convertArray(e,this.TimeBufferType),this.values=la.convertArray(n,this.ValueBufferType),this.setInterpolation(i||this.DefaultInterpolation)}function ma(t,e,n){fa.call(this,t,e,n)}function ga(t,e,n,i){fa.call(this,t,e,n,i)}function va(t,e,n,i){fa.call(this,t,e,n,i)}function ya(t,e,n,i){ha.call(this,t,e,n,i)}function xa(t,e,n,i){fa.call(this,t,e,n,i)}function _a(t,e,n,i){fa.call(this,t,e,n,i)}function ba(t,e,n,i){fa.call(this,t,e,n,i)}function wa(t,e,n,i){this.name=t,this.tracks=n,this.duration=void 0!==e?e:-1,this.blendMode=void 0!==i?i:2500,this.uuid=ft.generateUUID(),this.duration<0&&this.resetDuration()}function Ma(t){if(void 0===t.type)throw new Error("THREE.KeyframeTrack: track type undefined, can not parse");const e=function(t){switch(t.toLowerCase()){case"scalar":case"double":case"float":case"number":case"integer":return va;case"vector":case"vector2":case"vector3":case"vector4":return ba;case"color":return ga;case"quaternion":return xa;case"bool":case"boolean":return ma;case"string":return _a}throw new Error("THREE.KeyframeTrack: Unsupported typeName: "+t)}(t.type);if(void 0===t.times){const e=[],n=[];la.flattenJSON(t.keys,e,n,"value"),t.times=e,t.values=n}return void 0!==e.parse?e.parse(t):new e(t.name,t.times,t.values,t.interpolation)}Object.assign(ha.prototype,{evaluate:function(t){const e=this.parameterPositions;let n=this._cachedIndex,i=e[n],r=e[n-1];t:{e:{let o;n:{i:if(!(t<i)){for(let o=n+2;;){if(void 0===i){if(t<r)break i;return n=e.length,this._cachedIndex=n,this.afterEnd_(n-1,t,r)}if(n===o)break;if(r=i,i=e[++n],t<i)break e}o=e.length;break n}if(t>=r)break t;{const s=e[1];t<s&&(n=2,r=s);for(let o=n-2;;){if(void 0===r)return this._cachedIndex=0,this.beforeStart_(0,t,i);if(n===o)break;if(i=r,r=e[--n-1],t>=r)break e}o=n,n=0}}for(;n<o;){const i=n+o>>>1;t<e[i]?o=i:n=i+1}if(i=e[n],r=e[n-1],void 0===r)return this._cachedIndex=0,this.beforeStart_(0,t,i);if(void 0===i)return n=e.length,this._cachedIndex=n,this.afterEnd_(n-1,r,t)}this._cachedIndex=n,this.intervalChanged_(n,r,i)}return this.interpolate_(n,r,t,i)},settings:null,DefaultSettings_:{},getSettings_:function(){return this.settings||this.DefaultSettings_},copySampleValue_:function(t){const e=this.resultBuffer,n=this.sampleValues,i=this.valueSize,r=t*i;for(let t=0;t!==i;++t)e[t]=n[r+t];return e},interpolate_:function(){throw new Error("call to abstract method")},intervalChanged_:function(){}}),Object.assign(ha.prototype,{beforeStart_:ha.prototype.copySampleValue_,afterEnd_:ha.prototype.copySampleValue_}),ua.prototype=Object.assign(Object.create(ha.prototype),{constructor:ua,DefaultSettings_:{endingStart:2400,endingEnd:2400},intervalChanged_:function(t,e,n){const i=this.parameterPositions;let r=t-2,o=t+1,s=i[r],a=i[o];if(void 0===s)switch(this.getSettings_().endingStart){case 2401:r=t,s=2*e-n;break;case 2402:r=i.length-2,s=e+i[r]-i[r+1];break;default:r=t,s=n}if(void 0===a)switch(this.getSettings_().endingEnd){case 2401:o=t,a=2*n-e;break;case 2402:o=1,a=n+i[1]-i[0];break;default:o=t-1,a=e}const c=.5*(n-e),l=this.valueSize;this._weightPrev=c/(e-s),this._weightNext=c/(a-n),this._offsetPrev=r*l,this._offsetNext=o*l},interpolate_:function(t,e,n,i){const r=this.resultBuffer,o=this.sampleValues,s=this.valueSize,a=t*s,c=a-s,l=this._offsetPrev,h=this._offsetNext,u=this._weightPrev,d=this._weightNext,p=(n-e)/(i-e),f=p*p,m=f*p,g=-u*m+2*u*f-u*p,v=(1+u)*m+(-1.5-2*u)*f+(-.5+u)*p+1,y=(-1-d)*m+(1.5+d)*f+.5*p,x=d*m-d*f;for(let t=0;t!==s;++t)r[t]=g*o[l+t]+v*o[c+t]+y*o[a+t]+x*o[h+t];return r}}),da.prototype=Object.assign(Object.create(ha.prototype),{constructor:da,interpolate_:function(t,e,n,i){const r=this.resultBuffer,o=this.sampleValues,s=this.valueSize,a=t*s,c=a-s,l=(n-e)/(i-e),h=1-l;for(let t=0;t!==s;++t)r[t]=o[c+t]*h+o[a+t]*l;return r}}),pa.prototype=Object.assign(Object.create(ha.prototype),{constructor:pa,interpolate_:function(t){return this.copySampleValue_(t-1)}}),Object.assign(fa,{toJSON:function(t){const e=t.constructor;let n;if(void 0!==e.toJSON)n=e.toJSON(t);else{n={name:t.name,times:la.convertArray(t.times,Array),values:la.convertArray(t.values,Array)};const e=t.getInterpolation();e!==t.DefaultInterpolation&&(n.interpolation=e)}return n.type=t.ValueTypeName,n}}),Object.assign(fa.prototype,{constructor:fa,TimeBufferType:Float32Array,ValueBufferType:Float32Array,DefaultInterpolation:2301,InterpolantFactoryMethodDiscrete:function(t){return new pa(this.times,this.values,this.getValueSize(),t)},InterpolantFactoryMethodLinear:function(t){return new da(this.times,this.values,this.getValueSize(),t)},InterpolantFactoryMethodSmooth:function(t){return new ua(this.times,this.values,this.getValueSize(),t)},setInterpolation:function(t){let e;switch(t){case 2300:e=this.InterpolantFactoryMethodDiscrete;break;case 2301:e=this.InterpolantFactoryMethodLinear;break;case 2302:e=this.InterpolantFactoryMethodSmooth}if(void 0===e){const e="unsupported interpolation for "+this.ValueTypeName+" keyframe track named "+this.name;if(void 0===this.createInterpolant){if(t===this.DefaultInterpolation)throw new Error(e);this.setInterpolation(this.DefaultInterpolation)}return console.warn("THREE.KeyframeTrack:",e),this}return this.createInterpolant=e,this},getInterpolation:function(){switch(this.createInterpolant){case this.InterpolantFactoryMethodDiscrete:return 2300;case this.InterpolantFactoryMethodLinear:return 2301;case this.InterpolantFactoryMethodSmooth:return 2302}},getValueSize:function(){return this.values.length/this.times.length},shift:function(t){if(0!==t){const e=this.times;for(let n=0,i=e.length;n!==i;++n)e[n]+=t}return this},scale:function(t){if(1!==t){const e=this.times;for(let n=0,i=e.length;n!==i;++n)e[n]*=t}return this},trim:function(t,e){const n=this.times,i=n.length;let r=0,o=i-1;for(;r!==i&&n[r]<t;)++r;for(;-1!==o&&n[o]>e;)--o;if(++o,0!==r||o!==i){r>=o&&(o=Math.max(o,1),r=o-1);const t=this.getValueSize();this.times=la.arraySlice(n,r,o),this.values=la.arraySlice(this.values,r*t,o*t)}return this},validate:function(){let t=!0;const e=this.getValueSize();e-Math.floor(e)!=0&&(console.error("THREE.KeyframeTrack: Invalid value size in track.",this),t=!1);const n=this.times,i=this.values,r=n.length;0===r&&(console.error("THREE.KeyframeTrack: Track is empty.",this),t=!1);let o=null;for(let e=0;e!==r;e++){const i=n[e];if("number"==typeof i&&isNaN(i)){console.error("THREE.KeyframeTrack: Time is not a valid number.",this,e,i),t=!1;break}if(null!==o&&o>i){console.error("THREE.KeyframeTrack: Out of order keys.",this,e,i,o),t=!1;break}o=i}if(void 0!==i&&la.isTypedArray(i))for(let e=0,n=i.length;e!==n;++e){const n=i[e];if(isNaN(n)){console.error("THREE.KeyframeTrack: Value is not a valid number.",this,e,n),t=!1;break}}return t},optimize:function(){const t=la.arraySlice(this.times),e=la.arraySlice(this.values),n=this.getValueSize(),i=2302===this.getInterpolation(),r=t.length-1;let o=1;for(let s=1;s<r;++s){let r=!1;const a=t[s];if(a!==t[s+1]&&(1!==s||a!==a[0]))if(i)r=!0;else{const t=s*n,i=t-n,o=t+n;for(let s=0;s!==n;++s){const n=e[t+s];if(n!==e[i+s]||n!==e[o+s]){r=!0;break}}}if(r){if(s!==o){t[o]=t[s];const i=s*n,r=o*n;for(let t=0;t!==n;++t)e[r+t]=e[i+t]}++o}}if(r>0){t[o]=t[r];for(let t=r*n,i=o*n,s=0;s!==n;++s)e[i+s]=e[t+s];++o}return o!==t.length?(this.times=la.arraySlice(t,0,o),this.values=la.arraySlice(e,0,o*n)):(this.times=t,this.values=e),this},clone:function(){const t=la.arraySlice(this.times,0),e=la.arraySlice(this.values,0),n=new(0,this.constructor)(this.name,t,e);return n.createInterpolant=this.createInterpolant,n}}),ma.prototype=Object.assign(Object.create(fa.prototype),{constructor:ma,ValueTypeName:"bool",ValueBufferType:Array,DefaultInterpolation:2300,InterpolantFactoryMethodLinear:void 0,InterpolantFactoryMethodSmooth:void 0}),ga.prototype=Object.assign(Object.create(fa.prototype),{constructor:ga,ValueTypeName:"color"}),va.prototype=Object.assign(Object.create(fa.prototype),{constructor:va,ValueTypeName:"number"}),ya.prototype=Object.assign(Object.create(ha.prototype),{constructor:ya,interpolate_:function(t,e,n,i){const r=this.resultBuffer,o=this.sampleValues,s=this.valueSize,a=(n-e)/(i-e);let c=t*s;for(let t=c+s;c!==t;c+=4)St.slerpFlat(r,0,o,c-s,o,c,a);return r}}),xa.prototype=Object.assign(Object.create(fa.prototype),{constructor:xa,ValueTypeName:"quaternion",DefaultInterpolation:2301,InterpolantFactoryMethodLinear:function(t){return new ya(this.times,this.values,this.getValueSize(),t)},InterpolantFactoryMethodSmooth:void 0}),_a.prototype=Object.assign(Object.create(fa.prototype),{constructor:_a,ValueTypeName:"string",ValueBufferType:Array,DefaultInterpolation:2300,InterpolantFactoryMethodLinear:void 0,InterpolantFactoryMethodSmooth:void 0}),ba.prototype=Object.assign(Object.create(fa.prototype),{constructor:ba,ValueTypeName:"vector"}),Object.assign(wa,{parse:function(t){const e=[],n=t.tracks,i=1/(t.fps||1);for(let t=0,r=n.length;t!==r;++t)e.push(Ma(n[t]).scale(i));return new wa(t.name,t.duration,e,t.blendMode)},toJSON:function(t){const e=[],n=t.tracks,i={name:t.name,duration:t.duration,tracks:e,uuid:t.uuid,blendMode:t.blendMode};for(let t=0,i=n.length;t!==i;++t)e.push(fa.toJSON(n[t]));return i},CreateFromMorphTargetSequence:function(t,e,n,i){const r=e.length,o=[];for(let t=0;t<r;t++){let s=[],a=[];s.push((t+r-1)%r,t,(t+1)%r),a.push(0,1,0);const c=la.getKeyframeOrder(s);s=la.sortedArray(s,1,c),a=la.sortedArray(a,1,c),i||0!==s[0]||(s.push(r),a.push(a[0])),o.push(new va(".morphTargetInfluences["+e[t].name+"]",s,a).scale(1/n))}return new wa(t,-1,o)},findByName:function(t,e){let n=t;if(!Array.isArray(t)){const e=t;n=e.geometry&&e.geometry.animations||e.animations}for(let t=0;t<n.length;t++)if(n[t].name===e)return n[t];return null},CreateClipsFromMorphTargetSequences:function(t,e,n){const i={},r=/^([\w-]*?)([\d]+)$/;for(let e=0,n=t.length;e<n;e++){const n=t[e],o=n.name.match(r);if(o&&o.length>1){const t=o[1];let e=i[t];e||(i[t]=e=[]),e.push(n)}}const o=[];for(const t in i)o.push(wa.CreateFromMorphTargetSequence(t,i[t],e,n));return o},parseAnimation:function(t,e){if(!t)return console.error("THREE.AnimationClip: No animation in JSONLoader data."),null;const n=function(t,e,n,i,r){if(0!==n.length){const o=[],s=[];la.flattenJSON(n,o,s,i),0!==o.length&&r.push(new t(e,o,s))}},i=[],r=t.name||"default",o=t.fps||30,s=t.blendMode;let a=t.length||-1;const c=t.hierarchy||[];for(let t=0;t<c.length;t++){const r=c[t].keys;if(r&&0!==r.length)if(r[0].morphTargets){const t={};let e;for(e=0;e<r.length;e++)if(r[e].morphTargets)for(let n=0;n<r[e].morphTargets.length;n++)t[r[e].morphTargets[n]]=-1;for(const n in t){const t=[],o=[];for(let i=0;i!==r[e].morphTargets.length;++i){const i=r[e];t.push(i.time),o.push(i.morphTarget===n?1:0)}i.push(new va(".morphTargetInfluence["+n+"]",t,o))}a=t.length*(o||1)}else{const o=".bones["+e[t].name+"]";n(ba,o+".position",r,"pos",i),n(xa,o+".quaternion",r,"rot",i),n(ba,o+".scale",r,"scl",i)}}if(0===i.length)return null;return new wa(r,a,i,s)}}),Object.assign(wa.prototype,{resetDuration:function(){let t=0;for(let e=0,n=this.tracks.length;e!==n;++e){const n=this.tracks[e];t=Math.max(t,n.times[n.times.length-1])}return this.duration=t,this},trim:function(){for(let t=0;t<this.tracks.length;t++)this.tracks[t].trim(0,this.duration);return this},validate:function(){let t=!0;for(let e=0;e<this.tracks.length;e++)t=t&&this.tracks[e].validate();return t},optimize:function(){for(let t=0;t<this.tracks.length;t++)this.tracks[t].optimize();return this},clone:function(){const t=[];for(let e=0;e<this.tracks.length;e++)t.push(this.tracks[e].clone());return new wa(this.name,this.duration,t,this.blendMode)}});const Sa={enabled:!1,files:{},add:function(t,e){!1!==this.enabled&&(this.files[t]=e)},get:function(t){if(!1!==this.enabled)return this.files[t]},remove:function(t){delete this.files[t]},clear:function(){this.files={}}};function Ea(t,e,n){const i=this;let r=!1,o=0,s=0,a=void 0;const c=[];this.onStart=void 0,this.onLoad=t,this.onProgress=e,this.onError=n,this.itemStart=function(t){s++,!1===r&&void 0!==i.onStart&&i.onStart(t,o,s),r=!0},this.itemEnd=function(t){o++,void 0!==i.onProgress&&i.onProgress(t,o,s),o===s&&(r=!1,void 0!==i.onLoad&&i.onLoad())},this.itemError=function(t){void 0!==i.onError&&i.onError(t)},this.resolveURL=function(t){return a?a(t):t},this.setURLModifier=function(t){return a=t,this},this.addHandler=function(t,e){return c.push(t,e),this},this.removeHandler=function(t){const e=c.indexOf(t);return-1!==e&&c.splice(e,2),this},this.getHandler=function(t){for(let e=0,n=c.length;e<n;e+=2){const n=c[e],i=c[e+1];if(n.global&&(n.lastIndex=0),n.test(t))return i}return null}}const Ta=new Ea;function Aa(t){this.manager=void 0!==t?t:Ta,this.crossOrigin="anonymous",this.withCredentials=!1,this.path="",this.resourcePath="",this.requestHeader={}}Object.assign(Aa.prototype,{load:function(){},loadAsync:function(t,e){const n=this;return new Promise((function(i,r){n.load(t,i,e,r)}))},parse:function(){},setCrossOrigin:function(t){return this.crossOrigin=t,this},setWithCredentials:function(t){return this.withCredentials=t,this},setPath:function(t){return this.path=t,this},setResourcePath:function(t){return this.resourcePath=t,this},setRequestHeader:function(t){return this.requestHeader=t,this}});const La={};function Ra(t){Aa.call(this,t)}function Pa(t){Aa.call(this,t)}function Ca(t){Aa.call(this,t)}function Na(t){Aa.call(this,t)}function Oa(t){Aa.call(this,t)}function Ia(t){Aa.call(this,t)}function Da(t){Aa.call(this,t)}function za(){this.type="Curve",this.arcLengthDivisions=200}function Ua(t,e,n,i,r,o,s,a){za.call(this),this.type="EllipseCurve",this.aX=t||0,this.aY=e||0,this.xRadius=n||1,this.yRadius=i||1,this.aStartAngle=r||0,this.aEndAngle=o||2*Math.PI,this.aClockwise=s||!1,this.aRotation=a||0}function Ba(t,e,n,i,r,o){Ua.call(this,t,e,n,n,i,r,o),this.type="ArcCurve"}function Ha(){let t=0,e=0,n=0,i=0;function r(r,o,s,a){t=r,e=s,n=-3*r+3*o-2*s-a,i=2*r-2*o+s+a}return{initCatmullRom:function(t,e,n,i,o){r(e,n,o*(n-t),o*(i-e))},initNonuniformCatmullRom:function(t,e,n,i,o,s,a){let c=(e-t)/o-(n-t)/(o+s)+(n-e)/s,l=(n-e)/s-(i-e)/(s+a)+(i-n)/a;c*=s,l*=s,r(e,n,c,l)},calc:function(r){const o=r*r;return t+e*r+n*o+i*(o*r)}}}Ra.prototype=Object.assign(Object.create(Aa.prototype),{constructor:Ra,load:function(t,e,n,i){void 0===t&&(t=""),void 0!==this.path&&(t=this.path+t),t=this.manager.resolveURL(t);const r=this,o=Sa.get(t);if(void 0!==o)return r.manager.itemStart(t),setTimeout((function(){e&&e(o),r.manager.itemEnd(t)}),0),o;if(void 0!==La[t])return void La[t].push({onLoad:e,onProgress:n,onError:i});const s=t.match(/^data:(.*?)(;base64)?,(.*)$/);let a;if(s){const n=s[1],o=!!s[2];let a=s[3];a=decodeURIComponent(a),o&&(a=atob(a));try{let i;const o=(this.responseType||"").toLowerCase();switch(o){case"arraybuffer":case"blob":const t=new Uint8Array(a.length);for(let e=0;e<a.length;e++)t[e]=a.charCodeAt(e);i="blob"===o?new Blob([t.buffer],{type:n}):t.buffer;break;case"document":const e=new DOMParser;i=e.parseFromString(a,n);break;case"json":i=JSON.parse(a);break;default:i=a}setTimeout((function(){e&&e(i),r.manager.itemEnd(t)}),0)}catch(e){setTimeout((function(){i&&i(e),r.manager.itemError(t),r.manager.itemEnd(t)}),0)}}else{La[t]=[],La[t].push({onLoad:e,onProgress:n,onError:i}),a=new XMLHttpRequest,a.open("GET",t,!0),a.addEventListener("load",(function(e){const n=this.response,i=La[t];if(delete La[t],200===this.status||0===this.status){0===this.status&&console.warn("THREE.FileLoader: HTTP Status 0 received."),Sa.add(t,n);for(let t=0,e=i.length;t<e;t++){const e=i[t];e.onLoad&&e.onLoad(n)}r.manager.itemEnd(t)}else{for(let t=0,n=i.length;t<n;t++){const n=i[t];n.onError&&n.onError(e)}r.manager.itemError(t),r.manager.itemEnd(t)}}),!1),a.addEventListener("progress",(function(e){const n=La[t];for(let t=0,i=n.length;t<i;t++){const i=n[t];i.onProgress&&i.onProgress(e)}}),!1),a.addEventListener("error",(function(e){const n=La[t];delete La[t];for(let t=0,i=n.length;t<i;t++){const i=n[t];i.onError&&i.onError(e)}r.manager.itemError(t),r.manager.itemEnd(t)}),!1),a.addEventListener("abort",(function(e){const n=La[t];delete La[t];for(let t=0,i=n.length;t<i;t++){const i=n[t];i.onError&&i.onError(e)}r.manager.itemError(t),r.manager.itemEnd(t)}),!1),void 0!==this.responseType&&(a.responseType=this.responseType),void 0!==this.withCredentials&&(a.withCredentials=this.withCredentials),a.overrideMimeType&&a.overrideMimeType(void 0!==this.mimeType?this.mimeType:"text/plain");for(const t in this.requestHeader)a.setRequestHeader(t,this.requestHeader[t]);a.send(null)}return r.manager.itemStart(t),a},setResponseType:function(t){return this.responseType=t,this},setMimeType:function(t){return this.mimeType=t,this}}),Pa.prototype=Object.assign(Object.create(Aa.prototype),{constructor:Pa,load:function(t,e,n,i){const r=this,o=new Ra(r.manager);o.setPath(r.path),o.setRequestHeader(r.requestHeader),o.setWithCredentials(r.withCredentials),o.load(t,(function(n){try{e(r.parse(JSON.parse(n)))}catch(e){i?i(e):console.error(e),r.manager.itemError(t)}}),n,i)},parse:function(t){const e=[];for(let n=0;n<t.length;n++){const i=wa.parse(t[n]);e.push(i)}return e}}),Ca.prototype=Object.assign(Object.create(Aa.prototype),{constructor:Ca,load:function(t,e,n,i){const r=this,o=[],s=new as;s.image=o;const a=new Ra(this.manager);a.setPath(this.path),a.setResponseType("arraybuffer"),a.setRequestHeader(this.requestHeader),a.setWithCredentials(r.withCredentials);let c=0;function l(l){a.load(t[l],(function(t){const n=r.parse(t,!0);o[l]={width:n.width,height:n.height,format:n.format,mipmaps:n.mipmaps},c+=1,6===c&&(1===n.mipmapCount&&(s.minFilter=1006),s.format=n.format,s.needsUpdate=!0,e&&e(s))}),n,i)}if(Array.isArray(t))for(let e=0,n=t.length;e<n;++e)l(e);else a.load(t,(function(t){const n=r.parse(t,!0);if(n.isCubemap){const t=n.mipmaps.length/n.mipmapCount;for(let e=0;e<t;e++){o[e]={mipmaps:[]};for(let t=0;t<n.mipmapCount;t++)o[e].mipmaps.push(n.mipmaps[e*n.mipmapCount+t]),o[e].format=n.format,o[e].width=n.width,o[e].height=n.height}}else s.image.width=n.width,s.image.height=n.height,s.mipmaps=n.mipmaps;1===n.mipmapCount&&(s.minFilter=1006),s.format=n.format,s.needsUpdate=!0,e&&e(s)}),n,i);return s}}),Na.prototype=Object.assign(Object.create(Aa.prototype),{constructor:Na,load:function(t,e,n,i){void 0!==this.path&&(t=this.path+t),t=this.manager.resolveURL(t);const r=this,o=Sa.get(t);if(void 0!==o)return r.manager.itemStart(t),setTimeout((function(){e&&e(o),r.manager.itemEnd(t)}),0),o;const s=document.createElementNS("http://www.w3.org/1999/xhtml","img");function a(){s.removeEventListener("load",a,!1),s.removeEventListener("error",c,!1),Sa.add(t,this),e&&e(this),r.manager.itemEnd(t)}function c(e){s.removeEventListener("load",a,!1),s.removeEventListener("error",c,!1),i&&i(e),r.manager.itemError(t),r.manager.itemEnd(t)}return s.addEventListener("load",a,!1),s.addEventListener("error",c,!1),"data:"!==t.substr(0,5)&&void 0!==this.crossOrigin&&(s.crossOrigin=this.crossOrigin),r.manager.itemStart(t),s.src=t,s}}),Oa.prototype=Object.assign(Object.create(Aa.prototype),{constructor:Oa,load:function(t,e,n,i){const r=new Yn,o=new Na(this.manager);o.setCrossOrigin(this.crossOrigin),o.setPath(this.path);let s=0;function a(n){o.load(t[n],(function(t){r.images[n]=t,s++,6===s&&(r.needsUpdate=!0,e&&e(r))}),void 0,i)}for(let e=0;e<t.length;++e)a(e);return r}}),Ia.prototype=Object.assign(Object.create(Aa.prototype),{constructor:Ia,load:function(t,e,n,i){const r=this,o=new $n,s=new Ra(this.manager);return s.setResponseType("arraybuffer"),s.setRequestHeader(this.requestHeader),s.setPath(this.path),s.setWithCredentials(r.withCredentials),s.load(t,(function(t){const n=r.parse(t);n&&(void 0!==n.image?o.image=n.image:void 0!==n.data&&(o.image.width=n.width,o.image.height=n.height,o.image.data=n.data),o.wrapS=void 0!==n.wrapS?n.wrapS:1001,o.wrapT=void 0!==n.wrapT?n.wrapT:1001,o.magFilter=void 0!==n.magFilter?n.magFilter:1006,o.minFilter=void 0!==n.minFilter?n.minFilter:1006,o.anisotropy=void 0!==n.anisotropy?n.anisotropy:1,void 0!==n.format&&(o.format=n.format),void 0!==n.type&&(o.type=n.type),void 0!==n.mipmaps&&(o.mipmaps=n.mipmaps,o.minFilter=1008),1===n.mipmapCount&&(o.minFilter=1006),o.needsUpdate=!0,e&&e(o,n))}),n,i),o}}),Da.prototype=Object.assign(Object.create(Aa.prototype),{constructor:Da,load:function(t,e,n,i){const r=new _t,o=new Na(this.manager);return o.setCrossOrigin(this.crossOrigin),o.setPath(this.path),o.load(t,(function(n){r.image=n;const i=t.search(/\.jpe?g($|\?)/i)>0||0===t.search(/^data\:image\/jpeg/);r.format=i?1022:1023,r.needsUpdate=!0,void 0!==e&&e(r)}),n,i),r}}),Object.assign(za.prototype,{getPoint:function(){return console.warn("THREE.Curve: .getPoint() not implemented."),null},getPointAt:function(t,e){const n=this.getUtoTmapping(t);return this.getPoint(n,e)},getPoints:function(t){void 0===t&&(t=5);const e=[];for(let n=0;n<=t;n++)e.push(this.getPoint(n/t));return e},getSpacedPoints:function(t){void 0===t&&(t=5);const e=[];for(let n=0;n<=t;n++)e.push(this.getPointAt(n/t));return e},getLength:function(){const t=this.getLengths();return t[t.length-1]},getLengths:function(t){if(void 0===t&&(t=this.arcLengthDivisions),this.cacheArcLengths&&this.cacheArcLengths.length===t+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;const e=[];let n,i=this.getPoint(0),r=0;e.push(0);for(let o=1;o<=t;o++)n=this.getPoint(o/t),r+=n.distanceTo(i),e.push(r),i=n;return this.cacheArcLengths=e,e},updateArcLengths:function(){this.needsUpdate=!0,this.getLengths()},getUtoTmapping:function(t,e){const n=this.getLengths();let i=0;const r=n.length;let o;o=e||t*n[r-1];let s,a=0,c=r-1;for(;a<=c;)if(i=Math.floor(a+(c-a)/2),s=n[i]-o,s<0)a=i+1;else{if(!(s>0)){c=i;break}c=i-1}if(i=c,n[i]===o)return i/(r-1);const l=n[i];return(i+(o-l)/(n[i+1]-l))/(r-1)},getTangent:function(t,e){let n=t-1e-4,i=t+1e-4;n<0&&(n=0),i>1&&(i=1);const r=this.getPoint(n),o=this.getPoint(i),s=e||(r.isVector2?new mt:new Et);return s.copy(o).sub(r).normalize(),s},getTangentAt:function(t,e){const n=this.getUtoTmapping(t);return this.getTangent(n,e)},computeFrenetFrames:function(t,e){const n=new Et,i=[],r=[],o=[],s=new Et,a=new Kt;for(let e=0;e<=t;e++){const n=e/t;i[e]=this.getTangentAt(n,new Et),i[e].normalize()}r[0]=new Et,o[0]=new Et;let c=Number.MAX_VALUE;const l=Math.abs(i[0].x),h=Math.abs(i[0].y),u=Math.abs(i[0].z);l<=c&&(c=l,n.set(1,0,0)),h<=c&&(c=h,n.set(0,1,0)),u<=c&&n.set(0,0,1),s.crossVectors(i[0],n).normalize(),r[0].crossVectors(i[0],s),o[0].crossVectors(i[0],r[0]);for(let e=1;e<=t;e++){if(r[e]=r[e-1].clone(),o[e]=o[e-1].clone(),s.crossVectors(i[e-1],i[e]),s.length()>Number.EPSILON){s.normalize();const t=Math.acos(ft.clamp(i[e-1].dot(i[e]),-1,1));r[e].applyMatrix4(a.makeRotationAxis(s,t))}o[e].crossVectors(i[e],r[e])}if(!0===e){let e=Math.acos(ft.clamp(r[0].dot(r[t]),-1,1));e/=t,i[0].dot(s.crossVectors(r[0],r[t]))>0&&(e=-e);for(let n=1;n<=t;n++)r[n].applyMatrix4(a.makeRotationAxis(i[n],e*n)),o[n].crossVectors(i[n],r[n])}return{tangents:i,normals:r,binormals:o}},clone:function(){return(new this.constructor).copy(this)},copy:function(t){return this.arcLengthDivisions=t.arcLengthDivisions,this},toJSON:function(){const t={metadata:{version:4.5,type:"Curve",generator:"Curve.toJSON"}};return t.arcLengthDivisions=this.arcLengthDivisions,t.type=this.type,t},fromJSON:function(t){return this.arcLengthDivisions=t.arcLengthDivisions,this}}),Ua.prototype=Object.create(za.prototype),Ua.prototype.constructor=Ua,Ua.prototype.isEllipseCurve=!0,Ua.prototype.getPoint=function(t,e){const n=e||new mt,i=2*Math.PI;let r=this.aEndAngle-this.aStartAngle;const o=Math.abs(r)<Number.EPSILON;for(;r<0;)r+=i;for(;r>i;)r-=i;r<Number.EPSILON&&(r=o?0:i),!0!==this.aClockwise||o||(r===i?r=-i:r-=i);const s=this.aStartAngle+t*r;let a=this.aX+this.xRadius*Math.cos(s),c=this.aY+this.yRadius*Math.sin(s);if(0!==this.aRotation){const t=Math.cos(this.aRotation),e=Math.sin(this.aRotation),n=a-this.aX,i=c-this.aY;a=n*t-i*e+this.aX,c=n*e+i*t+this.aY}return n.set(a,c)},Ua.prototype.copy=function(t){return za.prototype.copy.call(this,t),this.aX=t.aX,this.aY=t.aY,this.xRadius=t.xRadius,this.yRadius=t.yRadius,this.aStartAngle=t.aStartAngle,this.aEndAngle=t.aEndAngle,this.aClockwise=t.aClockwise,this.aRotation=t.aRotation,this},Ua.prototype.toJSON=function(){const t=za.prototype.toJSON.call(this);return t.aX=this.aX,t.aY=this.aY,t.xRadius=this.xRadius,t.yRadius=this.yRadius,t.aStartAngle=this.aStartAngle,t.aEndAngle=this.aEndAngle,t.aClockwise=this.aClockwise,t.aRotation=this.aRotation,t},Ua.prototype.fromJSON=function(t){return za.prototype.fromJSON.call(this,t),this.aX=t.aX,this.aY=t.aY,this.xRadius=t.xRadius,this.yRadius=t.yRadius,this.aStartAngle=t.aStartAngle,this.aEndAngle=t.aEndAngle,this.aClockwise=t.aClockwise,this.aRotation=t.aRotation,this},Ba.prototype=Object.create(Ua.prototype),Ba.prototype.constructor=Ba,Ba.prototype.isArcCurve=!0;const Fa=new Et,ka=new Ha,Ga=new Ha,Va=new Ha;function ja(t,e,n,i){za.call(this),this.type="CatmullRomCurve3",this.points=t||[],this.closed=e||!1,this.curveType=n||"centripetal",this.tension=void 0!==i?i:.5}function Wa(t,e,n,i,r){const o=.5*(i-e),s=.5*(r-n),a=t*t;return(2*n-2*i+o+s)*(t*a)+(-3*n+3*i-2*o-s)*a+o*t+n}function qa(t,e,n,i){return function(t,e){const n=1-t;return n*n*e}(t,e)+function(t,e){return 2*(1-t)*t*e}(t,n)+function(t,e){return t*t*e}(t,i)}function Xa(t,e,n,i,r){return function(t,e){const n=1-t;return n*n*n*e}(t,e)+function(t,e){const n=1-t;return 3*n*n*t*e}(t,n)+function(t,e){return 3*(1-t)*t*t*e}(t,i)+function(t,e){return t*t*t*e}(t,r)}function Ya(t,e,n,i){za.call(this),this.type="CubicBezierCurve",this.v0=t||new mt,this.v1=e||new mt,this.v2=n||new mt,this.v3=i||new mt}function Za(t,e,n,i){za.call(this),this.type="CubicBezierCurve3",this.v0=t||new Et,this.v1=e||new Et,this.v2=n||new Et,this.v3=i||new Et}function $a(t,e){za.call(this),this.type="LineCurve",this.v1=t||new mt,this.v2=e||new mt}function Ja(t,e){za.call(this),this.type="LineCurve3",this.v1=t||new Et,this.v2=e||new Et}function Qa(t,e,n){za.call(this),this.type="QuadraticBezierCurve",this.v0=t||new mt,this.v1=e||new mt,this.v2=n||new mt}function Ka(t,e,n){za.call(this),this.type="QuadraticBezierCurve3",this.v0=t||new Et,this.v1=e||new Et,this.v2=n||new Et}function tc(t){za.call(this),this.type="SplineCurve",this.points=t||[]}ja.prototype=Object.create(za.prototype),ja.prototype.constructor=ja,ja.prototype.isCatmullRomCurve3=!0,ja.prototype.getPoint=function(t,e){const n=e||new Et,i=this.points,r=i.length,o=(r-(this.closed?0:1))*t;let s,a,c=Math.floor(o),l=o-c;this.closed?c+=c>0?0:(Math.floor(Math.abs(c)/r)+1)*r:0===l&&c===r-1&&(c=r-2,l=1),this.closed||c>0?s=i[(c-1)%r]:(Fa.subVectors(i[0],i[1]).add(i[0]),s=Fa);const h=i[c%r],u=i[(c+1)%r];if(this.closed||c+2<r?a=i[(c+2)%r]:(Fa.subVectors(i[r-1],i[r-2]).add(i[r-1]),a=Fa),"centripetal"===this.curveType||"chordal"===this.curveType){const t="chordal"===this.curveType?.5:.25;let e=Math.pow(s.distanceToSquared(h),t),n=Math.pow(h.distanceToSquared(u),t),i=Math.pow(u.distanceToSquared(a),t);n<1e-4&&(n=1),e<1e-4&&(e=n),i<1e-4&&(i=n),ka.initNonuniformCatmullRom(s.x,h.x,u.x,a.x,e,n,i),Ga.initNonuniformCatmullRom(s.y,h.y,u.y,a.y,e,n,i),Va.initNonuniformCatmullRom(s.z,h.z,u.z,a.z,e,n,i)}else"catmullrom"===this.curveType&&(ka.initCatmullRom(s.x,h.x,u.x,a.x,this.tension),Ga.initCatmullRom(s.y,h.y,u.y,a.y,this.tension),Va.initCatmullRom(s.z,h.z,u.z,a.z,this.tension));return n.set(ka.calc(l),Ga.calc(l),Va.calc(l)),n},ja.prototype.copy=function(t){za.prototype.copy.call(this,t),this.points=[];for(let e=0,n=t.points.length;e<n;e++){const n=t.points[e];this.points.push(n.clone())}return this.closed=t.closed,this.curveType=t.curveType,this.tension=t.tension,this},ja.prototype.toJSON=function(){const t=za.prototype.toJSON.call(this);t.points=[];for(let e=0,n=this.points.length;e<n;e++){const n=this.points[e];t.points.push(n.toArray())}return t.closed=this.closed,t.curveType=this.curveType,t.tension=this.tension,t},ja.prototype.fromJSON=function(t){za.prototype.fromJSON.call(this,t),this.points=[];for(let e=0,n=t.points.length;e<n;e++){const n=t.points[e];this.points.push((new Et).fromArray(n))}return this.closed=t.closed,this.curveType=t.curveType,this.tension=t.tension,this},Ya.prototype=Object.create(za.prototype),Ya.prototype.constructor=Ya,Ya.prototype.isCubicBezierCurve=!0,Ya.prototype.getPoint=function(t,e){const n=e||new mt,i=this.v0,r=this.v1,o=this.v2,s=this.v3;return n.set(Xa(t,i.x,r.x,o.x,s.x),Xa(t,i.y,r.y,o.y,s.y)),n},Ya.prototype.copy=function(t){return za.prototype.copy.call(this,t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this.v3.copy(t.v3),this},Ya.prototype.toJSON=function(){const t=za.prototype.toJSON.call(this);return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t.v3=this.v3.toArray(),t},Ya.prototype.fromJSON=function(t){return za.prototype.fromJSON.call(this,t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this.v3.fromArray(t.v3),this},Za.prototype=Object.create(za.prototype),Za.prototype.constructor=Za,Za.prototype.isCubicBezierCurve3=!0,Za.prototype.getPoint=function(t,e){const n=e||new Et,i=this.v0,r=this.v1,o=this.v2,s=this.v3;return n.set(Xa(t,i.x,r.x,o.x,s.x),Xa(t,i.y,r.y,o.y,s.y),Xa(t,i.z,r.z,o.z,s.z)),n},Za.prototype.copy=function(t){return za.prototype.copy.call(this,t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this.v3.copy(t.v3),this},Za.prototype.toJSON=function(){const t=za.prototype.toJSON.call(this);return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t.v3=this.v3.toArray(),t},Za.prototype.fromJSON=function(t){return za.prototype.fromJSON.call(this,t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this.v3.fromArray(t.v3),this},$a.prototype=Object.create(za.prototype),$a.prototype.constructor=$a,$a.prototype.isLineCurve=!0,$a.prototype.getPoint=function(t,e){const n=e||new mt;return 1===t?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(t).add(this.v1)),n},$a.prototype.getPointAt=function(t,e){return this.getPoint(t,e)},$a.prototype.getTangent=function(t,e){const n=e||new mt;return n.copy(this.v2).sub(this.v1).normalize(),n},$a.prototype.copy=function(t){return za.prototype.copy.call(this,t),this.v1.copy(t.v1),this.v2.copy(t.v2),this},$a.prototype.toJSON=function(){const t=za.prototype.toJSON.call(this);return t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t},$a.prototype.fromJSON=function(t){return za.prototype.fromJSON.call(this,t),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this},Ja.prototype=Object.create(za.prototype),Ja.prototype.constructor=Ja,Ja.prototype.isLineCurve3=!0,Ja.prototype.getPoint=function(t,e){const n=e||new Et;return 1===t?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(t).add(this.v1)),n},Ja.prototype.getPointAt=function(t,e){return this.getPoint(t,e)},Ja.prototype.copy=function(t){return za.prototype.copy.call(this,t),this.v1.copy(t.v1),this.v2.copy(t.v2),this},Ja.prototype.toJSON=function(){const t=za.prototype.toJSON.call(this);return t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t},Ja.prototype.fromJSON=function(t){return za.prototype.fromJSON.call(this,t),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this},Qa.prototype=Object.create(za.prototype),Qa.prototype.constructor=Qa,Qa.prototype.isQuadraticBezierCurve=!0,Qa.prototype.getPoint=function(t,e){const n=e||new mt,i=this.v0,r=this.v1,o=this.v2;return n.set(qa(t,i.x,r.x,o.x),qa(t,i.y,r.y,o.y)),n},Qa.prototype.copy=function(t){return za.prototype.copy.call(this,t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this},Qa.prototype.toJSON=function(){const t=za.prototype.toJSON.call(this);return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t},Qa.prototype.fromJSON=function(t){return za.prototype.fromJSON.call(this,t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this},Ka.prototype=Object.create(za.prototype),Ka.prototype.constructor=Ka,Ka.prototype.isQuadraticBezierCurve3=!0,Ka.prototype.getPoint=function(t,e){const n=e||new Et,i=this.v0,r=this.v1,o=this.v2;return n.set(qa(t,i.x,r.x,o.x),qa(t,i.y,r.y,o.y),qa(t,i.z,r.z,o.z)),n},Ka.prototype.copy=function(t){return za.prototype.copy.call(this,t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this},Ka.prototype.toJSON=function(){const t=za.prototype.toJSON.call(this);return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t},Ka.prototype.fromJSON=function(t){return za.prototype.fromJSON.call(this,t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this},tc.prototype=Object.create(za.prototype),tc.prototype.constructor=tc,tc.prototype.isSplineCurve=!0,tc.prototype.getPoint=function(t,e){const n=e||new mt,i=this.points,r=(i.length-1)*t,o=Math.floor(r),s=r-o,a=i[0===o?o:o-1],c=i[o],l=i[o>i.length-2?i.length-1:o+1],h=i[o>i.length-3?i.length-1:o+2];return n.set(Wa(s,a.x,c.x,l.x,h.x),Wa(s,a.y,c.y,l.y,h.y)),n},tc.prototype.copy=function(t){za.prototype.copy.call(this,t),this.points=[];for(let e=0,n=t.points.length;e<n;e++){const n=t.points[e];this.points.push(n.clone())}return this},tc.prototype.toJSON=function(){const t=za.prototype.toJSON.call(this);t.points=[];for(let e=0,n=this.points.length;e<n;e++){const n=this.points[e];t.points.push(n.toArray())}return t},tc.prototype.fromJSON=function(t){za.prototype.fromJSON.call(this,t),this.points=[];for(let e=0,n=t.points.length;e<n;e++){const n=t.points[e];this.points.push((new mt).fromArray(n))}return this};var ec=Object.freeze({__proto__:null,ArcCurve:Ba,CatmullRomCurve3:ja,CubicBezierCurve:Ya,CubicBezierCurve3:Za,EllipseCurve:Ua,LineCurve:$a,LineCurve3:Ja,QuadraticBezierCurve:Qa,QuadraticBezierCurve3:Ka,SplineCurve:tc});function nc(){za.call(this),this.type="CurvePath",this.curves=[],this.autoClose=!1}function ic(t){nc.call(this),this.type="Path",this.currentPoint=new mt,t&&this.setFromPoints(t)}function rc(t){ic.call(this,t),this.uuid=ft.generateUUID(),this.type="Shape",this.holes=[]}function oc(t,e){Se.call(this),this.type="Light",this.color=new qe(t),this.intensity=void 0!==e?e:1}function sc(t,e,n){oc.call(this,t,n),this.type="HemisphereLight",this.position.copy(Se.DefaultUp),this.updateMatrix(),this.groundColor=new qe(e)}function ac(t){this.camera=t,this.bias=0,this.normalBias=0,this.radius=1,this.mapSize=new mt(512,512),this.map=null,this.mapPass=null,this.matrix=new Kt,this.autoUpdate=!0,this.needsUpdate=!1,this._frustum=new Kn,this._frameExtents=new mt(1,1),this._viewportCount=1,this._viewports=[new bt(0,0,1,1)]}function cc(){ac.call(this,new qn(50,1,.5,500)),this.focus=1}function lc(t,e,n,i,r,o){oc.call(this,t,e),this.type="SpotLight",this.position.copy(Se.DefaultUp),this.updateMatrix(),this.target=new Se,Object.defineProperty(this,"power",{get:function(){return this.intensity*Math.PI},set:function(t){this.intensity=t/Math.PI}}),this.distance=void 0!==n?n:0,this.angle=void 0!==i?i:Math.PI/3,this.penumbra=void 0!==r?r:0,this.decay=void 0!==o?o:1,this.shadow=new cc}function hc(){ac.call(this,new qn(90,1,.5,500)),this._frameExtents=new mt(4,2),this._viewportCount=6,this._viewports=[new bt(2,1,1,1),new bt(0,1,1,1),new bt(3,1,1,1),new bt(1,1,1,1),new bt(3,0,1,1),new bt(1,0,1,1)],this._cubeDirections=[new Et(1,0,0),new Et(-1,0,0),new Et(0,0,1),new Et(0,0,-1),new Et(0,1,0),new Et(0,-1,0)],this._cubeUps=[new Et(0,1,0),new Et(0,1,0),new Et(0,1,0),new Et(0,1,0),new Et(0,0,1),new Et(0,0,-1)]}function uc(t,e,n,i){oc.call(this,t,e),this.type="PointLight",Object.defineProperty(this,"power",{get:function(){return 4*this.intensity*Math.PI},set:function(t){this.intensity=t/(4*Math.PI)}}),this.distance=void 0!==n?n:0,this.decay=void 0!==i?i:1,this.shadow=new hc}function dc(t,e,n,i,r,o){Wn.call(this),this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=void 0!==t?t:-1,this.right=void 0!==e?e:1,this.top=void 0!==n?n:1,this.bottom=void 0!==i?i:-1,this.near=void 0!==r?r:.1,this.far=void 0!==o?o:2e3,this.updateProjectionMatrix()}function pc(){ac.call(this,new dc(-5,5,5,-5,.5,500))}function fc(t,e){oc.call(this,t,e),this.type="DirectionalLight",this.position.copy(Se.DefaultUp),this.updateMatrix(),this.target=new Se,this.shadow=new pc}function mc(t,e){oc.call(this,t,e),this.type="AmbientLight"}function gc(t,e,n,i){oc.call(this,t,e),this.type="RectAreaLight",this.width=void 0!==n?n:10,this.height=void 0!==i?i:10}nc.prototype=Object.assign(Object.create(za.prototype),{constructor:nc,add:function(t){this.curves.push(t)},closePath:function(){const t=this.curves[0].getPoint(0),e=this.curves[this.curves.length-1].getPoint(1);t.equals(e)||this.curves.push(new $a(e,t))},getPoint:function(t){const e=t*this.getLength(),n=this.getCurveLengths();let i=0;for(;i<n.length;){if(n[i]>=e){const t=n[i]-e,r=this.curves[i],o=r.getLength(),s=0===o?0:1-t/o;return r.getPointAt(s)}i++}return null},getLength:function(){const t=this.getCurveLengths();return t[t.length-1]},updateArcLengths:function(){this.needsUpdate=!0,this.cacheLengths=null,this.getCurveLengths()},getCurveLengths:function(){if(this.cacheLengths&&this.cacheLengths.length===this.curves.length)return this.cacheLengths;const t=[];let e=0;for(let n=0,i=this.curves.length;n<i;n++)e+=this.curves[n].getLength(),t.push(e);return this.cacheLengths=t,t},getSpacedPoints:function(t){void 0===t&&(t=40);const e=[];for(let n=0;n<=t;n++)e.push(this.getPoint(n/t));return this.autoClose&&e.push(e[0]),e},getPoints:function(t){t=t||12;const e=[];let n;for(let i=0,r=this.curves;i<r.length;i++){const o=r[i],s=o&&o.isEllipseCurve?2*t:o&&(o.isLineCurve||o.isLineCurve3)?1:o&&o.isSplineCurve?t*o.points.length:t,a=o.getPoints(s);for(let t=0;t<a.length;t++){const i=a[t];n&&n.equals(i)||(e.push(i),n=i)}}return this.autoClose&&e.length>1&&!e[e.length-1].equals(e[0])&&e.push(e[0]),e},copy:function(t){za.prototype.copy.call(this,t),this.curves=[];for(let e=0,n=t.curves.length;e<n;e++){const n=t.curves[e];this.curves.push(n.clone())}return this.autoClose=t.autoClose,this},toJSON:function(){const t=za.prototype.toJSON.call(this);t.autoClose=this.autoClose,t.curves=[];for(let e=0,n=this.curves.length;e<n;e++){const n=this.curves[e];t.curves.push(n.toJSON())}return t},fromJSON:function(t){za.prototype.fromJSON.call(this,t),this.autoClose=t.autoClose,this.curves=[];for(let e=0,n=t.curves.length;e<n;e++){const n=t.curves[e];this.curves.push((new ec[n.type]).fromJSON(n))}return this}}),ic.prototype=Object.assign(Object.create(nc.prototype),{constructor:ic,setFromPoints:function(t){this.moveTo(t[0].x,t[0].y);for(let e=1,n=t.length;e<n;e++)this.lineTo(t[e].x,t[e].y);return this},moveTo:function(t,e){return this.currentPoint.set(t,e),this},lineTo:function(t,e){const n=new $a(this.currentPoint.clone(),new mt(t,e));return this.curves.push(n),this.currentPoint.set(t,e),this},quadraticCurveTo:function(t,e,n,i){const r=new Qa(this.currentPoint.clone(),new mt(t,e),new mt(n,i));return this.curves.push(r),this.currentPoint.set(n,i),this},bezierCurveTo:function(t,e,n,i,r,o){const s=new Ya(this.currentPoint.clone(),new mt(t,e),new mt(n,i),new mt(r,o));return this.curves.push(s),this.currentPoint.set(r,o),this},splineThru:function(t){const e=new tc([this.currentPoint.clone()].concat(t));return this.curves.push(e),this.currentPoint.copy(t[t.length-1]),this},arc:function(t,e,n,i,r,o){const s=this.currentPoint.x,a=this.currentPoint.y;return this.absarc(t+s,e+a,n,i,r,o),this},absarc:function(t,e,n,i,r,o){return this.absellipse(t,e,n,n,i,r,o),this},ellipse:function(t,e,n,i,r,o,s,a){const c=this.currentPoint.x,l=this.currentPoint.y;return this.absellipse(t+c,e+l,n,i,r,o,s,a),this},absellipse:function(t,e,n,i,r,o,s,a){const c=new Ua(t,e,n,i,r,o,s,a);if(this.curves.length>0){const t=c.getPoint(0);t.equals(this.currentPoint)||this.lineTo(t.x,t.y)}this.curves.push(c);const l=c.getPoint(1);return this.currentPoint.copy(l),this},copy:function(t){return nc.prototype.copy.call(this,t),this.currentPoint.copy(t.currentPoint),this},toJSON:function(){const t=nc.prototype.toJSON.call(this);return t.currentPoint=this.currentPoint.toArray(),t},fromJSON:function(t){return nc.prototype.fromJSON.call(this,t),this.currentPoint.fromArray(t.currentPoint),this}}),rc.prototype=Object.assign(Object.create(ic.prototype),{constructor:rc,getPointsHoles:function(t){const e=[];for(let n=0,i=this.holes.length;n<i;n++)e[n]=this.holes[n].getPoints(t);return e},extractPoints:function(t){return{shape:this.getPoints(t),holes:this.getPointsHoles(t)}},copy:function(t){ic.prototype.copy.call(this,t),this.holes=[];for(let e=0,n=t.holes.length;e<n;e++){const n=t.holes[e];this.holes.push(n.clone())}return this},toJSON:function(){const t=ic.prototype.toJSON.call(this);t.uuid=this.uuid,t.holes=[];for(let e=0,n=this.holes.length;e<n;e++){const n=this.holes[e];t.holes.push(n.toJSON())}return t},fromJSON:function(t){ic.prototype.fromJSON.call(this,t),this.uuid=t.uuid,this.holes=[];for(let e=0,n=t.holes.length;e<n;e++){const n=t.holes[e];this.holes.push((new ic).fromJSON(n))}return this}}),oc.prototype=Object.assign(Object.create(Se.prototype),{constructor:oc,isLight:!0,copy:function(t){return Se.prototype.copy.call(this,t),this.color.copy(t.color),this.intensity=t.intensity,this},toJSON:function(t){const e=Se.prototype.toJSON.call(this,t);return e.object.color=this.color.getHex(),e.object.intensity=this.intensity,void 0!==this.groundColor&&(e.object.groundColor=this.groundColor.getHex()),void 0!==this.distance&&(e.object.distance=this.distance),void 0!==this.angle&&(e.object.angle=this.angle),void 0!==this.decay&&(e.object.decay=this.decay),void 0!==this.penumbra&&(e.object.penumbra=this.penumbra),void 0!==this.shadow&&(e.object.shadow=this.shadow.toJSON()),e}}),sc.prototype=Object.assign(Object.create(oc.prototype),{constructor:sc,isHemisphereLight:!0,copy:function(t){return oc.prototype.copy.call(this,t),this.groundColor.copy(t.groundColor),this}}),Object.assign(ac.prototype,{_projScreenMatrix:new Kt,_lightPositionWorld:new Et,_lookTarget:new Et,getViewportCount:function(){return this._viewportCount},getFrustum:function(){return this._frustum},updateMatrices:function(t){const e=this.camera,n=this.matrix,i=this._projScreenMatrix,r=this._lookTarget,o=this._lightPositionWorld;o.setFromMatrixPosition(t.matrixWorld),e.position.copy(o),r.setFromMatrixPosition(t.target.matrixWorld),e.lookAt(r),e.updateMatrixWorld(),i.multiplyMatrices(e.projectionMatrix,e.matrixWorldInverse),this._frustum.setFromProjectionMatrix(i),n.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),n.multiply(e.projectionMatrix),n.multiply(e.matrixWorldInverse)},getViewport:function(t){return this._viewports[t]},getFrameExtents:function(){return this._frameExtents},copy:function(t){return this.camera=t.camera.clone(),this.bias=t.bias,this.radius=t.radius,this.mapSize.copy(t.mapSize),this},clone:function(){return(new this.constructor).copy(this)},toJSON:function(){const t={};return 0!==this.bias&&(t.bias=this.bias),0!==this.normalBias&&(t.normalBias=this.normalBias),1!==this.radius&&(t.radius=this.radius),512===this.mapSize.x&&512===this.mapSize.y||(t.mapSize=this.mapSize.toArray()),t.camera=this.camera.toJSON(!1).object,delete t.camera.matrix,t}}),cc.prototype=Object.assign(Object.create(ac.prototype),{constructor:cc,isSpotLightShadow:!0,updateMatrices:function(t){const e=this.camera,n=2*ft.RAD2DEG*t.angle*this.focus,i=this.mapSize.width/this.mapSize.height,r=t.distance||e.far;n===e.fov&&i===e.aspect&&r===e.far||(e.fov=n,e.aspect=i,e.far=r,e.updateProjectionMatrix()),ac.prototype.updateMatrices.call(this,t)}}),lc.prototype=Object.assign(Object.create(oc.prototype),{constructor:lc,isSpotLight:!0,copy:function(t){return oc.prototype.copy.call(this,t),this.distance=t.distance,this.angle=t.angle,this.penumbra=t.penumbra,this.decay=t.decay,this.target=t.target.clone(),this.shadow=t.shadow.clone(),this}}),hc.prototype=Object.assign(Object.create(ac.prototype),{constructor:hc,isPointLightShadow:!0,updateMatrices:function(t,e){void 0===e&&(e=0);const n=this.camera,i=this.matrix,r=this._lightPositionWorld,o=this._lookTarget,s=this._projScreenMatrix;r.setFromMatrixPosition(t.matrixWorld),n.position.copy(r),o.copy(n.position),o.add(this._cubeDirections[e]),n.up.copy(this._cubeUps[e]),n.lookAt(o),n.updateMatrixWorld(),i.makeTranslation(-r.x,-r.y,-r.z),s.multiplyMatrices(n.projectionMatrix,n.matrixWorldInverse),this._frustum.setFromProjectionMatrix(s)}}),uc.prototype=Object.assign(Object.create(oc.prototype),{constructor:uc,isPointLight:!0,copy:function(t){return oc.prototype.copy.call(this,t),this.distance=t.distance,this.decay=t.decay,this.shadow=t.shadow.clone(),this}}),dc.prototype=Object.assign(Object.create(Wn.prototype),{constructor:dc,isOrthographicCamera:!0,copy:function(t,e){return Wn.prototype.copy.call(this,t,e),this.left=t.left,this.right=t.right,this.top=t.top,this.bottom=t.bottom,this.near=t.near,this.far=t.far,this.zoom=t.zoom,this.view=null===t.view?null:Object.assign({},t.view),this},setViewOffset:function(t,e,n,i,r,o){null===this.view&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=t,this.view.fullHeight=e,this.view.offsetX=n,this.view.offsetY=i,this.view.width=r,this.view.height=o,this.updateProjectionMatrix()},clearViewOffset:function(){null!==this.view&&(this.view.enabled=!1),this.updateProjectionMatrix()},updateProjectionMatrix:function(){const t=(this.right-this.left)/(2*this.zoom),e=(this.top-this.bottom)/(2*this.zoom),n=(this.right+this.left)/2,i=(this.top+this.bottom)/2;let r=n-t,o=n+t,s=i+e,a=i-e;if(null!==this.view&&this.view.enabled){const t=(this.right-this.left)/this.view.fullWidth/this.zoom,e=(this.top-this.bottom)/this.view.fullHeight/this.zoom;r+=t*this.view.offsetX,o=r+t*this.view.width,s-=e*this.view.offsetY,a=s-e*this.view.height}this.projectionMatrix.makeOrthographic(r,o,s,a,this.near,this.far),this.projectionMatrixInverse.getInverse(this.projectionMatrix)},toJSON:function(t){const e=Se.prototype.toJSON.call(this,t);return e.object.zoom=this.zoom,e.object.left=this.left,e.object.right=this.right,e.object.top=this.top,e.object.bottom=this.bottom,e.object.near=this.near,e.object.far=this.far,null!==this.view&&(e.object.view=Object.assign({},this.view)),e}}),pc.prototype=Object.assign(Object.create(ac.prototype),{constructor:pc,isDirectionalLightShadow:!0,updateMatrices:function(t){ac.prototype.updateMatrices.call(this,t)}}),fc.prototype=Object.assign(Object.create(oc.prototype),{constructor:fc,isDirectionalLight:!0,copy:function(t){return oc.prototype.copy.call(this,t),this.target=t.target.clone(),this.shadow=t.shadow.clone(),this}}),mc.prototype=Object.assign(Object.create(oc.prototype),{constructor:mc,isAmbientLight:!0}),gc.prototype=Object.assign(Object.create(oc.prototype),{constructor:gc,isRectAreaLight:!0,copy:function(t){return oc.prototype.copy.call(this,t),this.width=t.width,this.height=t.height,this},toJSON:function(t){const e=oc.prototype.toJSON.call(this,t);return e.object.width=this.width,e.object.height=this.height,e}});class vc{constructor(){Object.defineProperty(this,"isSphericalHarmonics3",{value:!0}),this.coefficients=[];for(let t=0;t<9;t++)this.coefficients.push(new Et)}set(t){for(let e=0;e<9;e++)this.coefficients[e].copy(t[e]);return this}zero(){for(let t=0;t<9;t++)this.coefficients[t].set(0,0,0);return this}getAt(t,e){const n=t.x,i=t.y,r=t.z,o=this.coefficients;return e.copy(o[0]).multiplyScalar(.282095),e.addScaledVector(o[1],.488603*i),e.addScaledVector(o[2],.488603*r),e.addScaledVector(o[3],.488603*n),e.addScaledVector(o[4],n*i*1.092548),e.addScaledVector(o[5],i*r*1.092548),e.addScaledVector(o[6],.315392*(3*r*r-1)),e.addScaledVector(o[7],n*r*1.092548),e.addScaledVector(o[8],.546274*(n*n-i*i)),e}getIrradianceAt(t,e){const n=t.x,i=t.y,r=t.z,o=this.coefficients;return e.copy(o[0]).multiplyScalar(.886227),e.addScaledVector(o[1],1.023328*i),e.addScaledVector(o[2],1.023328*r),e.addScaledVector(o[3],1.023328*n),e.addScaledVector(o[4],.858086*n*i),e.addScaledVector(o[5],.858086*i*r),e.addScaledVector(o[6],.743125*r*r-.247708),e.addScaledVector(o[7],.858086*n*r),e.addScaledVector(o[8],.429043*(n*n-i*i)),e}add(t){for(let e=0;e<9;e++)this.coefficients[e].add(t.coefficients[e]);return this}addScaledSH(t,e){for(let n=0;n<9;n++)this.coefficients[n].addScaledVector(t.coefficients[n],e);return this}scale(t){for(let e=0;e<9;e++)this.coefficients[e].multiplyScalar(t);return this}lerp(t,e){for(let n=0;n<9;n++)this.coefficients[n].lerp(t.coefficients[n],e);return this}equals(t){for(let e=0;e<9;e++)if(!this.coefficients[e].equals(t.coefficients[e]))return!1;return!0}copy(t){return this.set(t.coefficients)}clone(){return(new this.constructor).copy(this)}fromArray(t,e){void 0===e&&(e=0);const n=this.coefficients;for(let i=0;i<9;i++)n[i].fromArray(t,e+3*i);return this}toArray(t,e){void 0===t&&(t=[]),void 0===e&&(e=0);const n=this.coefficients;for(let i=0;i<9;i++)n[i].toArray(t,e+3*i);return t}static getBasisAt(t,e){const n=t.x,i=t.y,r=t.z;e[0]=.282095,e[1]=.488603*i,e[2]=.488603*r,e[3]=.488603*n,e[4]=1.092548*n*i,e[5]=1.092548*i*r,e[6]=.315392*(3*r*r-1),e[7]=1.092548*n*r,e[8]=.546274*(n*n-i*i)}}function yc(t,e){oc.call(this,void 0,e),this.type="LightProbe",this.sh=void 0!==t?t:new vc}function xc(t){Aa.call(this,t),this.textures={}}yc.prototype=Object.assign(Object.create(oc.prototype),{constructor:yc,isLightProbe:!0,copy:function(t){return oc.prototype.copy.call(this,t),this.sh.copy(t.sh),this},fromJSON:function(t){return this.intensity=t.intensity,this.sh.fromArray(t.sh),this},toJSON:function(t){const e=oc.prototype.toJSON.call(this,t);return e.object.sh=this.sh.toArray(),e}}),xc.prototype=Object.assign(Object.create(Aa.prototype),{constructor:xc,load:function(t,e,n,i){const r=this,o=new Ra(r.manager);o.setPath(r.path),o.setRequestHeader(r.requestHeader),o.setWithCredentials(r.withCredentials),o.load(t,(function(n){try{e(r.parse(JSON.parse(n)))}catch(e){i?i(e):console.error(e),r.manager.itemError(t)}}),n,i)},parse:function(t){const e=this.textures;function n(t){return void 0===e[t]&&console.warn("THREE.MaterialLoader: Undefined texture",t),e[t]}const i=new ca[t.type];if(void 0!==t.uuid&&(i.uuid=t.uuid),void 0!==t.name&&(i.name=t.name),void 0!==t.color&&i.color.setHex(t.color),void 0!==t.roughness&&(i.roughness=t.roughness),void 0!==t.metalness&&(i.metalness=t.metalness),void 0!==t.sheen&&(i.sheen=(new qe).setHex(t.sheen)),void 0!==t.emissive&&i.emissive.setHex(t.emissive),void 0!==t.specular&&i.specular.setHex(t.specular),void 0!==t.shininess&&(i.shininess=t.shininess),void 0!==t.clearcoat&&(i.clearcoat=t.clearcoat),void 0!==t.clearcoatRoughness&&(i.clearcoatRoughness=t.clearcoatRoughness),void 0!==t.fog&&(i.fog=t.fog),void 0!==t.flatShading&&(i.flatShading=t.flatShading),void 0!==t.blending&&(i.blending=t.blending),void 0!==t.combine&&(i.combine=t.combine),void 0!==t.side&&(i.side=t.side),void 0!==t.opacity&&(i.opacity=t.opacity),void 0!==t.transparent&&(i.transparent=t.transparent),void 0!==t.alphaTest&&(i.alphaTest=t.alphaTest),void 0!==t.depthTest&&(i.depthTest=t.depthTest),void 0!==t.depthWrite&&(i.depthWrite=t.depthWrite),void 0!==t.colorWrite&&(i.colorWrite=t.colorWrite),void 0!==t.stencilWrite&&(i.stencilWrite=t.stencilWrite),void 0!==t.stencilWriteMask&&(i.stencilWriteMask=t.stencilWriteMask),void 0!==t.stencilFunc&&(i.stencilFunc=t.stencilFunc),void 0!==t.stencilRef&&(i.stencilRef=t.stencilRef),void 0!==t.stencilFuncMask&&(i.stencilFuncMask=t.stencilFuncMask),void 0!==t.stencilFail&&(i.stencilFail=t.stencilFail),void 0!==t.stencilZFail&&(i.stencilZFail=t.stencilZFail),void 0!==t.stencilZPass&&(i.stencilZPass=t.stencilZPass),void 0!==t.wireframe&&(i.wireframe=t.wireframe),void 0!==t.wireframeLinewidth&&(i.wireframeLinewidth=t.wireframeLinewidth),void 0!==t.wireframeLinecap&&(i.wireframeLinecap=t.wireframeLinecap),void 0!==t.wireframeLinejoin&&(i.wireframeLinejoin=t.wireframeLinejoin),void 0!==t.rotation&&(i.rotation=t.rotation),1!==t.linewidth&&(i.linewidth=t.linewidth),void 0!==t.dashSize&&(i.dashSize=t.dashSize),void 0!==t.gapSize&&(i.gapSize=t.gapSize),void 0!==t.scale&&(i.scale=t.scale),void 0!==t.polygonOffset&&(i.polygonOffset=t.polygonOffset),void 0!==t.polygonOffsetFactor&&(i.polygonOffsetFactor=t.polygonOffsetFactor),void 0!==t.polygonOffsetUnits&&(i.polygonOffsetUnits=t.polygonOffsetUnits),void 0!==t.skinning&&(i.skinning=t.skinning),void 0!==t.morphTargets&&(i.morphTargets=t.morphTargets),void 0!==t.morphNormals&&(i.morphNormals=t.morphNormals),void 0!==t.dithering&&(i.dithering=t.dithering),void 0!==t.vertexTangents&&(i.vertexTangents=t.vertexTangents),void 0!==t.visible&&(i.visible=t.visible),void 0!==t.toneMapped&&(i.toneMapped=t.toneMapped),void 0!==t.userData&&(i.userData=t.userData),void 0!==t.vertexColors&&("number"==typeof t.vertexColors?i.vertexColors=t.vertexColors>0:i.vertexColors=t.vertexColors),void 0!==t.uniforms)for(const e in t.uniforms){const r=t.uniforms[e];switch(i.uniforms[e]={},r.type){case"t":i.uniforms[e].value=n(r.value);break;case"c":i.uniforms[e].value=(new qe).setHex(r.value);break;case"v2":i.uniforms[e].value=(new mt).fromArray(r.value);break;case"v3":i.uniforms[e].value=(new Et).fromArray(r.value);break;case"v4":i.uniforms[e].value=(new bt).fromArray(r.value);break;case"m3":i.uniforms[e].value=(new gt).fromArray(r.value);break;case"m4":i.uniforms[e].value=(new Kt).fromArray(r.value);break;default:i.uniforms[e].value=r.value}}if(void 0!==t.defines&&(i.defines=t.defines),void 0!==t.vertexShader&&(i.vertexShader=t.vertexShader),void 0!==t.fragmentShader&&(i.fragmentShader=t.fragmentShader),void 0!==t.extensions)for(const e in t.extensions)i.extensions[e]=t.extensions[e];if(void 0!==t.shading&&(i.flatShading=1===t.shading),void 0!==t.size&&(i.size=t.size),void 0!==t.sizeAttenuation&&(i.sizeAttenuation=t.sizeAttenuation),void 0!==t.map&&(i.map=n(t.map)),void 0!==t.matcap&&(i.matcap=n(t.matcap)),void 0!==t.alphaMap&&(i.alphaMap=n(t.alphaMap)),void 0!==t.bumpMap&&(i.bumpMap=n(t.bumpMap)),void 0!==t.bumpScale&&(i.bumpScale=t.bumpScale),void 0!==t.normalMap&&(i.normalMap=n(t.normalMap)),void 0!==t.normalMapType&&(i.normalMapType=t.normalMapType),void 0!==t.normalScale){let e=t.normalScale;!1===Array.isArray(e)&&(e=[e,e]),i.normalScale=(new mt).fromArray(e)}return void 0!==t.displacementMap&&(i.displacementMap=n(t.displacementMap)),void 0!==t.displacementScale&&(i.displacementScale=t.displacementScale),void 0!==t.displacementBias&&(i.displacementBias=t.displacementBias),void 0!==t.roughnessMap&&(i.roughnessMap=n(t.roughnessMap)),void 0!==t.metalnessMap&&(i.metalnessMap=n(t.metalnessMap)),void 0!==t.emissiveMap&&(i.emissiveMap=n(t.emissiveMap)),void 0!==t.emissiveIntensity&&(i.emissiveIntensity=t.emissiveIntensity),void 0!==t.specularMap&&(i.specularMap=n(t.specularMap)),void 0!==t.envMap&&(i.envMap=n(t.envMap)),void 0!==t.envMapIntensity&&(i.envMapIntensity=t.envMapIntensity),void 0!==t.reflectivity&&(i.reflectivity=t.reflectivity),void 0!==t.refractionRatio&&(i.refractionRatio=t.refractionRatio),void 0!==t.lightMap&&(i.lightMap=n(t.lightMap)),void 0!==t.lightMapIntensity&&(i.lightMapIntensity=t.lightMapIntensity),void 0!==t.aoMap&&(i.aoMap=n(t.aoMap)),void 0!==t.aoMapIntensity&&(i.aoMapIntensity=t.aoMapIntensity),void 0!==t.gradientMap&&(i.gradientMap=n(t.gradientMap)),void 0!==t.clearcoatMap&&(i.clearcoatMap=n(t.clearcoatMap)),void 0!==t.clearcoatRoughnessMap&&(i.clearcoatRoughnessMap=n(t.clearcoatRoughnessMap)),void 0!==t.clearcoatNormalMap&&(i.clearcoatNormalMap=n(t.clearcoatNormalMap)),void 0!==t.clearcoatNormalScale&&(i.clearcoatNormalScale=(new mt).fromArray(t.clearcoatNormalScale)),void 0!==t.transmission&&(i.transmission=t.transmission),void 0!==t.transmissionMap&&(i.transmissionMap=n(t.transmissionMap)),i},setTextures:function(t){return this.textures=t,this}});const _c=function(t){const e=t.lastIndexOf("/");return-1===e?"./":t.substr(0,e+1)};function bc(){xn.call(this),this.type="InstancedBufferGeometry",this.instanceCount=1/0}function wc(t,e,n,i){"number"==typeof n&&(i=n,n=!1,console.error("THREE.InstancedBufferAttribute: The constructor now expects normalized as the third argument.")),Ke.call(this,t,e,n),this.meshPerAttribute=i||1}function Mc(t){Aa.call(this,t)}bc.prototype=Object.assign(Object.create(xn.prototype),{constructor:bc,isInstancedBufferGeometry:!0,copy:function(t){return xn.prototype.copy.call(this,t),this.instanceCount=t.instanceCount,this},clone:function(){return(new this.constructor).copy(this)},toJSON:function(){const t=xn.prototype.toJSON.call(this);return t.instanceCount=this.instanceCount,t.isInstancedBufferGeometry=!0,t}}),wc.prototype=Object.assign(Object.create(Ke.prototype),{constructor:wc,isInstancedBufferAttribute:!0,copy:function(t){return Ke.prototype.copy.call(this,t),this.meshPerAttribute=t.meshPerAttribute,this},toJSON:function(){const t=Ke.prototype.toJSON.call(this);return t.meshPerAttribute=this.meshPerAttribute,t.isInstancedBufferAttribute=!0,t}}),Mc.prototype=Object.assign(Object.create(Aa.prototype),{constructor:Mc,load:function(t,e,n,i){const r=this,o=new Ra(r.manager);o.setPath(r.path),o.setRequestHeader(r.requestHeader),o.setWithCredentials(r.withCredentials),o.load(t,(function(n){try{e(r.parse(JSON.parse(n)))}catch(e){i?i(e):console.error(e),r.manager.itemError(t)}}),n,i)},parse:function(t){const e={},n={};function i(t,i){if(void 0!==e[i])return e[i];const r=t.interleavedBuffers[i],o=function(t,e){if(void 0!==n[e])return n[e];const i=t.arrayBuffers[e],r=new Uint32Array(i).buffer;return n[e]=r,r}(t,r.buffer),s=new lo(new Sc[r.type](o),r.stride);return s.uuid=r.uuid,e[i]=s,s}const r=t.isInstancedBufferGeometry?new bc:new xn,o=t.data.index;if(void 0!==o){const t=new Sc[o.type](o.array);r.setIndex(new Ke(t,1))}const s=t.data.attributes;for(const e in s){const n=s[e];let o;if(n.isInterleavedBufferAttribute){o=new uo(i(t.data,n.data),n.itemSize,n.offset,n.normalized)}else{const t=new Sc[n.type](n.array);o=new(n.isInstancedBufferAttribute?wc:Ke)(t,n.itemSize,n.normalized)}void 0!==n.name&&(o.name=n.name),r.setAttribute(e,o)}const a=t.data.morphAttributes;if(a)for(const e in a){const n=a[e],o=[];for(let e=0,r=n.length;e<r;e++){const r=n[e];let s;if(r.isInterleavedBufferAttribute){s=new uo(i(t.data,r.data),r.itemSize,r.offset,r.normalized)}else{s=new Ke(new Sc[r.type](r.array),r.itemSize,r.normalized)}void 0!==r.name&&(s.name=r.name),o.push(s)}r.morphAttributes[e]=o}t.data.morphTargetsRelative&&(r.morphTargetsRelative=!0);const c=t.data.groups||t.data.drawcalls||t.data.offsets;if(void 0!==c)for(let t=0,e=c.length;t!==e;++t){const e=c[t];r.addGroup(e.start,e.count,e.materialIndex)}const l=t.data.boundingSphere;if(void 0!==l){const t=new Et;void 0!==l.center&&t.fromArray(l.center),r.boundingSphere=new jt(t,l.radius)}return t.name&&(r.name=t.name),t.userData&&(r.userData=t.userData),r}});const Sc={Int8Array:Int8Array,Uint8Array:Uint8Array,Uint8ClampedArray:"undefined"!=typeof Uint8ClampedArray?Uint8ClampedArray:Uint8Array,Int16Array:Int16Array,Uint16Array:Uint16Array,Int32Array:Int32Array,Uint32Array:Uint32Array,Float32Array:Float32Array,Float64Array:Float64Array};function Ec(t){"undefined"==typeof createImageBitmap&&console.warn("THREE.ImageBitmapLoader: createImageBitmap() not supported."),"undefined"==typeof fetch&&console.warn("THREE.ImageBitmapLoader: fetch() not supported."),Aa.call(this,t),this.options={premultiplyAlpha:"none"}}function Tc(){this.type="ShapePath",this.color=new qe,this.subPaths=[],this.currentPath=null}function Ac(t){this.type="Font",this.data=t}function Lc(t,e,n,i,r){const o=r.glyphs[t]||r.glyphs["?"];if(!o)return void console.error('THREE.Font: character "'+t+'" does not exists in font family '+r.familyName+".");const s=new Tc;let a,c,l,h,u,d,p,f;if(o.o){const t=o._cachedOutline||(o._cachedOutline=o.o.split(" "));for(let r=0,o=t.length;r<o;){switch(t[r++]){case"m":a=t[r++]*e+n,c=t[r++]*e+i,s.moveTo(a,c);break;case"l":a=t[r++]*e+n,c=t[r++]*e+i,s.lineTo(a,c);break;case"q":l=t[r++]*e+n,h=t[r++]*e+i,u=t[r++]*e+n,d=t[r++]*e+i,s.quadraticCurveTo(u,d,l,h);break;case"b":l=t[r++]*e+n,h=t[r++]*e+i,u=t[r++]*e+n,d=t[r++]*e+i,p=t[r++]*e+n,f=t[r++]*e+i,s.bezierCurveTo(u,d,p,f,l,h)}}}return{offsetX:o.ha*e,path:s}}function Rc(t){Aa.call(this,t)}let Pc;Ec.prototype=Object.assign(Object.create(Aa.prototype),{constructor:Ec,isImageBitmapLoader:!0,setOptions:function(t){return this.options=t,this},load:function(t,e,n,i){void 0===t&&(t=""),void 0!==this.path&&(t=this.path+t),t=this.manager.resolveURL(t);const r=this,o=Sa.get(t);if(void 0!==o)return r.manager.itemStart(t),setTimeout((function(){e&&e(o),r.manager.itemEnd(t)}),0),o;const s={};s.credentials="anonymous"===this.crossOrigin?"same-origin":"include",fetch(t,s).then((function(t){return t.blob()})).then((function(t){return createImageBitmap(t,r.options)})).then((function(n){Sa.add(t,n),e&&e(n),r.manager.itemEnd(t)})).catch((function(e){i&&i(e),r.manager.itemError(t),r.manager.itemEnd(t)})),r.manager.itemStart(t)}}),Object.assign(Tc.prototype,{moveTo:function(t,e){return this.currentPath=new ic,this.subPaths.push(this.currentPath),this.currentPath.moveTo(t,e),this},lineTo:function(t,e){return this.currentPath.lineTo(t,e),this},quadraticCurveTo:function(t,e,n,i){return this.currentPath.quadraticCurveTo(t,e,n,i),this},bezierCurveTo:function(t,e,n,i,r,o){return this.currentPath.bezierCurveTo(t,e,n,i,r,o),this},splineThru:function(t){return this.currentPath.splineThru(t),this},toShapes:function(t,e){function n(t){const e=[];for(let n=0,i=t.length;n<i;n++){const i=t[n],r=new rc;r.curves=i.curves,e.push(r)}return e}function i(t,e){const n=e.length;let i=!1;for(let r=n-1,o=0;o<n;r=o++){let n=e[r],s=e[o],a=s.x-n.x,c=s.y-n.y;if(Math.abs(c)>Number.EPSILON){if(c<0&&(n=e[o],a=-a,s=e[r],c=-c),t.y<n.y||t.y>s.y)continue;if(t.y===n.y){if(t.x===n.x)return!0}else{const e=c*(t.x-n.x)-a*(t.y-n.y);if(0===e)return!0;if(e<0)continue;i=!i}}else{if(t.y!==n.y)continue;if(s.x<=t.x&&t.x<=n.x||n.x<=t.x&&t.x<=s.x)return!0}}return i}const r=Fs.isClockWise,o=this.subPaths;if(0===o.length)return[];if(!0===e)return n(o);let s,a,c;const l=[];if(1===o.length)return a=o[0],c=new rc,c.curves=a.curves,l.push(c),l;let h=!r(o[0].getPoints());h=t?!h:h;const u=[],d=[];let p,f,m=[],g=0;d[g]=void 0,m[g]=[];for(let e=0,n=o.length;e<n;e++)a=o[e],p=a.getPoints(),s=r(p),s=t?!s:s,s?(!h&&d[g]&&g++,d[g]={s:new rc,p:p},d[g].s.curves=a.curves,h&&g++,m[g]=[]):m[g].push({h:a,p:p[0]});if(!d[0])return n(o);if(d.length>1){let t=!1;const e=[];for(let t=0,e=d.length;t<e;t++)u[t]=[];for(let n=0,r=d.length;n<r;n++){const r=m[n];for(let o=0;o<r.length;o++){const s=r[o];let a=!0;for(let r=0;r<d.length;r++)i(s.p,d[r].p)&&(n!==r&&e.push({froms:n,tos:r,hole:o}),a?(a=!1,u[r].push(s)):t=!0);a&&u[n].push(s)}}e.length>0&&(t||(m=u))}for(let t=0,e=d.length;t<e;t++){c=d[t].s,l.push(c),f=m[t];for(let t=0,e=f.length;t<e;t++)c.holes.push(f[t].h)}return l}}),Object.assign(Ac.prototype,{isFont:!0,generateShapes:function(t,e){void 0===e&&(e=100);const n=[],i=function(t,e,n){const i=Array.from?Array.from(t):String(t).split(""),r=e/n.resolution,o=(n.boundingBox.yMax-n.boundingBox.yMin+n.underlineThickness)*r,s=[];let a=0,c=0;for(let t=0;t<i.length;t++){const e=i[t];if("\n"===e)a=0,c-=o;else{const t=Lc(e,r,a,c,n);a+=t.offsetX,s.push(t.path)}}return s}(t,e,this.data);for(let t=0,e=i.length;t<e;t++)Array.prototype.push.apply(n,i[t].toShapes());return n}}),Rc.prototype=Object.assign(Object.create(Aa.prototype),{constructor:Rc,load:function(t,e,n,i){const r=this,o=new Ra(this.manager);o.setPath(this.path),o.setRequestHeader(this.requestHeader),o.setWithCredentials(r.withCredentials),o.load(t,(function(t){let n;try{n=JSON.parse(t)}catch(e){console.warn("THREE.FontLoader: typeface.js support is being deprecated. Use typeface.json instead."),n=JSON.parse(t.substring(65,t.length-2))}const i=r.parse(n);e&&e(i)}),n,i)},parse:function(t){return new Ac(t)}});const Cc=function(){return void 0===Pc&&(Pc=new(window.AudioContext||window.webkitAudioContext)),Pc};function Nc(t){Aa.call(this,t)}function Oc(t,e,n){yc.call(this,void 0,n);const i=(new qe).set(t),r=(new qe).set(e),o=new Et(i.r,i.g,i.b),s=new Et(r.r,r.g,r.b),a=Math.sqrt(Math.PI),c=a*Math.sqrt(.75);this.sh.coefficients[0].copy(o).add(s).multiplyScalar(a),this.sh.coefficients[1].copy(o).sub(s).multiplyScalar(c)}function Ic(t,e){yc.call(this,void 0,e);const n=(new qe).set(t);this.sh.coefficients[0].set(n.r,n.g,n.b).multiplyScalar(2*Math.sqrt(Math.PI))}Nc.prototype=Object.assign(Object.create(Aa.prototype),{constructor:Nc,load:function(t,e,n,i){const r=this,o=new Ra(r.manager);o.setResponseType("arraybuffer"),o.setPath(r.path),o.setRequestHeader(r.requestHeader),o.setWithCredentials(r.withCredentials),o.load(t,(function(n){try{const t=n.slice(0);Cc().decodeAudioData(t,(function(t){e(t)}))}catch(e){i?i(e):console.error(e),r.manager.itemError(t)}}),n,i)}}),Oc.prototype=Object.assign(Object.create(yc.prototype),{constructor:Oc,isHemisphereLightProbe:!0,copy:function(t){return yc.prototype.copy.call(this,t),this},toJSON:function(t){return yc.prototype.toJSON.call(this,t)}}),Ic.prototype=Object.assign(Object.create(yc.prototype),{constructor:Ic,isAmbientLightProbe:!0,copy:function(t){return yc.prototype.copy.call(this,t),this},toJSON:function(t){return yc.prototype.toJSON.call(this,t)}});const Dc=new Kt,zc=new Kt;Object.assign(function(){this.type="StereoCamera",this.aspect=1,this.eyeSep=.064,this.cameraL=new qn,this.cameraL.layers.enable(1),this.cameraL.matrixAutoUpdate=!1,this.cameraR=new qn,this.cameraR.layers.enable(2),this.cameraR.matrixAutoUpdate=!1,this._cache={focus:null,fov:null,aspect:null,near:null,far:null,zoom:null,eyeSep:null}}.prototype,{update:function(t){const e=this._cache;if(e.focus!==t.focus||e.fov!==t.fov||e.aspect!==t.aspect*this.aspect||e.near!==t.near||e.far!==t.far||e.zoom!==t.zoom||e.eyeSep!==this.eyeSep){e.focus=t.focus,e.fov=t.fov,e.aspect=t.aspect*this.aspect,e.near=t.near,e.far=t.far,e.zoom=t.zoom,e.eyeSep=this.eyeSep;const n=t.projectionMatrix.clone(),i=e.eyeSep/2,r=i*e.near/e.focus,o=e.near*Math.tan(ft.DEG2RAD*e.fov*.5)/e.zoom;let s,a;zc.elements[12]=-i,Dc.elements[12]=i,s=-o*e.aspect+r,a=o*e.aspect+r,n.elements[0]=2*e.near/(a-s),n.elements[8]=(a+s)/(a-s),this.cameraL.projectionMatrix.copy(n),s=-o*e.aspect-r,a=o*e.aspect-r,n.elements[0]=2*e.near/(a-s),n.elements[8]=(a+s)/(a-s),this.cameraR.projectionMatrix.copy(n)}this.cameraL.matrixWorld.copy(t.matrixWorld).multiply(zc),this.cameraR.matrixWorld.copy(t.matrixWorld).multiply(Dc)}});class Uc extends Se{constructor(t){super(),this.type="Audio",this.listener=t,this.context=t.context,this.gain=this.context.createGain(),this.gain.connect(t.getInput()),this.autoplay=!1,this.buffer=null,this.detune=0,this.loop=!1,this.loopStart=0,this.loopEnd=0,this.offset=0,this.duration=void 0,this.playbackRate=1,this.isPlaying=!1,this.hasPlaybackControl=!0,this.source=null,this.sourceType="empty",this._startedAt=0,this._progress=0,this._connected=!1,this.filters=[]}getOutput(){return this.gain}setNodeSource(t){return this.hasPlaybackControl=!1,this.sourceType="audioNode",this.source=t,this.connect(),this}setMediaElementSource(t){return this.hasPlaybackControl=!1,this.sourceType="mediaNode",this.source=this.context.createMediaElementSource(t),this.connect(),this}setMediaStreamSource(t){return this.hasPlaybackControl=!1,this.sourceType="mediaStreamNode",this.source=this.context.createMediaStreamSource(t),this.connect(),this}setBuffer(t){return this.buffer=t,this.sourceType="buffer",this.autoplay&&this.play(),this}play(t){if(void 0===t&&(t=0),!0===this.isPlaying)return void console.warn("THREE.Audio: Audio is already playing.");if(!1===this.hasPlaybackControl)return void console.warn("THREE.Audio: this Audio has no playback control.");this._startedAt=this.context.currentTime+t;const e=this.context.createBufferSource();return e.buffer=this.buffer,e.loop=this.loop,e.loopStart=this.loopStart,e.loopEnd=this.loopEnd,e.onended=this.onEnded.bind(this),e.start(this._startedAt,this._progress+this.offset,this.duration),this.isPlaying=!0,this.source=e,this.setDetune(this.detune),this.setPlaybackRate(this.playbackRate),this.connect()}pause(){if(!1!==this.hasPlaybackControl)return!0===this.isPlaying&&(this._progress+=Math.max(this.context.currentTime-this._startedAt,0)*this.playbackRate,!0===this.loop&&(this._progress=this._progress%(this.duration||this.buffer.duration)),this.source.stop(),this.source.onended=null,this.isPlaying=!1),this;console.warn("THREE.Audio: this Audio has no playback control.")}stop(){if(!1!==this.hasPlaybackControl)return this._progress=0,this.source.stop(),this.source.onended=null,this.isPlaying=!1,this;console.warn("THREE.Audio: this Audio has no playback control.")}connect(){if(this.filters.length>0){this.source.connect(this.filters[0]);for(let t=1,e=this.filters.length;t<e;t++)this.filters[t-1].connect(this.filters[t]);this.filters[this.filters.length-1].connect(this.getOutput())}else this.source.connect(this.getOutput());return this._connected=!0,this}disconnect(){if(this.filters.length>0){this.source.disconnect(this.filters[0]);for(let t=1,e=this.filters.length;t<e;t++)this.filters[t-1].disconnect(this.filters[t]);this.filters[this.filters.length-1].disconnect(this.getOutput())}else this.source.disconnect(this.getOutput());return this._connected=!1,this}getFilters(){return this.filters}setFilters(t){return t||(t=[]),!0===this._connected?(this.disconnect(),this.filters=t,this.connect()):this.filters=t,this}setDetune(t){if(this.detune=t,void 0!==this.source.detune)return!0===this.isPlaying&&this.source.detune.setTargetAtTime(this.detune,this.context.currentTime,.01),this}getDetune(){return this.detune}getFilter(){return this.getFilters()[0]}setFilter(t){return this.setFilters(t?[t]:[])}setPlaybackRate(t){if(!1!==this.hasPlaybackControl)return this.playbackRate=t,!0===this.isPlaying&&this.source.playbackRate.setTargetAtTime(this.playbackRate,this.context.currentTime,.01),this;console.warn("THREE.Audio: this Audio has no playback control.")}getPlaybackRate(){return this.playbackRate}onEnded(){this.isPlaying=!1}getLoop(){return!1===this.hasPlaybackControl?(console.warn("THREE.Audio: this Audio has no playback control."),!1):this.loop}setLoop(t){if(!1!==this.hasPlaybackControl)return this.loop=t,!0===this.isPlaying&&(this.source.loop=this.loop),this;console.warn("THREE.Audio: this Audio has no playback control.")}setLoopStart(t){return this.loopStart=t,this}setLoopEnd(t){return this.loopEnd=t,this}getVolume(){return this.gain.gain.value}setVolume(t){return this.gain.gain.setTargetAtTime(t,this.context.currentTime,.01),this}}function Bc(t,e,n){let i,r,o;switch(this.binding=t,this.valueSize=n,e){case"quaternion":i=this._slerp,r=this._slerpAdditive,o=this._setAdditiveIdentityQuaternion,this.buffer=new Float64Array(6*n),this._workIndex=5;break;case"string":case"bool":i=this._select,r=this._select,o=this._setAdditiveIdentityOther,this.buffer=new Array(5*n);break;default:i=this._lerp,r=this._lerpAdditive,o=this._setAdditiveIdentityNumeric,this.buffer=new Float64Array(5*n)}this._mixBufferRegion=i,this._mixBufferRegionAdditive=r,this._setIdentity=o,this._origIndex=3,this._addIndex=4,this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,this.useCount=0,this.referenceCount=0}Object.assign(Bc.prototype,{accumulate:function(t,e){const n=this.buffer,i=this.valueSize,r=t*i+i;let o=this.cumulativeWeight;if(0===o){for(let t=0;t!==i;++t)n[r+t]=n[t];o=e}else{o+=e;const t=e/o;this._mixBufferRegion(n,r,0,t,i)}this.cumulativeWeight=o},accumulateAdditive:function(t){const e=this.buffer,n=this.valueSize,i=n*this._addIndex;0===this.cumulativeWeightAdditive&&this._setIdentity(),this._mixBufferRegionAdditive(e,i,0,t,n),this.cumulativeWeightAdditive+=t},apply:function(t){const e=this.valueSize,n=this.buffer,i=t*e+e,r=this.cumulativeWeight,o=this.cumulativeWeightAdditive,s=this.binding;if(this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,r<1){const t=e*this._origIndex;this._mixBufferRegion(n,i,t,1-r,e)}o>0&&this._mixBufferRegionAdditive(n,i,this._addIndex*e,1,e);for(let t=e,r=e+e;t!==r;++t)if(n[t]!==n[t+e]){s.setValue(n,i);break}},saveOriginalState:function(){const t=this.binding,e=this.buffer,n=this.valueSize,i=n*this._origIndex;t.getValue(e,i);for(let t=n,r=i;t!==r;++t)e[t]=e[i+t%n];this._setIdentity(),this.cumulativeWeight=0,this.cumulativeWeightAdditive=0},restoreOriginalState:function(){const t=3*this.valueSize;this.binding.setValue(this.buffer,t)},_setAdditiveIdentityNumeric:function(){const t=this._addIndex*this.valueSize,e=t+this.valueSize;for(let n=t;n<e;n++)this.buffer[n]=0},_setAdditiveIdentityQuaternion:function(){this._setAdditiveIdentityNumeric(),this.buffer[this._addIndex*this.valueSize+3]=1},_setAdditiveIdentityOther:function(){const t=this._origIndex*this.valueSize,e=this._addIndex*this.valueSize;for(let n=0;n<this.valueSize;n++)this.buffer[e+n]=this.buffer[t+n]},_select:function(t,e,n,i,r){if(i>=.5)for(let i=0;i!==r;++i)t[e+i]=t[n+i]},_slerp:function(t,e,n,i){St.slerpFlat(t,e,t,e,t,n,i)},_slerpAdditive:function(t,e,n,i,r){const o=this._workIndex*r;St.multiplyQuaternionsFlat(t,o,t,e,t,n),St.slerpFlat(t,e,t,e,t,o,i)},_lerp:function(t,e,n,i,r){const o=1-i;for(let s=0;s!==r;++s){const r=e+s;t[r]=t[r]*o+t[n+s]*i}},_lerpAdditive:function(t,e,n,i,r){for(let o=0;o!==r;++o){const r=e+o;t[r]=t[r]+t[n+o]*i}}});const Hc=new RegExp("[\\[\\]\\.:\\/]","g"),Fc="[^"+"\\[\\]\\.:\\/".replace("\\.","")+"]",kc=/((?:WC+[\/:])*)/.source.replace("WC","[^\\[\\]\\.:\\/]"),Gc=/(WCOD+)?/.source.replace("WCOD",Fc),Vc=/(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC","[^\\[\\]\\.:\\/]"),jc=/\.(WC+)(?:\[(.+)\])?/.source.replace("WC","[^\\[\\]\\.:\\/]"),Wc=new RegExp("^"+kc+Gc+Vc+jc+"$"),qc=["material","materials","bones"];function Xc(t,e,n){const i=n||Yc.parseTrackName(e);this._targetGroup=t,this._bindings=t.subscribe_(e,i)}function Yc(t,e,n){this.path=e,this.parsedPath=n||Yc.parseTrackName(e),this.node=Yc.findNode(t,this.parsedPath.nodeName)||t,this.rootNode=t}Object.assign(Xc.prototype,{getValue:function(t,e){this.bind();const n=this._targetGroup.nCachedObjects_,i=this._bindings[n];void 0!==i&&i.getValue(t,e)},setValue:function(t,e){const n=this._bindings;for(let i=this._targetGroup.nCachedObjects_,r=n.length;i!==r;++i)n[i].setValue(t,e)},bind:function(){const t=this._bindings;for(let e=this._targetGroup.nCachedObjects_,n=t.length;e!==n;++e)t[e].bind()},unbind:function(){const t=this._bindings;for(let e=this._targetGroup.nCachedObjects_,n=t.length;e!==n;++e)t[e].unbind()}}),Object.assign(Yc,{Composite:Xc,create:function(t,e,n){return t&&t.isAnimationObjectGroup?new Yc.Composite(t,e,n):new Yc(t,e,n)},sanitizeNodeName:function(t){return t.replace(/\s/g,"_").replace(Hc,"")},parseTrackName:function(t){const e=Wc.exec(t);if(!e)throw new Error("PropertyBinding: Cannot parse trackName: "+t);const n={nodeName:e[2],objectName:e[3],objectIndex:e[4],propertyName:e[5],propertyIndex:e[6]},i=n.nodeName&&n.nodeName.lastIndexOf(".");if(void 0!==i&&-1!==i){const t=n.nodeName.substring(i+1);-1!==qc.indexOf(t)&&(n.nodeName=n.nodeName.substring(0,i),n.objectName=t)}if(null===n.propertyName||0===n.propertyName.length)throw new Error("PropertyBinding: can not parse propertyName from trackName: "+t);return n},findNode:function(t,e){if(!e||""===e||"."===e||-1===e||e===t.name||e===t.uuid)return t;if(t.skeleton){const n=t.skeleton.getBoneByName(e);if(void 0!==n)return n}if(t.children){const n=function(t){for(let i=0;i<t.length;i++){const r=t[i];if(r.name===e||r.uuid===e)return r;const o=n(r.children);if(o)return o}return null},i=n(t.children);if(i)return i}return null}}),Object.assign(Yc.prototype,{_getValue_unavailable:function(){},_setValue_unavailable:function(){},BindingType:{Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3},Versioning:{None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2},GetterByBindingType:[function(t,e){t[e]=this.node[this.propertyName]},function(t,e){const n=this.resolvedProperty;for(let i=0,r=n.length;i!==r;++i)t[e++]=n[i]},function(t,e){t[e]=this.resolvedProperty[this.propertyIndex]},function(t,e){this.resolvedProperty.toArray(t,e)}],SetterByBindingTypeAndVersioning:[[function(t,e){this.targetObject[this.propertyName]=t[e]},function(t,e){this.targetObject[this.propertyName]=t[e],this.targetObject.needsUpdate=!0},function(t,e){this.targetObject[this.propertyName]=t[e],this.targetObject.matrixWorldNeedsUpdate=!0}],[function(t,e){const n=this.resolvedProperty;for(let i=0,r=n.length;i!==r;++i)n[i]=t[e++]},function(t,e){const n=this.resolvedProperty;for(let i=0,r=n.length;i!==r;++i)n[i]=t[e++];this.targetObject.needsUpdate=!0},function(t,e){const n=this.resolvedProperty;for(let i=0,r=n.length;i!==r;++i)n[i]=t[e++];this.targetObject.matrixWorldNeedsUpdate=!0}],[function(t,e){this.resolvedProperty[this.propertyIndex]=t[e]},function(t,e){this.resolvedProperty[this.propertyIndex]=t[e],this.targetObject.needsUpdate=!0},function(t,e){this.resolvedProperty[this.propertyIndex]=t[e],this.targetObject.matrixWorldNeedsUpdate=!0}],[function(t,e){this.resolvedProperty.fromArray(t,e)},function(t,e){this.resolvedProperty.fromArray(t,e),this.targetObject.needsUpdate=!0},function(t,e){this.resolvedProperty.fromArray(t,e),this.targetObject.matrixWorldNeedsUpdate=!0}]],getValue:function(t,e){this.bind(),this.getValue(t,e)},setValue:function(t,e){this.bind(),this.setValue(t,e)},bind:function(){let t=this.node;const e=this.parsedPath,n=e.objectName,i=e.propertyName;let r=e.propertyIndex;if(t||(t=Yc.findNode(this.rootNode,e.nodeName)||this.rootNode,this.node=t),this.getValue=this._getValue_unavailable,this.setValue=this._setValue_unavailable,!t)return void console.error("THREE.PropertyBinding: Trying to update node for track: "+this.path+" but it wasn't found.");if(n){let i=e.objectIndex;switch(n){case"materials":if(!t.material)return void console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);if(!t.material.materials)return void console.error("THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.",this);t=t.material.materials;break;case"bones":if(!t.skeleton)return void console.error("THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.",this);t=t.skeleton.bones;for(let e=0;e<t.length;e++)if(t[e].name===i){i=e;break}break;default:if(void 0===t[n])return void console.error("THREE.PropertyBinding: Can not bind to objectName of node undefined.",this);t=t[n]}if(void 0!==i){if(void 0===t[i])return void console.error("THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.",this,t);t=t[i]}}const o=t[i];if(void 0===o){const n=e.nodeName;return void console.error("THREE.PropertyBinding: Trying to update property for track: "+n+"."+i+" but it wasn't found.",t)}let s=this.Versioning.None;this.targetObject=t,void 0!==t.needsUpdate?s=this.Versioning.NeedsUpdate:void 0!==t.matrixWorldNeedsUpdate&&(s=this.Versioning.MatrixWorldNeedsUpdate);let a=this.BindingType.Direct;if(void 0!==r){if("morphTargetInfluences"===i){if(!t.geometry)return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.",this);if(!t.geometry.isBufferGeometry)return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences on THREE.Geometry. Use THREE.BufferGeometry instead.",this);if(!t.geometry.morphAttributes)return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.",this);void 0!==t.morphTargetDictionary[r]&&(r=t.morphTargetDictionary[r])}a=this.BindingType.ArrayElement,this.resolvedProperty=o,this.propertyIndex=r}else void 0!==o.fromArray&&void 0!==o.toArray?(a=this.BindingType.HasFromToArray,this.resolvedProperty=o):Array.isArray(o)?(a=this.BindingType.EntireArray,this.resolvedProperty=o):this.propertyName=i;this.getValue=this.GetterByBindingType[a],this.setValue=this.SetterByBindingTypeAndVersioning[a][s]},unbind:function(){this.node=null,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}}),Object.assign(Yc.prototype,{_getValue_unbound:Yc.prototype.getValue,_setValue_unbound:Yc.prototype.setValue}),Object.assign(function(){this.uuid=ft.generateUUID(),this._objects=Array.prototype.slice.call(arguments),this.nCachedObjects_=0;const t={};this._indicesByUUID=t;for(let e=0,n=arguments.length;e!==n;++e)t[arguments[e].uuid]=e;this._paths=[],this._parsedPaths=[],this._bindings=[],this._bindingsIndicesByPath={};const e=this;this.stats={objects:{get total(){return e._objects.length},get inUse(){return this.total-e.nCachedObjects_}},get bindingsPerObject(){return e._bindings.length}}}.prototype,{isAnimationObjectGroup:!0,add:function(){const t=this._objects,e=this._indicesByUUID,n=this._paths,i=this._parsedPaths,r=this._bindings,o=r.length;let s=void 0,a=t.length,c=this.nCachedObjects_;for(let l=0,h=arguments.length;l!==h;++l){const h=arguments[l],u=h.uuid;let d=e[u];if(void 0===d){d=a++,e[u]=d,t.push(h);for(let t=0,e=o;t!==e;++t)r[t].push(new Yc(h,n[t],i[t]))}else if(d<c){s=t[d];const a=--c,l=t[a];e[l.uuid]=d,t[d]=l,e[u]=a,t[a]=h;for(let t=0,e=o;t!==e;++t){const e=r[t],o=e[a];let s=e[d];e[d]=o,void 0===s&&(s=new Yc(h,n[t],i[t])),e[a]=s}}else t[d]!==s&&console.error("THREE.AnimationObjectGroup: Different objects with the same UUID detected. Clean the caches or recreate your infrastructure when reloading scenes.")}this.nCachedObjects_=c},remove:function(){const t=this._objects,e=this._indicesByUUID,n=this._bindings,i=n.length;let r=this.nCachedObjects_;for(let o=0,s=arguments.length;o!==s;++o){const s=arguments[o],a=s.uuid,c=e[a];if(void 0!==c&&c>=r){const o=r++,l=t[o];e[l.uuid]=c,t[c]=l,e[a]=o,t[o]=s;for(let t=0,e=i;t!==e;++t){const e=n[t],i=e[o],r=e[c];e[c]=i,e[o]=r}}}this.nCachedObjects_=r},uncache:function(){const t=this._objects,e=this._indicesByUUID,n=this._bindings,i=n.length;let r=this.nCachedObjects_,o=t.length;for(let s=0,a=arguments.length;s!==a;++s){const a=arguments[s].uuid,c=e[a];if(void 0!==c)if(delete e[a],c<r){const s=--r,a=t[s],l=--o,h=t[l];e[a.uuid]=c,t[c]=a,e[h.uuid]=s,t[s]=h,t.pop();for(let t=0,e=i;t!==e;++t){const e=n[t],i=e[s],r=e[l];e[c]=i,e[s]=r,e.pop()}}else{const r=--o,s=t[r];e[s.uuid]=c,t[c]=s,t.pop();for(let t=0,e=i;t!==e;++t){const e=n[t];e[c]=e[r],e.pop()}}}this.nCachedObjects_=r},subscribe_:function(t,e){const n=this._bindingsIndicesByPath;let i=n[t];const r=this._bindings;if(void 0!==i)return r[i];const o=this._paths,s=this._parsedPaths,a=this._objects,c=a.length,l=this.nCachedObjects_,h=new Array(c);i=r.length,n[t]=i,o.push(t),s.push(e),r.push(h);for(let n=l,i=a.length;n!==i;++n){const i=a[n];h[n]=new Yc(i,t,e)}return h},unsubscribe_:function(t){const e=this._bindingsIndicesByPath,n=e[t];if(void 0!==n){const i=this._paths,r=this._parsedPaths,o=this._bindings,s=o.length-1,a=o[s];e[t[s]]=n,o[n]=a,o.pop(),r[n]=r[s],r.pop(),i[n]=i[s],i.pop()}}});class Zc{constructor(t,e,n,i){this._mixer=t,this._clip=e,this._localRoot=n||null,this.blendMode=i||e.blendMode;const r=e.tracks,o=r.length,s=new Array(o),a={endingStart:2400,endingEnd:2400};for(let t=0;t!==o;++t){const e=r[t].createInterpolant(null);s[t]=e,e.settings=a}this._interpolantSettings=a,this._interpolants=s,this._propertyBindings=new Array(o),this._cacheIndex=null,this._byClipCacheIndex=null,this._timeScaleInterpolant=null,this._weightInterpolant=null,this.loop=2201,this._loopCount=-1,this._startTime=null,this.time=0,this.timeScale=1,this._effectiveTimeScale=1,this.weight=1,this._effectiveWeight=1,this.repetitions=1/0,this.paused=!1,this.enabled=!0,this.clampWhenFinished=!1,this.zeroSlopeAtStart=!0,this.zeroSlopeAtEnd=!0}play(){return this._mixer._activateAction(this),this}stop(){return this._mixer._deactivateAction(this),this.reset()}reset(){return this.paused=!1,this.enabled=!0,this.time=0,this._loopCount=-1,this._startTime=null,this.stopFading().stopWarping()}isRunning(){return this.enabled&&!this.paused&&0!==this.timeScale&&null===this._startTime&&this._mixer._isActiveAction(this)}isScheduled(){return this._mixer._isActiveAction(this)}startAt(t){return this._startTime=t,this}setLoop(t,e){return this.loop=t,this.repetitions=e,this}setEffectiveWeight(t){return this.weight=t,this._effectiveWeight=this.enabled?t:0,this.stopFading()}getEffectiveWeight(){return this._effectiveWeight}fadeIn(t){return this._scheduleFading(t,0,1)}fadeOut(t){return this._scheduleFading(t,1,0)}crossFadeFrom(t,e,n){if(t.fadeOut(e),this.fadeIn(e),n){const n=this._clip.duration,i=t._clip.duration,r=i/n,o=n/i;t.warp(1,r,e),this.warp(o,1,e)}return this}crossFadeTo(t,e,n){return t.crossFadeFrom(this,e,n)}stopFading(){const t=this._weightInterpolant;return null!==t&&(this._weightInterpolant=null,this._mixer._takeBackControlInterpolant(t)),this}setEffectiveTimeScale(t){return this.timeScale=t,this._effectiveTimeScale=this.paused?0:t,this.stopWarping()}getEffectiveTimeScale(){return this._effectiveTimeScale}setDuration(t){return this.timeScale=this._clip.duration/t,this.stopWarping()}syncWith(t){return this.time=t.time,this.timeScale=t.timeScale,this.stopWarping()}halt(t){return this.warp(this._effectiveTimeScale,0,t)}warp(t,e,n){const i=this._mixer,r=i.time,o=this.timeScale;let s=this._timeScaleInterpolant;null===s&&(s=i._lendControlInterpolant(),this._timeScaleInterpolant=s);const a=s.parameterPositions,c=s.sampleValues;return a[0]=r,a[1]=r+n,c[0]=t/o,c[1]=e/o,this}stopWarping(){const t=this._timeScaleInterpolant;return null!==t&&(this._timeScaleInterpolant=null,this._mixer._takeBackControlInterpolant(t)),this}getMixer(){return this._mixer}getClip(){return this._clip}getRoot(){return this._localRoot||this._mixer._root}_update(t,e,n,i){if(!this.enabled)return void this._updateWeight(t);const r=this._startTime;if(null!==r){const i=(t-r)*n;if(i<0||0===n)return;this._startTime=null,e=n*i}e*=this._updateTimeScale(t);const o=this._updateTime(e),s=this._updateWeight(t);if(s>0){const t=this._interpolants,e=this._propertyBindings;switch(this.blendMode){case 2501:for(let n=0,i=t.length;n!==i;++n)t[n].evaluate(o),e[n].accumulateAdditive(s);break;case 2500:default:for(let n=0,r=t.length;n!==r;++n)t[n].evaluate(o),e[n].accumulate(i,s)}}}_updateWeight(t){let e=0;if(this.enabled){e=this.weight;const n=this._weightInterpolant;if(null!==n){const i=n.evaluate(t)[0];e*=i,t>n.parameterPositions[1]&&(this.stopFading(),0===i&&(this.enabled=!1))}}return this._effectiveWeight=e,e}_updateTimeScale(t){let e=0;if(!this.paused){e=this.timeScale;const n=this._timeScaleInterpolant;if(null!==n){e*=n.evaluate(t)[0],t>n.parameterPositions[1]&&(this.stopWarping(),0===e?this.paused=!0:this.timeScale=e)}}return this._effectiveTimeScale=e,e}_updateTime(t){const e=this._clip.duration,n=this.loop;let i=this.time+t,r=this._loopCount;const o=2202===n;if(0===t)return-1===r?i:o&&1==(1&r)?e-i:i;if(2200===n){-1===r&&(this._loopCount=0,this._setEndings(!0,!0,!1));t:{if(i>=e)i=e;else{if(!(i<0)){this.time=i;break t}i=0}this.clampWhenFinished?this.paused=!0:this.enabled=!1,this.time=i,this._mixer.dispatchEvent({type:"finished",action:this,direction:t<0?-1:1})}}else{if(-1===r&&(t>=0?(r=0,this._setEndings(!0,0===this.repetitions,o)):this._setEndings(0===this.repetitions,!0,o)),i>=e||i<0){const n=Math.floor(i/e);i-=e*n,r+=Math.abs(n);const s=this.repetitions-r;if(s<=0)this.clampWhenFinished?this.paused=!0:this.enabled=!1,i=t>0?e:0,this.time=i,this._mixer.dispatchEvent({type:"finished",action:this,direction:t>0?1:-1});else{if(1===s){const e=t<0;this._setEndings(e,!e,o)}else this._setEndings(!1,!1,o);this._loopCount=r,this.time=i,this._mixer.dispatchEvent({type:"loop",action:this,loopDelta:n})}}else this.time=i;if(o&&1==(1&r))return e-i}return i}_setEndings(t,e,n){const i=this._interpolantSettings;n?(i.endingStart=2401,i.endingEnd=2401):(i.endingStart=t?this.zeroSlopeAtStart?2401:2400:2402,i.endingEnd=e?this.zeroSlopeAtEnd?2401:2400:2402)}_scheduleFading(t,e,n){const i=this._mixer,r=i.time;let o=this._weightInterpolant;null===o&&(o=i._lendControlInterpolant(),this._weightInterpolant=o);const s=o.parameterPositions,a=o.sampleValues;return s[0]=r,a[0]=e,s[1]=r+t,a[1]=n,this}}function $c(t){this._root=t,this._initMemoryManager(),this._accuIndex=0,this.time=0,this.timeScale=1}$c.prototype=Object.assign(Object.create(ut.prototype),{constructor:$c,_bindAction:function(t,e){const n=t._localRoot||this._root,i=t._clip.tracks,r=i.length,o=t._propertyBindings,s=t._interpolants,a=n.uuid,c=this._bindingsByRootAndName;let l=c[a];void 0===l&&(l={},c[a]=l);for(let t=0;t!==r;++t){const r=i[t],c=r.name;let h=l[c];if(void 0!==h)o[t]=h;else{if(h=o[t],void 0!==h){null===h._cacheIndex&&(++h.referenceCount,this._addInactiveBinding(h,a,c));continue}const i=e&&e._propertyBindings[t].binding.parsedPath;h=new Bc(Yc.create(n,c,i),r.ValueTypeName,r.getValueSize()),++h.referenceCount,this._addInactiveBinding(h,a,c),o[t]=h}s[t].resultBuffer=h.buffer}},_activateAction:function(t){if(!this._isActiveAction(t)){if(null===t._cacheIndex){const e=(t._localRoot||this._root).uuid,n=t._clip.uuid,i=this._actionsByClip[n];this._bindAction(t,i&&i.knownActions[0]),this._addInactiveAction(t,n,e)}const e=t._propertyBindings;for(let t=0,n=e.length;t!==n;++t){const n=e[t];0==n.useCount++&&(this._lendBinding(n),n.saveOriginalState())}this._lendAction(t)}},_deactivateAction:function(t){if(this._isActiveAction(t)){const e=t._propertyBindings;for(let t=0,n=e.length;t!==n;++t){const n=e[t];0==--n.useCount&&(n.restoreOriginalState(),this._takeBackBinding(n))}this._takeBackAction(t)}},_initMemoryManager:function(){this._actions=[],this._nActiveActions=0,this._actionsByClip={},this._bindings=[],this._nActiveBindings=0,this._bindingsByRootAndName={},this._controlInterpolants=[],this._nActiveControlInterpolants=0;const t=this;this.stats={actions:{get total(){return t._actions.length},get inUse(){return t._nActiveActions}},bindings:{get total(){return t._bindings.length},get inUse(){return t._nActiveBindings}},controlInterpolants:{get total(){return t._controlInterpolants.length},get inUse(){return t._nActiveControlInterpolants}}}},_isActiveAction:function(t){const e=t._cacheIndex;return null!==e&&e<this._nActiveActions},_addInactiveAction:function(t,e,n){const i=this._actions,r=this._actionsByClip;let o=r[e];if(void 0===o)o={knownActions:[t],actionByRoot:{}},t._byClipCacheIndex=0,r[e]=o;else{const e=o.knownActions;t._byClipCacheIndex=e.length,e.push(t)}t._cacheIndex=i.length,i.push(t),o.actionByRoot[n]=t},_removeInactiveAction:function(t){const e=this._actions,n=e[e.length-1],i=t._cacheIndex;n._cacheIndex=i,e[i]=n,e.pop(),t._cacheIndex=null;const r=t._clip.uuid,o=this._actionsByClip,s=o[r],a=s.knownActions,c=a[a.length-1],l=t._byClipCacheIndex;c._byClipCacheIndex=l,a[l]=c,a.pop(),t._byClipCacheIndex=null;delete s.actionByRoot[(t._localRoot||this._root).uuid],0===a.length&&delete o[r],this._removeInactiveBindingsForAction(t)},_removeInactiveBindingsForAction:function(t){const e=t._propertyBindings;for(let t=0,n=e.length;t!==n;++t){const n=e[t];0==--n.referenceCount&&this._removeInactiveBinding(n)}},_lendAction:function(t){const e=this._actions,n=t._cacheIndex,i=this._nActiveActions++,r=e[i];t._cacheIndex=i,e[i]=t,r._cacheIndex=n,e[n]=r},_takeBackAction:function(t){const e=this._actions,n=t._cacheIndex,i=--this._nActiveActions,r=e[i];t._cacheIndex=i,e[i]=t,r._cacheIndex=n,e[n]=r},_addInactiveBinding:function(t,e,n){const i=this._bindingsByRootAndName,r=this._bindings;let o=i[e];void 0===o&&(o={},i[e]=o),o[n]=t,t._cacheIndex=r.length,r.push(t)},_removeInactiveBinding:function(t){const e=this._bindings,n=t.binding,i=n.rootNode.uuid,r=n.path,o=this._bindingsByRootAndName,s=o[i],a=e[e.length-1],c=t._cacheIndex;a._cacheIndex=c,e[c]=a,e.pop(),delete s[r],0===Object.keys(s).length&&delete o[i]},_lendBinding:function(t){const e=this._bindings,n=t._cacheIndex,i=this._nActiveBindings++,r=e[i];t._cacheIndex=i,e[i]=t,r._cacheIndex=n,e[n]=r},_takeBackBinding:function(t){const e=this._bindings,n=t._cacheIndex,i=--this._nActiveBindings,r=e[i];t._cacheIndex=i,e[i]=t,r._cacheIndex=n,e[n]=r},_lendControlInterpolant:function(){const t=this._controlInterpolants,e=this._nActiveControlInterpolants++;let n=t[e];return void 0===n&&(n=new da(new Float32Array(2),new Float32Array(2),1,this._controlInterpolantsResultBuffer),n.__cacheIndex=e,t[e]=n),n},_takeBackControlInterpolant:function(t){const e=this._controlInterpolants,n=t.__cacheIndex,i=--this._nActiveControlInterpolants,r=e[i];t.__cacheIndex=i,e[i]=t,r.__cacheIndex=n,e[n]=r},_controlInterpolantsResultBuffer:new Float32Array(1),clipAction:function(t,e,n){const i=e||this._root,r=i.uuid;let o="string"==typeof t?wa.findByName(i,t):t;const s=null!==o?o.uuid:t,a=this._actionsByClip[s];let c=null;if(void 0===n&&(n=null!==o?o.blendMode:2500),void 0!==a){const t=a.actionByRoot[r];if(void 0!==t&&t.blendMode===n)return t;c=a.knownActions[0],null===o&&(o=c._clip)}if(null===o)return null;const l=new Zc(this,o,e,n);return this._bindAction(l,c),this._addInactiveAction(l,s,r),l},existingAction:function(t,e){const n=e||this._root,i=n.uuid,r="string"==typeof t?wa.findByName(n,t):t,o=r?r.uuid:t,s=this._actionsByClip[o];return void 0!==s&&s.actionByRoot[i]||null},stopAllAction:function(){const t=this._actions;for(let e=this._nActiveActions-1;e>=0;--e)t[e].stop();return this},update:function(t){t*=this.timeScale;const e=this._actions,n=this._nActiveActions,i=this.time+=t,r=Math.sign(t),o=this._accuIndex^=1;for(let s=0;s!==n;++s){e[s]._update(i,t,r,o)}const s=this._bindings,a=this._nActiveBindings;for(let t=0;t!==a;++t)s[t].apply(o);return this},setTime:function(t){this.time=0;for(let t=0;t<this._actions.length;t++)this._actions[t].time=0;return this.update(t)},getRoot:function(){return this._root},uncacheClip:function(t){const e=this._actions,n=t.uuid,i=this._actionsByClip,r=i[n];if(void 0!==r){const t=r.knownActions;for(let n=0,i=t.length;n!==i;++n){const i=t[n];this._deactivateAction(i);const r=i._cacheIndex,o=e[e.length-1];i._cacheIndex=null,i._byClipCacheIndex=null,o._cacheIndex=r,e[r]=o,e.pop(),this._removeInactiveBindingsForAction(i)}delete i[n]}},uncacheRoot:function(t){const e=t.uuid,n=this._actionsByClip;for(const t in n){const i=n[t].actionByRoot[e];void 0!==i&&(this._deactivateAction(i),this._removeInactiveAction(i))}const i=this._bindingsByRootAndName[e];if(void 0!==i)for(const t in i){const e=i[t];e.restoreOriginalState(),this._removeInactiveBinding(e)}},uncacheAction:function(t,e){const n=this.existingAction(t,e);null!==n&&(this._deactivateAction(n),this._removeInactiveAction(n))}});class Jc{constructor(t){"string"==typeof t&&(console.warn("THREE.Uniform: Type parameter is no longer needed."),t=arguments[1]),this.value=t}clone(){return new Jc(void 0===this.value.clone?this.value:this.value.clone())}}function Qc(t,e,n){lo.call(this,t,e),this.meshPerAttribute=n||1}function Kc(t,e,n,i,r){this.buffer=t,this.type=e,this.itemSize=n,this.elementSize=i,this.count=r,this.version=0}function tl(t,e,n,i){this.ray=new Qt(t,e),this.near=n||0,this.far=i||1/0,this.camera=null,this.layers=new he,this.params={Mesh:{},Line:{threshold:1},LOD:{},Points:{threshold:1},Sprite:{}},Object.defineProperties(this.params,{PointCloud:{get:function(){return console.warn("THREE.Raycaster: params.PointCloud has been renamed to params.Points."),this.Points}}})}function el(t,e){return t.distance-e.distance}function nl(t,e,n,i){if(t.layers.test(e.layers)&&t.raycast(e,n),!0===i){const i=t.children;for(let t=0,r=i.length;t<r;t++)nl(i[t],e,n,!0)}}Qc.prototype=Object.assign(Object.create(lo.prototype),{constructor:Qc,isInstancedInterleavedBuffer:!0,copy:function(t){return lo.prototype.copy.call(this,t),this.meshPerAttribute=t.meshPerAttribute,this},clone:function(t){const e=lo.prototype.clone.call(this,t);return e.meshPerAttribute=this.meshPerAttribute,e},toJSON:function(t){const e=lo.prototype.toJSON.call(this,t);return e.isInstancedInterleavedBuffer=!0,e.meshPerAttribute=this.meshPerAttribute,e}}),Object.defineProperty(Kc.prototype,"needsUpdate",{set:function(t){!0===t&&this.version++}}),Object.assign(Kc.prototype,{isGLBufferAttribute:!0,setBuffer:function(t){return this.buffer=t,this},setType:function(t,e){return this.type=t,this.elementSize=e,this},setItemSize:function(t){return this.itemSize=t,this},setCount:function(t){return this.count=t,this}}),Object.assign(tl.prototype,{set:function(t,e){this.ray.set(t,e)},setFromCamera:function(t,e){e&&e.isPerspectiveCamera?(this.ray.origin.setFromMatrixPosition(e.matrixWorld),this.ray.direction.set(t.x,t.y,.5).unproject(e).sub(this.ray.origin).normalize(),this.camera=e):e&&e.isOrthographicCamera?(this.ray.origin.set(t.x,t.y,(e.near+e.far)/(e.near-e.far)).unproject(e),this.ray.direction.set(0,0,-1).transformDirection(e.matrixWorld),this.camera=e):console.error("THREE.Raycaster: Unsupported camera type.")},intersectObject:function(t,e,n){const i=n||[];return nl(t,this,i,e),i.sort(el),i},intersectObjects:function(t,e,n){const i=n||[];if(!1===Array.isArray(t))return console.warn("THREE.Raycaster.intersectObjects: objects is not an Array."),i;for(let n=0,r=t.length;n<r;n++)nl(t[n],this,i,e);return i.sort(el),i}});class il{constructor(t=1,e=0,n=0){return this.radius=t,this.phi=e,this.theta=n,this}set(t,e,n){return this.radius=t,this.phi=e,this.theta=n,this}clone(){return(new this.constructor).copy(this)}copy(t){return this.radius=t.radius,this.phi=t.phi,this.theta=t.theta,this}makeSafe(){return this.phi=Math.max(1e-6,Math.min(Math.PI-1e-6,this.phi)),this}setFromVector3(t){return this.setFromCartesianCoords(t.x,t.y,t.z)}setFromCartesianCoords(t,e,n){return this.radius=Math.sqrt(t*t+e*e+n*n),0===this.radius?(this.theta=0,this.phi=0):(this.theta=Math.atan2(t,n),this.phi=Math.acos(ft.clamp(e/this.radius,-1,1))),this}}const rl=new mt;const ol=new Et,sl=new Et;function al(t){Se.call(this),this.material=t,this.render=function(){},this.hasPositions=!1,this.hasNormals=!1,this.hasColors=!1,this.hasUvs=!1,this.positionArray=null,this.normalArray=null,this.colorArray=null,this.uvArray=null,this.count=0}al.prototype=Object.create(Se.prototype),al.prototype.constructor=al,al.prototype.isImmediateRenderObject=!0;const cl=new Et,ll=new Kt,hl=new Kt;Math.pow(2,8);const ul=[.125,.215,.35,.446,.526,.582],dl=5+ul.length,{_lodPlanes:pl,_sizeLods:fl,_sigmas:ml}=gl();Math.sqrt(5);function gl(){const t=[],e=[],n=[];let i=8;for(let r=0;r<dl;r++){const o=Math.pow(2,i);e.push(o);let s=1/o;r>4?s=ul[r-8+4-1]:0==r&&(s=0),n.push(s);const a=1/(o-1),c=-a/2,l=1+a/2,h=[c,c,l,c,l,l,c,c,l,l,c,l],u=6,d=6,p=3,f=2,m=1,g=new Float32Array(p*d*u),v=new Float32Array(f*d*u),y=new Float32Array(m*d*u);for(let t=0;t<u;t++){const e=t%3*2/3-1,n=t>2?0:-1,i=[e,n,0,e+2/3,n,0,e+2/3,n+1,0,e,n,0,e+2/3,n+1,0,e,n+1,0];g.set(i,p*d*t),v.set(h,f*d*t);const r=[t,t,t,t,t,t];y.set(r,m*d*t)}const x=new xn;x.setAttribute("position",new Ke(g,p)),x.setAttribute("uv",new Ke(v,f)),x.setAttribute("faceIndex",new Ke(y,m)),t.push(x),i>4&&i--}return{_lodPlanes:t,_sizeLods:e,_sigmas:n}}function vl(t){console.warn("THREE.Spline has been removed. Use THREE.CatmullRomCurve3 instead."),ja.call(this,t),this.type="catmullrom"}za.create=function(t,e){return console.log("THREE.Curve.create() has been deprecated"),t.prototype=Object.create(za.prototype),t.prototype.constructor=t,t.prototype.getPoint=e,t},Object.assign(nc.prototype,{createPointsGeometry:function(t){console.warn("THREE.CurvePath: .createPointsGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.");const e=this.getPoints(t);return this.createGeometry(e)},createSpacedPointsGeometry:function(t){console.warn("THREE.CurvePath: .createSpacedPointsGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.");const e=this.getSpacedPoints(t);return this.createGeometry(e)},createGeometry:function(t){console.warn("THREE.CurvePath: .createGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.");const e=new fs;for(let n=0,i=t.length;n<i;n++){const i=t[n];e.vertices.push(new Et(i.x,i.y,i.z||0))}return e}}),Object.assign(ic.prototype,{fromPoints:function(t){return console.warn("THREE.Path: .fromPoints() has been renamed to .setFromPoints()."),this.setFromPoints(t)}}),Object.create(ja.prototype),Object.create(ja.prototype),vl.prototype=Object.create(ja.prototype),Object.assign(vl.prototype,{initFromArray:function(){console.error("THREE.Spline: .initFromArray() has been removed.")},getControlPointsArray:function(){console.error("THREE.Spline: .getControlPointsArray() has been removed.")},reparametrizeByArcLength:function(){console.error("THREE.Spline: .reparametrizeByArcLength() has been removed.")}}),class extends Jo{constructor(t,e,n,i){t=t||10,e=e||10,n=new qe(void 0!==n?n:4473924),i=new qe(void 0!==i?i:8947848);const r=e/2,o=t/e,s=t/2,a=[],c=[];for(let t=0,l=0,h=-s;t<=e;t++,h+=o){a.push(-s,0,h,s,0,h),a.push(h,0,-s,h,0,s);const e=t===r?n:i;e.toArray(c,l),l+=3,e.toArray(c,l),l+=3,e.toArray(c,l),l+=3,e.toArray(c,l),l+=3}const l=new xn;l.setAttribute("position",new cn(a,3)),l.setAttribute("color",new cn(c,3));super(l,new Go({vertexColors:!0,toneMapped:!1})),this.type="GridHelper"}}.prototype.setColors=function(){console.error("THREE.GridHelper: setColors() has been deprecated, pass them in the constructor instead.")},class extends Jo{constructor(t){const e=function t(e){const n=[];e&&e.isBone&&n.push(e);for(let i=0;i<e.children.length;i++)n.push.apply(n,t(e.children[i]));return n}(t),n=new xn,i=[],r=[],o=new qe(0,0,1),s=new qe(0,1,0);for(let t=0;t<e.length;t++){const n=e[t];n.parent&&n.parent.isBone&&(i.push(0,0,0),i.push(0,0,0),r.push(o.r,o.g,o.b),r.push(s.r,s.g,s.b))}n.setAttribute("position",new cn(i,3)),n.setAttribute("color",new cn(r,3));super(n,new Go({vertexColors:!0,depthTest:!1,depthWrite:!1,toneMapped:!1,transparent:!0})),this.type="SkeletonHelper",this.isSkeletonHelper=!0,this.root=t,this.bones=e,this.matrix=t.matrixWorld,this.matrixAutoUpdate=!1}updateMatrixWorld(t){const e=this.bones,n=this.geometry,i=n.getAttribute("position");hl.getInverse(this.root.matrixWorld);for(let t=0,n=0;t<e.length;t++){const r=e[t];r.parent&&r.parent.isBone&&(ll.multiplyMatrices(hl,r.matrixWorld),cl.setFromMatrixPosition(ll),i.setXYZ(n,cl.x,cl.y,cl.z),ll.multiplyMatrices(hl,r.parent.matrixWorld),cl.setFromMatrixPosition(ll),i.setXYZ(n+1,cl.x,cl.y,cl.z),n+=2)}n.getAttribute("position").needsUpdate=!0,super.updateMatrixWorld(t)}}.prototype.update=function(){console.error("THREE.SkeletonHelper: update() no longer needs to be called.")},Object.assign(Aa.prototype,{extractUrlBase:function(t){return console.warn("THREE.Loader: .extractUrlBase() has been deprecated. Use THREE.LoaderUtils.extractUrlBase() instead."),_c(t)}}),Aa.Handlers={add:function(){console.error("THREE.Loader: Handlers.add() has been removed. Use LoadingManager.addHandler() instead.")},get:function(){console.error("THREE.Loader: Handlers.get() has been removed. Use LoadingManager.getHandler() instead.")}},Object.assign(class{constructor(t,e){Object.defineProperty(this,"isBox2",{value:!0}),this.min=void 0!==t?t:new mt(1/0,1/0),this.max=void 0!==e?e:new mt(-1/0,-1/0)}set(t,e){return this.min.copy(t),this.max.copy(e),this}setFromPoints(t){this.makeEmpty();for(let e=0,n=t.length;e<n;e++)this.expandByPoint(t[e]);return this}setFromCenterAndSize(t,e){const n=rl.copy(e).multiplyScalar(.5);return this.min.copy(t).sub(n),this.max.copy(t).add(n),this}clone(){return(new this.constructor).copy(this)}copy(t){return this.min.copy(t.min),this.max.copy(t.max),this}makeEmpty(){return this.min.x=this.min.y=1/0,this.max.x=this.max.y=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y}getCenter(t){return void 0===t&&(console.warn("THREE.Box2: .getCenter() target is now required"),t=new mt),this.isEmpty()?t.set(0,0):t.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(t){return void 0===t&&(console.warn("THREE.Box2: .getSize() target is now required"),t=new mt),this.isEmpty()?t.set(0,0):t.subVectors(this.max,this.min)}expandByPoint(t){return this.min.min(t),this.max.max(t),this}expandByVector(t){return this.min.sub(t),this.max.add(t),this}expandByScalar(t){return this.min.addScalar(-t),this.max.addScalar(t),this}containsPoint(t){return!(t.x<this.min.x||t.x>this.max.x||t.y<this.min.y||t.y>this.max.y)}containsBox(t){return this.min.x<=t.min.x&&t.max.x<=this.max.x&&this.min.y<=t.min.y&&t.max.y<=this.max.y}getParameter(t,e){return void 0===e&&(console.warn("THREE.Box2: .getParameter() target is now required"),e=new mt),e.set((t.x-this.min.x)/(this.max.x-this.min.x),(t.y-this.min.y)/(this.max.y-this.min.y))}intersectsBox(t){return!(t.max.x<this.min.x||t.min.x>this.max.x||t.max.y<this.min.y||t.min.y>this.max.y)}clampPoint(t,e){return void 0===e&&(console.warn("THREE.Box2: .clampPoint() target is now required"),e=new mt),e.copy(t).clamp(this.min,this.max)}distanceToPoint(t){return rl.copy(t).clamp(this.min,this.max).sub(t).length()}intersect(t){return this.min.max(t.min),this.max.min(t.max),this}union(t){return this.min.min(t.min),this.max.max(t.max),this}translate(t){return this.min.add(t),this.max.add(t),this}equals(t){return t.min.equals(this.min)&&t.max.equals(this.max)}}.prototype,{center:function(t){return console.warn("THREE.Box2: .center() has been renamed to .getCenter()."),this.getCenter(t)},empty:function(){return console.warn("THREE.Box2: .empty() has been renamed to .isEmpty()."),this.isEmpty()},isIntersectionBox:function(t){return console.warn("THREE.Box2: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(t)},size:function(t){return console.warn("THREE.Box2: .size() has been renamed to .getSize()."),this.getSize(t)}}),Object.assign(Lt.prototype,{center:function(t){return console.warn("THREE.Box3: .center() has been renamed to .getCenter()."),this.getCenter(t)},empty:function(){return console.warn("THREE.Box3: .empty() has been renamed to .isEmpty()."),this.isEmpty()},isIntersectionBox:function(t){return console.warn("THREE.Box3: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(t)},isIntersectionSphere:function(t){return console.warn("THREE.Box3: .isIntersectionSphere() has been renamed to .intersectsSphere()."),this.intersectsSphere(t)},size:function(t){return console.warn("THREE.Box3: .size() has been renamed to .getSize()."),this.getSize(t)}}),Object.assign(jt.prototype,{empty:function(){return console.warn("THREE.Sphere: .empty() has been renamed to .isEmpty()."),this.isEmpty()}}),Kn.prototype.setFromMatrix=function(t){return console.warn("THREE.Frustum: .setFromMatrix() has been renamed to .setFromProjectionMatrix()."),this.setFromProjectionMatrix(t)},class{constructor(t,e){this.start=void 0!==t?t:new Et,this.end=void 0!==e?e:new Et}set(t,e){return this.start.copy(t),this.end.copy(e),this}clone(){return(new this.constructor).copy(this)}copy(t){return this.start.copy(t.start),this.end.copy(t.end),this}getCenter(t){return void 0===t&&(console.warn("THREE.Line3: .getCenter() target is now required"),t=new Et),t.addVectors(this.start,this.end).multiplyScalar(.5)}delta(t){return void 0===t&&(console.warn("THREE.Line3: .delta() target is now required"),t=new Et),t.subVectors(this.end,this.start)}distanceSq(){return this.start.distanceToSquared(this.end)}distance(){return this.start.distanceTo(this.end)}at(t,e){return void 0===e&&(console.warn("THREE.Line3: .at() target is now required"),e=new Et),this.delta(e).multiplyScalar(t).add(this.start)}closestPointToPointParameter(t,e){ol.subVectors(t,this.start),sl.subVectors(this.end,this.start);const n=sl.dot(sl);let i=sl.dot(ol)/n;return e&&(i=ft.clamp(i,0,1)),i}closestPointToPoint(t,e,n){const i=this.closestPointToPointParameter(t,e);return void 0===n&&(console.warn("THREE.Line3: .closestPointToPoint() target is now required"),n=new Et),this.delta(n).multiplyScalar(i).add(this.start)}applyMatrix4(t){return this.start.applyMatrix4(t),this.end.applyMatrix4(t),this}equals(t){return t.start.equals(this.start)&&t.end.equals(this.end)}}.prototype.center=function(t){return console.warn("THREE.Line3: .center() has been renamed to .getCenter()."),this.getCenter(t)},Object.assign(ft,{random16:function(){return console.warn("THREE.Math: .random16() has been deprecated. Use Math.random() instead."),Math.random()},nearestPowerOfTwo:function(t){return console.warn("THREE.Math: .nearestPowerOfTwo() has been renamed to .floorPowerOfTwo()."),ft.floorPowerOfTwo(t)},nextPowerOfTwo:function(t){return console.warn("THREE.Math: .nextPowerOfTwo() has been renamed to .ceilPowerOfTwo()."),ft.ceilPowerOfTwo(t)}}),Object.assign(gt.prototype,{flattenToArrayOffset:function(t,e){return console.warn("THREE.Matrix3: .flattenToArrayOffset() has been deprecated. Use .toArray() instead."),this.toArray(t,e)},multiplyVector3:function(t){return console.warn("THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead."),t.applyMatrix3(this)},multiplyVector3Array:function(){console.error("THREE.Matrix3: .multiplyVector3Array() has been removed.")},applyToBufferAttribute:function(t){return console.warn("THREE.Matrix3: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix3( matrix ) instead."),t.applyMatrix3(this)},applyToVector3Array:function(){console.error("THREE.Matrix3: .applyToVector3Array() has been removed.")}}),Object.assign(Kt.prototype,{extractPosition:function(t){return console.warn("THREE.Matrix4: .extractPosition() has been renamed to .copyPosition()."),this.copyPosition(t)},flattenToArrayOffset:function(t,e){return console.warn("THREE.Matrix4: .flattenToArrayOffset() has been deprecated. Use .toArray() instead."),this.toArray(t,e)},getPosition:function(){return console.warn("THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead."),(new Et).setFromMatrixColumn(this,3)},setRotationFromQuaternion:function(t){return console.warn("THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion()."),this.makeRotationFromQuaternion(t)},multiplyToArray:function(){console.warn("THREE.Matrix4: .multiplyToArray() has been removed.")},multiplyVector3:function(t){return console.warn("THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) instead."),t.applyMatrix4(this)},multiplyVector4:function(t){return console.warn("THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead."),t.applyMatrix4(this)},multiplyVector3Array:function(){console.error("THREE.Matrix4: .multiplyVector3Array() has been removed.")},rotateAxis:function(t){console.warn("THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead."),t.transformDirection(this)},crossVector:function(t){return console.warn("THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead."),t.applyMatrix4(this)},translate:function(){console.error("THREE.Matrix4: .translate() has been removed.")},rotateX:function(){console.error("THREE.Matrix4: .rotateX() has been removed.")},rotateY:function(){console.error("THREE.Matrix4: .rotateY() has been removed.")},rotateZ:function(){console.error("THREE.Matrix4: .rotateZ() has been removed.")},rotateByAxis:function(){console.error("THREE.Matrix4: .rotateByAxis() has been removed.")},applyToBufferAttribute:function(t){return console.warn("THREE.Matrix4: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix4( matrix ) instead."),t.applyMatrix4(this)},applyToVector3Array:function(){console.error("THREE.Matrix4: .applyToVector3Array() has been removed.")},makeFrustum:function(t,e,n,i,r,o){return console.warn("THREE.Matrix4: .makeFrustum() has been removed. Use .makePerspective( left, right, top, bottom, near, far ) instead."),this.makePerspective(t,e,i,n,r,o)}}),Le.prototype.isIntersectionLine=function(t){return console.warn("THREE.Plane: .isIntersectionLine() has been renamed to .intersectsLine()."),this.intersectsLine(t)},St.prototype.multiplyVector3=function(t){return console.warn("THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead."),t.applyQuaternion(this)},Object.assign(Qt.prototype,{isIntersectionBox:function(t){return console.warn("THREE.Ray: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(t)},isIntersectionPlane:function(t){return console.warn("THREE.Ray: .isIntersectionPlane() has been renamed to .intersectsPlane()."),this.intersectsPlane(t)},isIntersectionSphere:function(t){return console.warn("THREE.Ray: .isIntersectionSphere() has been renamed to .intersectsSphere()."),this.intersectsSphere(t)}}),Object.assign(He.prototype,{area:function(){return console.warn("THREE.Triangle: .area() has been renamed to .getArea()."),this.getArea()},barycoordFromPoint:function(t,e){return console.warn("THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord()."),this.getBarycoord(t,e)},midpoint:function(t){return console.warn("THREE.Triangle: .midpoint() has been renamed to .getMidpoint()."),this.getMidpoint(t)},normal:function(t){return console.warn("THREE.Triangle: .normal() has been renamed to .getNormal()."),this.getNormal(t)},plane:function(t){return console.warn("THREE.Triangle: .plane() has been renamed to .getPlane()."),this.getPlane(t)}}),Object.assign(He,{barycoordFromPoint:function(t,e,n,i,r){return console.warn("THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord()."),He.getBarycoord(t,e,n,i,r)},normal:function(t,e,n,i){return console.warn("THREE.Triangle: .normal() has been renamed to .getNormal()."),He.getNormal(t,e,n,i)}}),Object.assign(rc.prototype,{extractAllPoints:function(t){return console.warn("THREE.Shape: .extractAllPoints() has been removed. Use .extractPoints() instead."),this.extractPoints(t)},extrude:function(t){return console.warn("THREE.Shape: .extrude() has been removed. Use ExtrudeGeometry() instead."),new Ws(this,t)},makeGeometry:function(t){return console.warn("THREE.Shape: .makeGeometry() has been removed. Use ShapeGeometry() instead."),new Zs(this,t)}}),Object.assign(mt.prototype,{fromAttribute:function(t,e,n){return console.warn("THREE.Vector2: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(t,e,n)},distanceToManhattan:function(t){return console.warn("THREE.Vector2: .distanceToManhattan() has been renamed to .manhattanDistanceTo()."),this.manhattanDistanceTo(t)},lengthManhattan:function(){return console.warn("THREE.Vector2: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()}}),Object.assign(Et.prototype,{setEulerFromRotationMatrix:function(){console.error("THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.")},setEulerFromQuaternion:function(){console.error("THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.")},getPositionFromMatrix:function(t){return console.warn("THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition()."),this.setFromMatrixPosition(t)},getScaleFromMatrix:function(t){return console.warn("THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale()."),this.setFromMatrixScale(t)},getColumnFromMatrix:function(t,e){return console.warn("THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn()."),this.setFromMatrixColumn(e,t)},applyProjection:function(t){return console.warn("THREE.Vector3: .applyProjection() has been removed. Use .applyMatrix4( m ) instead."),this.applyMatrix4(t)},fromAttribute:function(t,e,n){return console.warn("THREE.Vector3: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(t,e,n)},distanceToManhattan:function(t){return console.warn("THREE.Vector3: .distanceToManhattan() has been renamed to .manhattanDistanceTo()."),this.manhattanDistanceTo(t)},lengthManhattan:function(){return console.warn("THREE.Vector3: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()}}),Object.assign(bt.prototype,{fromAttribute:function(t,e,n){return console.warn("THREE.Vector4: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(t,e,n)},lengthManhattan:function(){return console.warn("THREE.Vector4: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()}}),Object.assign(fs.prototype,{computeTangents:function(){console.error("THREE.Geometry: .computeTangents() has been removed.")},computeLineDistances:function(){console.error("THREE.Geometry: .computeLineDistances() has been removed. Use THREE.Line.computeLineDistances() instead.")},applyMatrix:function(t){return console.warn("THREE.Geometry: .applyMatrix() has been renamed to .applyMatrix4()."),this.applyMatrix4(t)}}),Object.assign(Se.prototype,{getChildByName:function(t){return console.warn("THREE.Object3D: .getChildByName() has been renamed to .getObjectByName()."),this.getObjectByName(t)},renderDepth:function(){console.warn("THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.")},translate:function(t,e){return console.warn("THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead."),this.translateOnAxis(e,t)},getWorldRotation:function(){console.error("THREE.Object3D: .getWorldRotation() has been removed. Use THREE.Object3D.getWorldQuaternion( target ) instead.")},applyMatrix:function(t){return console.warn("THREE.Object3D: .applyMatrix() has been renamed to .applyMatrix4()."),this.applyMatrix4(t)}}),Object.defineProperties(Se.prototype,{eulerOrder:{get:function(){return console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."),this.rotation.order},set:function(t){console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."),this.rotation.order=t}},useQuaternion:{get:function(){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")},set:function(){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")}}}),Object.assign(Un.prototype,{setDrawMode:function(){console.error("THREE.Mesh: .setDrawMode() has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.")}}),Object.defineProperties(Un.prototype,{drawMode:{get:function(){return console.error("THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode."),0},set:function(){console.error("THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.")}}}),Object.defineProperties(Co.prototype,{objects:{get:function(){return console.warn("THREE.LOD: .objects has been renamed to .levels."),this.levels}}}),Object.defineProperty(Do.prototype,"useVertexTexture",{get:function(){console.warn("THREE.Skeleton: useVertexTexture has been removed.")},set:function(){console.warn("THREE.Skeleton: useVertexTexture has been removed.")}}),No.prototype.initBones=function(){console.error("THREE.SkinnedMesh: initBones() has been removed.")},Object.defineProperty(za.prototype,"__arcLengthDivisions",{get:function(){return console.warn("THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions."),this.arcLengthDivisions},set:function(t){console.warn("THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions."),this.arcLengthDivisions=t}}),qn.prototype.setLens=function(t,e){console.warn("THREE.PerspectiveCamera.setLens is deprecated. Use .setFocalLength and .filmGauge for a photographic setup."),void 0!==e&&(this.filmGauge=e),this.setFocalLength(t)},Object.defineProperties(oc.prototype,{onlyShadow:{set:function(){console.warn("THREE.Light: .onlyShadow has been removed.")}},shadowCameraFov:{set:function(t){console.warn("THREE.Light: .shadowCameraFov is now .shadow.camera.fov."),this.shadow.camera.fov=t}},shadowCameraLeft:{set:function(t){console.warn("THREE.Light: .shadowCameraLeft is now .shadow.camera.left."),this.shadow.camera.left=t}},shadowCameraRight:{set:function(t){console.warn("THREE.Light: .shadowCameraRight is now .shadow.camera.right."),this.shadow.camera.right=t}},shadowCameraTop:{set:function(t){console.warn("THREE.Light: .shadowCameraTop is now .shadow.camera.top."),this.shadow.camera.top=t}},shadowCameraBottom:{set:function(t){console.warn("THREE.Light: .shadowCameraBottom is now .shadow.camera.bottom."),this.shadow.camera.bottom=t}},shadowCameraNear:{set:function(t){console.warn("THREE.Light: .shadowCameraNear is now .shadow.camera.near."),this.shadow.camera.near=t}},shadowCameraFar:{set:function(t){console.warn("THREE.Light: .shadowCameraFar is now .shadow.camera.far."),this.shadow.camera.far=t}},shadowCameraVisible:{set:function(){console.warn("THREE.Light: .shadowCameraVisible has been removed. Use new THREE.CameraHelper( light.shadow.camera ) instead.")}},shadowBias:{set:function(t){console.warn("THREE.Light: .shadowBias is now .shadow.bias."),this.shadow.bias=t}},shadowDarkness:{set:function(){console.warn("THREE.Light: .shadowDarkness has been removed.")}},shadowMapWidth:{set:function(t){console.warn("THREE.Light: .shadowMapWidth is now .shadow.mapSize.width."),this.shadow.mapSize.width=t}},shadowMapHeight:{set:function(t){console.warn("THREE.Light: .shadowMapHeight is now .shadow.mapSize.height."),this.shadow.mapSize.height=t}}}),Object.defineProperties(Ke.prototype,{length:{get:function(){return console.warn("THREE.BufferAttribute: .length has been deprecated. Use .count instead."),this.array.length}},dynamic:{get:function(){return console.warn("THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead."),35048===this.usage},set:function(){console.warn("THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead."),this.setUsage(35048)}}}),Object.assign(Ke.prototype,{setDynamic:function(t){return console.warn("THREE.BufferAttribute: .setDynamic() has been deprecated. Use .setUsage() instead."),this.setUsage(!0===t?35048:35044),this},copyIndicesArray:function(){console.error("THREE.BufferAttribute: .copyIndicesArray() has been removed.")},setArray:function(){console.error("THREE.BufferAttribute: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers")}}),Object.assign(xn.prototype,{addIndex:function(t){console.warn("THREE.BufferGeometry: .addIndex() has been renamed to .setIndex()."),this.setIndex(t)},addAttribute:function(t,e){return console.warn("THREE.BufferGeometry: .addAttribute() has been renamed to .setAttribute()."),e&&e.isBufferAttribute||e&&e.isInterleavedBufferAttribute?"index"===t?(console.warn("THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute."),this.setIndex(e),this):this.setAttribute(t,e):(console.warn("THREE.BufferGeometry: .addAttribute() now expects ( name, attribute )."),this.setAttribute(t,new Ke(arguments[1],arguments[2])))},addDrawCall:function(t,e,n){void 0!==n&&console.warn("THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset."),console.warn("THREE.BufferGeometry: .addDrawCall() is now .addGroup()."),this.addGroup(t,e)},clearDrawCalls:function(){console.warn("THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups()."),this.clearGroups()},computeTangents:function(){console.warn("THREE.BufferGeometry: .computeTangents() has been removed.")},computeOffsets:function(){console.warn("THREE.BufferGeometry: .computeOffsets() has been removed.")},removeAttribute:function(t){return console.warn("THREE.BufferGeometry: .removeAttribute() has been renamed to .deleteAttribute()."),this.deleteAttribute(t)},applyMatrix:function(t){return console.warn("THREE.BufferGeometry: .applyMatrix() has been renamed to .applyMatrix4()."),this.applyMatrix4(t)}}),Object.defineProperties(xn.prototype,{drawcalls:{get:function(){return console.error("THREE.BufferGeometry: .drawcalls has been renamed to .groups."),this.groups}},offsets:{get:function(){return console.warn("THREE.BufferGeometry: .offsets has been renamed to .groups."),this.groups}}}),Object.defineProperties(bc.prototype,{maxInstancedCount:{get:function(){return console.warn("THREE.InstancedBufferGeometry: .maxInstancedCount has been renamed to .instanceCount."),this.instanceCount},set:function(t){console.warn("THREE.InstancedBufferGeometry: .maxInstancedCount has been renamed to .instanceCount."),this.instanceCount=t}}}),Object.defineProperties(tl.prototype,{linePrecision:{get:function(){return console.warn("THREE.Raycaster: .linePrecision has been deprecated. Use .params.Line.threshold instead."),this.params.Line.threshold},set:function(t){console.warn("THREE.Raycaster: .linePrecision has been deprecated. Use .params.Line.threshold instead."),this.params.Line.threshold=t}}}),Object.defineProperties(lo.prototype,{dynamic:{get:function(){return console.warn("THREE.InterleavedBuffer: .length has been deprecated. Use .usage instead."),35048===this.usage},set:function(t){console.warn("THREE.InterleavedBuffer: .length has been deprecated. Use .usage instead."),this.setUsage(t)}}}),Object.assign(lo.prototype,{setDynamic:function(t){return console.warn("THREE.InterleavedBuffer: .setDynamic() has been deprecated. Use .setUsage() instead."),this.setUsage(!0===t?35048:35044),this},setArray:function(){console.error("THREE.InterleavedBuffer: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers")}}),Object.assign(Vs.prototype,{getArrays:function(){console.error("THREE.ExtrudeBufferGeometry: .getArrays() has been removed.")},addShapeList:function(){console.error("THREE.ExtrudeBufferGeometry: .addShapeList() has been removed.")},addShape:function(){console.error("THREE.ExtrudeBufferGeometry: .addShape() has been removed.")}}),Object.assign(co.prototype,{dispose:function(){console.error("THREE.Scene: .dispose() has been removed.")}}),Object.defineProperties(Jc.prototype,{dynamic:{set:function(){console.warn("THREE.Uniform: .dynamic has been removed. Use object.onBeforeRender() instead.")}},onUpdate:{value:function(){return console.warn("THREE.Uniform: .onUpdate() has been removed. Use object.onBeforeRender() instead."),this}}}),Object.defineProperties(Ze.prototype,{wrapAround:{get:function(){console.warn("THREE.Material: .wrapAround has been removed.")},set:function(){console.warn("THREE.Material: .wrapAround has been removed.")}},overdraw:{get:function(){console.warn("THREE.Material: .overdraw has been removed.")},set:function(){console.warn("THREE.Material: .overdraw has been removed.")}},wrapRGB:{get:function(){return console.warn("THREE.Material: .wrapRGB has been removed."),new qe}},shading:{get:function(){console.error("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead.")},set:function(t){console.warn("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead."),this.flatShading=1===t}},stencilMask:{get:function(){return console.warn("THREE."+this.type+": .stencilMask has been removed. Use .stencilFuncMask instead."),this.stencilFuncMask},set:function(t){console.warn("THREE."+this.type+": .stencilMask has been removed. Use .stencilFuncMask instead."),this.stencilFuncMask=t}}}),Object.defineProperties(na.prototype,{metal:{get:function(){return console.warn("THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead."),!1},set:function(){console.warn("THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead")}}}),Object.defineProperties(ea.prototype,{transparency:{get:function(){return console.warn("THREE.MeshPhysicalMaterial: .transparency has been renamed to .transmission."),this.transmission},set:function(t){console.warn("THREE.MeshPhysicalMaterial: .transparency has been renamed to .transmission."),this.transmission=t}}}),Object.defineProperties(jn.prototype,{derivatives:{get:function(){return console.warn("THREE.ShaderMaterial: .derivatives has been moved to .extensions.derivatives."),this.extensions.derivatives},set:function(t){console.warn("THREE. ShaderMaterial: .derivatives has been moved to .extensions.derivatives."),this.extensions.derivatives=t}}}),Object.assign(so.prototype,{clearTarget:function(t,e,n,i){console.warn("THREE.WebGLRenderer: .clearTarget() has been deprecated. Use .setRenderTarget() and .clear() instead."),this.setRenderTarget(t),this.clear(e,n,i)},animate:function(t){console.warn("THREE.WebGLRenderer: .animate() is now .setAnimationLoop()."),this.setAnimationLoop(t)},getCurrentRenderTarget:function(){return console.warn("THREE.WebGLRenderer: .getCurrentRenderTarget() is now .getRenderTarget()."),this.getRenderTarget()},getMaxAnisotropy:function(){return console.warn("THREE.WebGLRenderer: .getMaxAnisotropy() is now .capabilities.getMaxAnisotropy()."),this.capabilities.getMaxAnisotropy()},getPrecision:function(){return console.warn("THREE.WebGLRenderer: .getPrecision() is now .capabilities.precision."),this.capabilities.precision},resetGLState:function(){return console.warn("THREE.WebGLRenderer: .resetGLState() is now .state.reset()."),this.state.reset()},supportsFloatTextures:function(){return console.warn("THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( 'OES_texture_float' )."),this.extensions.get("OES_texture_float")},supportsHalfFloatTextures:function(){return console.warn("THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( 'OES_texture_half_float' )."),this.extensions.get("OES_texture_half_float")},supportsStandardDerivatives:function(){return console.warn("THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( 'OES_standard_derivatives' )."),this.extensions.get("OES_standard_derivatives")},supportsCompressedTextureS3TC:function(){return console.warn("THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( 'WEBGL_compressed_texture_s3tc' )."),this.extensions.get("WEBGL_compressed_texture_s3tc")},supportsCompressedTexturePVRTC:function(){return console.warn("THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( 'WEBGL_compressed_texture_pvrtc' )."),this.extensions.get("WEBGL_compressed_texture_pvrtc")},supportsBlendMinMax:function(){return console.warn("THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( 'EXT_blend_minmax' )."),this.extensions.get("EXT_blend_minmax")},supportsVertexTextures:function(){return console.warn("THREE.WebGLRenderer: .supportsVertexTextures() is now .capabilities.vertexTextures."),this.capabilities.vertexTextures},supportsInstancedArrays:function(){return console.warn("THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( 'ANGLE_instanced_arrays' )."),this.extensions.get("ANGLE_instanced_arrays")},enableScissorTest:function(t){console.warn("THREE.WebGLRenderer: .enableScissorTest() is now .setScissorTest()."),this.setScissorTest(t)},initMaterial:function(){console.warn("THREE.WebGLRenderer: .initMaterial() has been removed.")},addPrePlugin:function(){console.warn("THREE.WebGLRenderer: .addPrePlugin() has been removed.")},addPostPlugin:function(){console.warn("THREE.WebGLRenderer: .addPostPlugin() has been removed.")},updateShadowMap:function(){console.warn("THREE.WebGLRenderer: .updateShadowMap() has been removed.")},setFaceCulling:function(){console.warn("THREE.WebGLRenderer: .setFaceCulling() has been removed.")},allocTextureUnit:function(){console.warn("THREE.WebGLRenderer: .allocTextureUnit() has been removed.")},setTexture:function(){console.warn("THREE.WebGLRenderer: .setTexture() has been removed.")},setTexture2D:function(){console.warn("THREE.WebGLRenderer: .setTexture2D() has been removed.")},setTextureCube:function(){console.warn("THREE.WebGLRenderer: .setTextureCube() has been removed.")},getActiveMipMapLevel:function(){return console.warn("THREE.WebGLRenderer: .getActiveMipMapLevel() is now .getActiveMipmapLevel()."),this.getActiveMipmapLevel()}}),Object.defineProperties(so.prototype,{shadowMapEnabled:{get:function(){return this.shadowMap.enabled},set:function(t){console.warn("THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled."),this.shadowMap.enabled=t}},shadowMapType:{get:function(){return this.shadowMap.type},set:function(t){console.warn("THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type."),this.shadowMap.type=t}},shadowMapCullFace:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.")}},context:{get:function(){return console.warn("THREE.WebGLRenderer: .context has been removed. Use .getContext() instead."),this.getContext()}},vr:{get:function(){return console.warn("THREE.WebGLRenderer: .vr has been renamed to .xr"),this.xr}},gammaInput:{get:function(){return console.warn("THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead."),!1},set:function(){console.warn("THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead.")}},gammaOutput:{get:function(){return console.warn("THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead."),!1},set:function(t){console.warn("THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead."),this.outputEncoding=!0===t?3001:3e3}},toneMappingWhitePoint:{get:function(){return console.warn("THREE.WebGLRenderer: .toneMappingWhitePoint has been removed."),1},set:function(){console.warn("THREE.WebGLRenderer: .toneMappingWhitePoint has been removed.")}}}),Object.defineProperties(Jr.prototype,{cullFace:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.")}},renderReverseSided:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.")}},renderSingleSided:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.")}}}),Object.defineProperties(wt.prototype,{wrapS:{get:function(){return console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."),this.texture.wrapS},set:function(t){console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."),this.texture.wrapS=t}},wrapT:{get:function(){return console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."),this.texture.wrapT},set:function(t){console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."),this.texture.wrapT=t}},magFilter:{get:function(){return console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."),this.texture.magFilter},set:function(t){console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."),this.texture.magFilter=t}},minFilter:{get:function(){return console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."),this.texture.minFilter},set:function(t){console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."),this.texture.minFilter=t}},anisotropy:{get:function(){return console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."),this.texture.anisotropy},set:function(t){console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."),this.texture.anisotropy=t}},offset:{get:function(){return console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."),this.texture.offset},set:function(t){console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."),this.texture.offset=t}},repeat:{get:function(){return console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."),this.texture.repeat},set:function(t){console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."),this.texture.repeat=t}},format:{get:function(){return console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."),this.texture.format},set:function(t){console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."),this.texture.format=t}},type:{get:function(){return console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."),this.texture.type},set:function(t){console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."),this.texture.type=t}},generateMipmaps:{get:function(){return console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."),this.texture.generateMipmaps},set:function(t){console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."),this.texture.generateMipmaps=t}}}),Object.defineProperties(Uc.prototype,{load:{value:function(t){console.warn("THREE.Audio: .load has been deprecated. Use THREE.AudioLoader instead.");const e=this;return(new Nc).load(t,(function(t){e.setBuffer(t)})),this}},startTime:{set:function(){console.warn("THREE.Audio: .startTime is now .play( delay ).")}}}),class{constructor(t,e){this.analyser=t.context.createAnalyser(),this.analyser.fftSize=void 0!==e?e:2048,this.data=new Uint8Array(this.analyser.frequencyBinCount),t.getOutput().connect(this.analyser)}getFrequencyData(){return this.analyser.getByteFrequencyData(this.data),this.data}getAverageFrequency(){let t=0;const e=this.getFrequencyData();for(let n=0;n<e.length;n++)t+=e[n];return t/e.length}}.prototype.getData=function(){return console.warn("THREE.AudioAnalyser: .getData() is now .getFrequencyData()."),this.getFrequencyData()},Xn.prototype.updateCubeMap=function(t,e){return console.warn("THREE.CubeCamera: .updateCubeMap() is now .update()."),this.update(t,e)};yt.crossOrigin=void 0,yt.loadTexture=function(t,e,n,i){console.warn("THREE.ImageUtils.loadTexture has been deprecated. Use THREE.TextureLoader() instead.");const r=new Da;r.setCrossOrigin(this.crossOrigin);const o=r.load(t,n,void 0,i);return e&&(o.mapping=e),o},yt.loadTextureCube=function(t,e,n,i){console.warn("THREE.ImageUtils.loadTextureCube has been deprecated. Use THREE.CubeTextureLoader() instead.");const r=new Oa;r.setCrossOrigin(this.crossOrigin);const o=r.load(t,n,void 0,i);return e&&(o.mapping=e),o},yt.loadCompressedTexture=function(){console.error("THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.")},yt.loadCompressedTextureCube=function(){console.error("THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.")};"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:"121"}}));var yl=function(t,e){var n,i,r,o,s,a;void 0===e&&console.warn('THREE.OrbitControls: The second parameter "domElement" is now mandatory.'),e===document&&console.error('THREE.OrbitControls: "document" should not be used as the target "domElement". Please use "renderer.domElement" instead.'),this.object=t,this.domElement=e,this.enabled=!0,this.target=new Et,this.minDistance=0,this.maxDistance=1/0,this.minZoom=0,this.maxZoom=1/0,this.minPolarAngle=0,this.maxPolarAngle=Math.PI,this.minAzimuthAngle=-1/0,this.maxAzimuthAngle=1/0,this.enableDamping=!1,this.dampingFactor=.05,this.enableZoom=!0,this.zoomSpeed=1,this.enableRotate=!0,this.rotateSpeed=1,this.enablePan=!0,this.panSpeed=1,this.screenSpacePanning=!0,this.keyPanSpeed=7,this.autoRotate=!1,this.autoRotateSpeed=2,this.enableKeys=!0,this.keys={LEFT:37,UP:38,RIGHT:39,BOTTOM:40},this.mouseButtons={LEFT:rt,MIDDLE:ot,RIGHT:st},this.touches={ONE:at,TWO:lt},this.target0=this.target.clone(),this.position0=this.object.position.clone(),this.zoom0=this.object.zoom,this.getPolarAngle=function(){return m.phi},this.getAzimuthalAngle=function(){return m.theta},this.saveState=function(){c.target0.copy(c.target),c.position0.copy(c.object.position),c.zoom0=c.object.zoom},this.reset=function(){c.target.copy(c.target0),c.object.position.copy(c.position0),c.object.zoom=c.zoom0,c.object.updateProjectionMatrix(),c.dispatchEvent(l),c.update(),p=d.NONE},this.update=(n=new Et,i=(new St).setFromUnitVectors(t.up,new Et(0,1,0)),r=i.clone().inverse(),o=new Et,s=new St,a=2*Math.PI,function(){var t=c.object.position;n.copy(t).sub(c.target),n.applyQuaternion(i),m.setFromVector3(n),c.autoRotate&&p===d.NONE&&P(2*Math.PI/60/60*c.autoRotateSpeed),c.enableDamping?(m.theta+=g.theta*c.dampingFactor,m.phi+=g.phi*c.dampingFactor):(m.theta+=g.theta,m.phi+=g.phi);var e=c.minAzimuthAngle,h=c.maxAzimuthAngle;return isFinite(e)&&isFinite(h)&&(e<-Math.PI?e+=a:e>Math.PI&&(e-=a),h<-Math.PI?h+=a:h>Math.PI&&(h-=a),m.theta=e<h?Math.max(e,Math.min(h,m.theta)):m.theta>(e+h)/2?Math.max(e,m.theta):Math.min(h,m.theta)),m.phi=Math.max(c.minPolarAngle,Math.min(c.maxPolarAngle,m.phi)),m.makeSafe(),m.radius*=v,m.radius=Math.max(c.minDistance,Math.min(c.maxDistance,m.radius)),!0===c.enableDamping?c.target.addScaledVector(y,c.dampingFactor):c.target.add(y),n.setFromSpherical(m),n.applyQuaternion(r),t.copy(c.target).add(n),c.object.lookAt(c.target),!0===c.enableDamping?(g.theta*=1-c.dampingFactor,g.phi*=1-c.dampingFactor,y.multiplyScalar(1-c.dampingFactor)):(g.set(0,0,0),y.set(0,0,0)),v=1,!!(x||o.distanceToSquared(c.object.position)>f||8*(1-s.dot(c.object.quaternion))>f)&&(c.dispatchEvent(l),o.copy(c.object.position),s.copy(c.object.quaternion),x=!1,!0)}),this.dispose=function(){c.domElement.removeEventListener("contextmenu",tt,!1),c.domElement.removeEventListener("pointerdown",q,!1),c.domElement.removeEventListener("wheel",Z,!1),c.domElement.removeEventListener("touchstart",J,!1),c.domElement.removeEventListener("touchend",K,!1),c.domElement.removeEventListener("touchmove",Q,!1),c.domElement.ownerDocument.removeEventListener("pointermove",X,!1),c.domElement.ownerDocument.removeEventListener("pointerup",Y,!1),c.domElement.removeEventListener("keydown",$,!1)};var c=this,l={type:"change"},h={type:"start"},u={type:"end"},d={NONE:-1,ROTATE:0,DOLLY:1,PAN:2,TOUCH_ROTATE:3,TOUCH_PAN:4,TOUCH_DOLLY_PAN:5,TOUCH_DOLLY_ROTATE:6},p=d.NONE,f=1e-6,m=new il,g=new il,v=1,y=new Et,x=!1,_=new mt,b=new mt,w=new mt,M=new mt,S=new mt,E=new mt,T=new mt,A=new mt,L=new mt;function R(){return Math.pow(.95,c.zoomSpeed)}function P(t){g.theta-=t}function C(t){g.phi-=t}var N,O=(N=new Et,function(t,e){N.setFromMatrixColumn(e,0),N.multiplyScalar(-t),y.add(N)}),I=function(){var t=new Et;return function(e,n){!0===c.screenSpacePanning?t.setFromMatrixColumn(n,1):(t.setFromMatrixColumn(n,0),t.crossVectors(c.object.up,t)),t.multiplyScalar(e),y.add(t)}}(),D=function(){var t=new Et;return function(e,n){var i=c.domElement;if(c.object.isPerspectiveCamera){var r=c.object.position;t.copy(r).sub(c.target);var o=t.length();o*=Math.tan(c.object.fov/2*Math.PI/180),O(2*e*o/i.clientHeight,c.object.matrix),I(2*n*o/i.clientHeight,c.object.matrix)}else c.object.isOrthographicCamera?(O(e*(c.object.right-c.object.left)/c.object.zoom/i.clientWidth,c.object.matrix),I(n*(c.object.top-c.object.bottom)/c.object.zoom/i.clientHeight,c.object.matrix)):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - pan disabled."),c.enablePan=!1)}}();function z(t){c.object.isPerspectiveCamera?v/=t:c.object.isOrthographicCamera?(c.object.zoom=Math.max(c.minZoom,Math.min(c.maxZoom,c.object.zoom*t)),c.object.updateProjectionMatrix(),x=!0):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),c.enableZoom=!1)}function U(t){c.object.isPerspectiveCamera?v*=t:c.object.isOrthographicCamera?(c.object.zoom=Math.max(c.minZoom,Math.min(c.maxZoom,c.object.zoom/t)),c.object.updateProjectionMatrix(),x=!0):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),c.enableZoom=!1)}function B(t){_.set(t.clientX,t.clientY)}function H(t){M.set(t.clientX,t.clientY)}function F(t){if(1==t.touches.length)_.set(t.touches[0].pageX,t.touches[0].pageY);else{var e=.5*(t.touches[0].pageX+t.touches[1].pageX),n=.5*(t.touches[0].pageY+t.touches[1].pageY);_.set(e,n)}}function k(t){if(1==t.touches.length)M.set(t.touches[0].pageX,t.touches[0].pageY);else{var e=.5*(t.touches[0].pageX+t.touches[1].pageX),n=.5*(t.touches[0].pageY+t.touches[1].pageY);M.set(e,n)}}function G(t){var e=t.touches[0].pageX-t.touches[1].pageX,n=t.touches[0].pageY-t.touches[1].pageY,i=Math.sqrt(e*e+n*n);T.set(0,i)}function V(t){if(1==t.touches.length)b.set(t.touches[0].pageX,t.touches[0].pageY);else{var e=.5*(t.touches[0].pageX+t.touches[1].pageX),n=.5*(t.touches[0].pageY+t.touches[1].pageY);b.set(e,n)}w.subVectors(b,_).multiplyScalar(c.rotateSpeed);var i=c.domElement;P(2*Math.PI*w.x/i.clientHeight),C(2*Math.PI*w.y/i.clientHeight),_.copy(b)}function j(t){if(1==t.touches.length)S.set(t.touches[0].pageX,t.touches[0].pageY);else{var e=.5*(t.touches[0].pageX+t.touches[1].pageX),n=.5*(t.touches[0].pageY+t.touches[1].pageY);S.set(e,n)}E.subVectors(S,M).multiplyScalar(c.panSpeed),D(E.x,E.y),M.copy(S)}function W(t){var e=t.touches[0].pageX-t.touches[1].pageX,n=t.touches[0].pageY-t.touches[1].pageY,i=Math.sqrt(e*e+n*n);A.set(0,i),L.set(0,Math.pow(A.y/T.y,c.zoomSpeed)),z(L.y),T.copy(A)}function q(t){if(!1!==c.enabled)switch(t.pointerType){case"mouse":case"pen":!function(t){var e;switch(t.preventDefault(),c.domElement.focus?c.domElement.focus():window.focus(),t.button){case 0:e=c.mouseButtons.LEFT;break;case 1:e=c.mouseButtons.MIDDLE;break;case 2:e=c.mouseButtons.RIGHT;break;default:e=-1}switch(e){case ot:if(!1===c.enableZoom)return;!function(t){T.set(t.clientX,t.clientY)}(t),p=d.DOLLY;break;case rt:if(t.ctrlKey||t.metaKey||t.shiftKey){if(!1===c.enablePan)return;H(t),p=d.PAN}else{if(!1===c.enableRotate)return;B(t),p=d.ROTATE}break;case st:if(t.ctrlKey||t.metaKey||t.shiftKey){if(!1===c.enableRotate)return;B(t),p=d.ROTATE}else{if(!1===c.enablePan)return;H(t),p=d.PAN}break;default:p=d.NONE}p!==d.NONE&&(c.domElement.ownerDocument.addEventListener("pointermove",X,!1),c.domElement.ownerDocument.addEventListener("pointerup",Y,!1),c.dispatchEvent(h))}(t)}}function X(t){if(!1!==c.enabled)switch(t.pointerType){case"mouse":case"pen":!function(t){if(!1===c.enabled)return;switch(t.preventDefault(),p){case d.ROTATE:if(!1===c.enableRotate)return;!function(t){b.set(t.clientX,t.clientY),w.subVectors(b,_).multiplyScalar(c.rotateSpeed);var e=c.domElement;P(2*Math.PI*w.x/e.clientHeight),C(2*Math.PI*w.y/e.clientHeight),_.copy(b),c.update()}(t);break;case d.DOLLY:if(!1===c.enableZoom)return;!function(t){A.set(t.clientX,t.clientY),L.subVectors(A,T),L.y>0?z(R()):L.y<0&&U(R()),T.copy(A),c.update()}(t);break;case d.PAN:if(!1===c.enablePan)return;!function(t){S.set(t.clientX,t.clientY),E.subVectors(S,M).multiplyScalar(c.panSpeed),D(E.x,E.y),M.copy(S),c.update()}(t)}}(t)}}function Y(t){if(!1!==c.enabled)switch(t.pointerType){case"mouse":case"pen":!function(t){if(!1===c.enabled)return;c.domElement.ownerDocument.removeEventListener("pointermove",X,!1),c.domElement.ownerDocument.removeEventListener("pointerup",Y,!1),c.dispatchEvent(u),p=d.NONE}()}}function Z(t){!1===c.enabled||!1===c.enableZoom||p!==d.NONE&&p!==d.ROTATE||(t.preventDefault(),t.stopPropagation(),c.dispatchEvent(h),function(t){t.deltaY<0?U(R()):t.deltaY>0&&z(R()),c.update()}(t),c.dispatchEvent(u))}function $(t){!1!==c.enabled&&!1!==c.enableKeys&&!1!==c.enablePan&&function(t){var e=!1;switch(t.keyCode){case c.keys.UP:D(0,c.keyPanSpeed),e=!0;break;case c.keys.BOTTOM:D(0,-c.keyPanSpeed),e=!0;break;case c.keys.LEFT:D(c.keyPanSpeed,0),e=!0;break;case c.keys.RIGHT:D(-c.keyPanSpeed,0),e=!0}e&&(t.preventDefault(),c.update())}(t)}function J(t){if(!1!==c.enabled){switch(t.preventDefault(),t.touches.length){case 1:switch(c.touches.ONE){case at:if(!1===c.enableRotate)return;F(t),p=d.TOUCH_ROTATE;break;case ct:if(!1===c.enablePan)return;k(t),p=d.TOUCH_PAN;break;default:p=d.NONE}break;case 2:switch(c.touches.TWO){case lt:if(!1===c.enableZoom&&!1===c.enablePan)return;!function(t){c.enableZoom&&G(t),c.enablePan&&k(t)}(t),p=d.TOUCH_DOLLY_PAN;break;case ht:if(!1===c.enableZoom&&!1===c.enableRotate)return;!function(t){c.enableZoom&&G(t),c.enableRotate&&F(t)}(t),p=d.TOUCH_DOLLY_ROTATE;break;default:p=d.NONE}break;default:p=d.NONE}p!==d.NONE&&c.dispatchEvent(h)}}function Q(t){if(!1!==c.enabled)switch(t.preventDefault(),t.stopPropagation(),p){case d.TOUCH_ROTATE:if(!1===c.enableRotate)return;V(t),c.update();break;case d.TOUCH_PAN:if(!1===c.enablePan)return;j(t),c.update();break;case d.TOUCH_DOLLY_PAN:if(!1===c.enableZoom&&!1===c.enablePan)return;!function(t){c.enableZoom&&W(t),c.enablePan&&j(t)}(t),c.update();break;case d.TOUCH_DOLLY_ROTATE:if(!1===c.enableZoom&&!1===c.enableRotate)return;!function(t){c.enableZoom&&W(t),c.enableRotate&&V(t)}(t),c.update();break;default:p=d.NONE}}function K(t){!1!==c.enabled&&(c.dispatchEvent(u),p=d.NONE)}function tt(t){!1!==c.enabled&&t.preventDefault()}c.domElement.addEventListener("contextmenu",tt,!1),c.domElement.addEventListener("pointerdown",q,!1),c.domElement.addEventListener("wheel",Z,!1),c.domElement.addEventListener("touchstart",J,!1),c.domElement.addEventListener("touchend",K,!1),c.domElement.addEventListener("touchmove",Q,!1),c.domElement.addEventListener("keydown",$,!1),-1===c.domElement.tabIndex&&(c.domElement.tabIndex=0),this.update()};(yl.prototype=Object.create(ut.prototype)).constructor=yl;var xl=function(t,e){yl.call(this,t,e),this.screenSpacePanning=!1,this.mouseButtons.LEFT=st,this.mouseButtons.RIGHT=rt,this.touches.ONE=ct,this.touches.TWO=ht};(xl.prototype=Object.create(ut.prototype)).constructor=xl;const _l=t=>{const e=Math.max(...t),n=Math.min(...t);return{max:e,min:n,diff:e-n}};class bl extends za{constructor(t,e){if(super(),t.length!==e.length)throw new Error("LatLng and Altitude data is not in sync");this.positionData=((t,e)=>{const n=_l(t.map(t=>t[0])),i=Math.cos((n.max+n.min)/2),r=t.map(([t,n],r)=>({x:6371*n*i,y:6371*t,z:e[r]})),o=_l(r.map(t=>t.x)),s=_l(r.map(t=>t.y)),a=_l(r.map(t=>t.z));return{xLimits:o,yLimits:s,zLimits:a,positions:r.map(({x:t,y:e,z:n})=>({x:-(t-o.min)+o.diff,y:e-s.min,z:n-a.min}))}})(t,e);const n=0-this.positionData.xLimits.diff/2,i=0-this.positionData.yLimits.diff/2,r=0-this.positionData.zLimits.diff/2;this.points=this.positionData.positions.map(({x:t,y:e,z:o})=>new Et(t+n,e+i,o+r))}getPoint(t){const e=t*(this.points.length-1),n=Math.floor(e),i=Math.ceil(e);return new Et(ft.lerp(this.points[n].x,this.points[i].x,e-n),ft.lerp(this.points[n].y,this.points[i].y,e-n),ft.lerp(this.points[n].z,this.points[i].z,e-n))}get width(){return this.positionData?this.positionData.xLimits.diff:-1}get height(){return this.positionData?this.positionData.yLimits.diff:-1}}Se.DefaultUp.set(0,0,1);const wl=new co;wl.background=new qe(4473924);const Ml=new qn(40,window.innerWidth/window.innerHeight,.1,5e3),Sl=new mc(4210752);wl.add(Sl);const El=new fc(16777215,.85);wl.add(El);const Tl=new so,Al=new yl(Ml,Tl.domElement);Al.enableZoom=!0,Al.enablePan=!0,Al.autoRotate=!0;const Ll=[{value:0,color:new qe(255)},{value:0,color:new qe(65280)},{value:0,color:new qe(16776960)},{value:0,color:new qe(16753920)},{value:0,color:new qe(16711680)}];let Rl;const Pl=t=>{Ml.aspect=t.offsetWidth/t.offsetHeight,Tl.setPixelRatio(window.devicePixelRatio),Tl.setSize(t.offsetWidth,t.offsetHeight),t.appendChild(Tl.domElement);const e=()=>{Tl.render(wl,Ml),Al.update(),requestAnimationFrame(e)};e()},Cl=t=>{t.zones.forEach((t,e)=>{Ll[e].value=t.min})},Nl=t=>{Rl&&wl.remove(Rl);const e=((t,e)=>{const n=t.sort((t,e)=>t.value-e.value);return t=>{const i=t*(e.length-1),r=Math.floor(i),o=Math.ceil(i),s=ft.lerp(e[r],e[o],i-r);let a=null,c=null;if(n.forEach(t=>{s>t.value&&(a=t),s<t.value&&!c&&(c=t)}),a&&c){const t=(s-a.value)/(c.value-a.value);return a.color.clone().lerp(c.color,t)}return a?a.color:new qe(0)}})(Ll,t.heartrate.data),n=new bl(t.latlng.data,t.altitude.data),i=new Js(n,5e3,1,8,!1),r=new na({side:2,flatShading:!0,vertexColors:!0}),o=Math.max(n.width,n.height),s=Math.abs(o/Math.sin(20));Ml.position.y=-s,Ml.position.z=s/4,(t=>{const n=t.faces.length,i=n/16;for(let r=0;r<n;++r){const o=e(Math.floor(r/16%n)/i);t.faces[r].color=o}})(i),Rl=new Un(i,r),wl.add(Rl)};var Ol=n(0),Il=n(1);n(4);function Dl(t){let e;return{c(){e=m("main"),x(e,"class","svelte-neprcd")},m(n,i){p(n,e,i),t[1](e)},p:i,i:i,o:i,d(n){n&&f(e),t[1](null)}}}function zl(t,e,n){let i;return E(()=>{Pl(i)}),Cl(Il.heart_rate),Nl(Ol),[i,function(t){A[t?"unshift":"push"](()=>{i=t,n(0,i)})}]}var Ul=class extends ${constructor(t){super(),Z(this,t,zl,Dl,c,{})}};function Bl(t){let e,n,i;return{c(){e=m("div"),n=g("Something went wrong -\r\n        "),i=g(t[0]),x(e,"class","alert alert-danger"),x(e,"role","alert")},m(t,r){p(t,e,r),d(e,n),d(e,i)},p(t,e){1&e&&_(i,t[0])},d(t){t&&f(e)}}}function Hl(t){let e,n,i,r,o,s,a,c,l,h,u,g,_;n=new Ul({});let b=t[0]&&Bl(t);return{c(){e=m("div"),q(n.$$.fragment),i=v(),r=m("main"),o=m("h1"),o.textContent="Activity Viewer 3D",s=v(),a=m("p"),a.textContent="View your Strava activities in 3D space with heartrate data visualization.",c=v(),l=m("button"),l.textContent="Login",h=v(),b&&b.c(),x(o,"class","display-3"),x(a,"class","lead"),x(l,"type","button"),x(l,"class","btn btn-primary btn-lg btn-block mb-2"),x(r,"class","col-4 card text-center"),x(e,"class","row h-100 justify-content-center align-items-start")},m(f,m){p(f,e,m),X(n,e,null),d(e,i),d(e,r),d(r,o),d(r,s),d(r,a),d(r,c),d(r,l),d(r,h),b&&b.m(r,null),u=!0,g||(_=y(l,"click",t[1]),g=!0)},p(t,[e]){t[0]?b?b.p(t,e):(b=Bl(t),b.c(),b.m(r,null)):b&&(b.d(1),b=null)},i(t){u||(G(n.$$.fragment,t),u=!0)},o(t){V(n.$$.fragment,t),u=!1},d(t){t&&f(e),Y(n),b&&b.d(),g=!1,_()}}}function Fl(t,e,n){let i="";return[i,()=>{const t=window.open("/popup.html","_blank","width=700,height=600");window.onmessage=e=>{"AUTH"===e.data.type&&(e.data.error?n(0,i=e.data.data):tt.setAuth(e.data.data),t.close())}}]}var kl=class extends ${constructor(t){super(),Z(this,t,Fl,Hl,c,{})}};n(5);function Gl(t){let e,n;return{c(){e=m("h6"),n=g(t[0]),x(e,"class","sidebar-heading px-3 mt-4 mb-1 text-muted svelte-1ra1a12"),b(e,"subheading",t[1]),b(e,"mt-4",!t[1]),b(e,"mt-2",t[1])},m(t,i){p(t,e,i),d(e,n)},p(t,[i]){1&i&&_(n,t[0]),2&i&&b(e,"subheading",t[1]),2&i&&b(e,"mt-4",!t[1]),2&i&&b(e,"mt-2",t[1])},i:i,o:i,d(t){t&&f(e)}}}function Vl(t,e,n){let{title:i}=e,{subheading:r=!1}=e;return t.$$set=t=>{"title"in t&&n(0,i=t.title),"subheading"in t&&n(1,r=t.subheading)},[i,r]}var jl=class extends ${constructor(t){super(),Z(this,t,Vl,Gl,c,{title:0,subheading:1})}};const Wl=()=>{const t=function(t){let e;return h(t,t=>e=t)(),e}(tt);if(!t)throw new Error("Unauthenticated");return"Bearer "+t.access_token},ql=async t=>{const e=await fetch(t,{method:"GET",headers:{Authorization:Wl(),"Content-Type":"application/json"}});if(!e.ok)switch(e.status){case 401:throw new Error("Auth error");default:throw new Error("Network Error")}return e.json()};let Xl=0;const Yl=(()=>{const{update:t,subscribe:e}=Q([]);return{subscribe:e,getNextPage:async()=>{const e=await(async t=>{const e="https://www.strava.com/api/v3/athlete/activities?page={page}".replace("{page}",""+t);return await ql(e)})(++Xl);t(t=>[...t,...e])}}})(),Zl=(()=>{const t=JSON.parse(localStorage.getItem("SELECTED_ACTIVITY"))||null,{set:e,subscribe:n}=Q(t);return n(t=>{localStorage.setItem("SELECTED_ACTIVITY",JSON.stringify(t))}),{subscribe:n,clearActivity:()=>e(null),selectActivity:t=>e(t)}})();n(6);function $l(t){let e,n,r,o,s,a,c,l,h,u,w,M,S,E,T,A,L,R,P,C,N=t[0].name+"";return{c(){e=m("div"),n=m("div"),r=m("div"),o=m("h5"),s=g(N),a=v(),c=m("small"),c.textContent=""+t[2],l=v(),h=m("div"),u=m("div"),w=m("i"),S=v(),E=m("i"),A=v(),L=m("div"),x(o,"class","mb-1"),x(w,"class","fas fa-heart svelte-zxh7u5"),x(w,"title",M=t[0].has_heartrate?"":"Missing Heart Rate data"),b(w,"muted",!t[0].has_heartrate),x(E,"class","fas fa-map-marker-alt svelte-zxh7u5"),x(E,"title",T=t[0].start_latlng?"":"Missing GPS data"),b(E,"muted",!t[0].start_latlng),x(u,"class","d-flex flex-column justify-content-around align-items-center"),x(L,"class","fas fa-chevron-right select-arrow d-flex align-items-center pl-2 svelte-zxh7u5"),b(L,"muted",!t[3]),x(h,"class","d-flex justify-content-between"),x(n,"class","d-flex w-100 justify-content-between"),x(e,"class","list-group-item svelte-zxh7u5"),x(e,"title",R=t[3]?"":"Missing GPS / Heart Rate data"),b(e,"list-group-item-primary",t[1]===t[0].id),b(e,"list-group-item-action",t[3]),b(e,"text-muted",!t[3])},m(i,f){p(i,e,f),d(e,n),d(n,r),d(r,o),d(o,s),d(r,a),d(r,c),d(n,l),d(n,h),d(h,u),d(u,w),d(u,S),d(u,E),d(h,A),d(h,L),P||(C=y(e,"click",t[4]),P=!0)},p(t,[n]){1&n&&N!==(N=t[0].name+"")&&_(s,N),1&n&&M!==(M=t[0].has_heartrate?"":"Missing Heart Rate data")&&x(w,"title",M),1&n&&b(w,"muted",!t[0].has_heartrate),1&n&&T!==(T=t[0].start_latlng?"":"Missing GPS data")&&x(E,"title",T),1&n&&b(E,"muted",!t[0].start_latlng),8&n&&b(L,"muted",!t[3]),3&n&&b(e,"list-group-item-primary",t[1]===t[0].id),8&n&&b(e,"list-group-item-action",t[3]),8&n&&b(e,"text-muted",!t[3])},i:i,o:i,d(t){t&&f(e),P=!1,C()}}}function Jl(t,e,n){let i;u(t,Zl,t=>n(1,i=t));let{activity:r}=e;const o=new Date(r.start_date).toLocaleString(),s=r.has_heartrate&&!!r.start_latlng;return t.$$set=t=>{"activity"in t&&n(0,r=t.activity)},[r,i,o,s,()=>{s&&Zl.selectActivity(r.id)}]}var Ql=class extends ${constructor(t){super(),Z(this,t,Jl,$l,c,{activity:0})}};function Kl(t){let e;return{c(){e=g("Load More")},m(t,n){p(t,e,n)},d(t){t&&f(e)}}}function th(t){let e;return{c(){e=m("i"),x(e,"class","fas fa-spinner fa-pulse")},m(t,n){p(t,e,n)},d(t){t&&f(e)}}}function eh(t){let e,n,r,o;function s(t,e){return t[0]?th:Kl}let a=s(t),c=a(t);return{c(){e=m("div"),n=m("button"),c.c(),x(n,"type","button"),x(n,"class","btn btn-primary btn-block"),n.disabled=t[0],x(e,"class","list-group-item text-center")},m(i,s){p(i,e,s),d(e,n),c.m(n,null),r||(o=y(n,"click",t[1]),r=!0)},p(t,[e]){a!==(a=s(t))&&(c.d(1),c=a(t),c&&(c.c(),c.m(n,null))),1&e&&(n.disabled=t[0])},i:i,o:i,d(t){t&&f(e),c.d(),r=!1,o()}}}function nh(t,e,n){let i=!1;return[i,()=>{n(0,i=!0),Yl.getNextPage().then(()=>n(0,i=!1))}]}var ih=class extends ${constructor(t){super(),Z(this,t,nh,eh,c,{})}};function rh(t,e,n){const i=t.slice();return i[2]=e[n],i}function oh(t){let e,n,r,o=t[5].message+"";return{c(){e=m("div"),n=g("Something went wrong:\n      "),r=g(o),x(e,"class","list-group-item list-group-item-danger text-center")},m(t,i){p(t,e,i),d(e,n),d(e,r)},p:i,i:i,o:i,d(t){t&&f(e)}}}function sh(t){let e,n,i,r=t[0],o=[];for(let e=0;e<r.length;e+=1)o[e]=ah(rh(t,r,e));const s=t=>V(o[t],1,1,()=>{o[t]=null});return n=new ih({}),{c(){for(let t=0;t<o.length;t+=1)o[t].c();e=v(),q(n.$$.fragment)},m(t,r){for(let e=0;e<o.length;e+=1)o[e].m(t,r);p(t,e,r),X(n,t,r),i=!0},p(t,n){if(1&n){let i;for(r=t[0],i=0;i<r.length;i+=1){const s=rh(t,r,i);o[i]?(o[i].p(s,n),G(o[i],1)):(o[i]=ah(s),o[i].c(),G(o[i],1),o[i].m(e.parentNode,e))}for(F(),i=r.length;i<o.length;i+=1)s(i);k()}},i(t){if(!i){for(let t=0;t<r.length;t+=1)G(o[t]);G(n.$$.fragment,t),i=!0}},o(t){o=o.filter(Boolean);for(let t=0;t<o.length;t+=1)V(o[t]);V(n.$$.fragment,t),i=!1},d(t){!function(t,e){for(let n=0;n<t.length;n+=1)t[n]&&t[n].d(e)}(o,t),t&&f(e),Y(n,t)}}}function ah(t){let e,n;return e=new Ql({props:{activity:t[2]}}),{c(){q(e.$$.fragment)},m(t,i){X(e,t,i),n=!0},p(t,n){const i={};1&n&&(i.activity=t[2]),e.$set(i)},i(t){n||(G(e.$$.fragment,t),n=!0)},o(t){V(e.$$.fragment,t),n=!1},d(t){Y(e,t)}}}function ch(t){let e;return{c(){e=m("div"),e.innerHTML='<i class="fas fa-spinner fa-pulse"></i>',x(e,"class","list-group-item text-center")},m(t,n){p(t,e,n)},p:i,i:i,o:i,d(t){t&&f(e)}}}function lh(t){let e,n,i,r={ctx:t,current:null,token:null,hasCatch:!0,pending:ch,then:sh,catch:oh,error:5,blocks:[,,,]};return j(n=t[1],r),{c(){e=m("div"),r.block.c(),x(e,"class","list-group list-group-flush")},m(t,n){p(t,e,n),r.block.m(e,r.anchor=null),r.mount=()=>e,r.anchor=null,i=!0},p(e,[n]){{const i=(t=e).slice();i[5]=r.resolved,r.block.p(i,n)}},i(t){i||(G(r.block),i=!0)},o(t){for(let t=0;t<3;t+=1){V(r.blocks[t])}i=!1},d(t){t&&f(e),r.block.d(),r.token=null,r=null}}}function hh(t,e,n){let i;u(t,Yl,t=>n(0,i=t));const r=Yl.getNextPage();return[i,r]}var uh=class extends ${constructor(t){super(),Z(this,t,hh,lh,c,{})}};const dh=async()=>{const t=JSON.parse(localStorage.getItem("ZONES"));if(t)return t;const e=await ql("https://www.strava.com/api/v3/athlete/zones");return localStorage.setItem("ZONES",JSON.stringify(e)),e};function ph(t){let e,n,r,o,s,a,c,l,h,u,y,b,w;return{c(){e=m("div"),n=m("div"),r=m("h4"),o=g(t[0]),s=v(),a=m("span"),c=g(t[1]),l=g(" - "),h=g(t[2]),u=v(),y=m("span"),b=g("   "),x(r,"class","mb-0"),x(y,"class","badge"),x(y,"style",w=`background-color: ${t[3]};`),x(n,"class","d-flex w-100 justify-content-between align-items-center"),x(e,"class","list-group-item")},m(t,i){p(t,e,i),d(e,n),d(n,r),d(r,o),d(n,s),d(n,a),d(a,c),d(a,l),d(a,h),d(n,u),d(n,y),d(y,b)},p(t,[e]){1&e&&_(o,t[0]),2&e&&_(c,t[1]),4&e&&_(h,t[2]),8&e&&w!==(w=`background-color: ${t[3]};`)&&x(y,"style",w)},i:i,o:i,d(t){t&&f(e)}}}function fh(t,e,n){let{label:i}=e,{min:r}=e,{max:o}=e,{color:s}=e;return t.$$set=t=>{"label"in t&&n(0,i=t.label),"min"in t&&n(1,r=t.min),"max"in t&&n(2,o=t.max),"color"in t&&n(3,s=t.color)},[i,r,o,s]}var mh=class extends ${constructor(t){super(),Z(this,t,fh,ph,c,{label:0,min:1,max:2,color:3})}};function gh(t){let e,n,i,r,o,s,a,c,l,h,u,d;return e=new jl({props:{title:"Heart Rate",subheading:!0}}),i=new mh({props:{label:"1",color:K[0],min:""+t[0].zones[0].min,max:""+t[0].zones[0].max}}),o=new mh({props:{label:"2",color:K[1],min:""+t[0].zones[1].min,max:""+t[0].zones[1].max}}),a=new mh({props:{label:"3",color:K[2],min:""+t[0].zones[2].min,max:""+t[0].zones[2].max}}),l=new mh({props:{label:"4",color:K[3],min:""+t[0].zones[3].min,max:""+t[0].zones[3].max}}),u=new mh({props:{label:"5",color:K[4],min:""+t[0].zones[4].min,max:"∞"}}),{c(){q(e.$$.fragment),n=v(),q(i.$$.fragment),r=v(),q(o.$$.fragment),s=v(),q(a.$$.fragment),c=v(),q(l.$$.fragment),h=v(),q(u.$$.fragment)},m(t,f){X(e,t,f),p(t,n,f),X(i,t,f),p(t,r,f),X(o,t,f),p(t,s,f),X(a,t,f),p(t,c,f),X(l,t,f),p(t,h,f),X(u,t,f),d=!0},p(t,[e]){const n={};1&e&&(n.min=""+t[0].zones[0].min),1&e&&(n.max=""+t[0].zones[0].max),i.$set(n);const r={};1&e&&(r.min=""+t[0].zones[1].min),1&e&&(r.max=""+t[0].zones[1].max),o.$set(r);const s={};1&e&&(s.min=""+t[0].zones[2].min),1&e&&(s.max=""+t[0].zones[2].max),a.$set(s);const c={};1&e&&(c.min=""+t[0].zones[3].min),1&e&&(c.max=""+t[0].zones[3].max),l.$set(c);const h={};1&e&&(h.min=""+t[0].zones[4].min),u.$set(h)},i(t){d||(G(e.$$.fragment,t),G(i.$$.fragment,t),G(o.$$.fragment,t),G(a.$$.fragment,t),G(l.$$.fragment,t),G(u.$$.fragment,t),d=!0)},o(t){V(e.$$.fragment,t),V(i.$$.fragment,t),V(o.$$.fragment,t),V(a.$$.fragment,t),V(l.$$.fragment,t),V(u.$$.fragment,t),d=!1},d(t){Y(e,t),t&&f(n),Y(i,t),t&&f(r),Y(o,t),t&&f(s),Y(a,t),t&&f(c),Y(l,t),t&&f(h),Y(u,t)}}}function vh(t,e,n){let{zoneData:i}=e;return t.$$set=t=>{"zoneData"in t&&n(0,i=t.zoneData)},[i]}var yh=class extends ${constructor(t){super(),Z(this,t,vh,gh,c,{zoneData:0})}};function xh(t){let e,n,r,o=t[2].message+"";return{c(){e=m("div"),n=g("Something went wrong:\n      "),r=g(o),x(e,"class","list-group-item list-group-item-danger text-center")},m(t,i){p(t,e,i),d(e,n),d(e,r)},p:i,i:i,o:i,d(t){t&&f(e)}}}function _h(t){let e,n;return e=new yh({props:{zoneData:t[1].heart_rate}}),{c(){q(e.$$.fragment)},m(t,i){X(e,t,i),n=!0},p:i,i(t){n||(G(e.$$.fragment,t),n=!0)},o(t){V(e.$$.fragment,t),n=!1},d(t){Y(e,t)}}}function bh(t){let e;return{c(){e=m("div"),e.innerHTML='<i class="fas fa-spinner fa-pulse"></i>',x(e,"class","list-group-item text-center")},m(t,n){p(t,e,n)},p:i,i:i,o:i,d(t){t&&f(e)}}}function wh(t){let e,n,i,r={ctx:t,current:null,token:null,hasCatch:!0,pending:bh,then:_h,catch:xh,value:1,error:2,blocks:[,,,]};return j(n=t[0],r),{c(){e=m("div"),r.block.c(),x(e,"class","list-group list-group-flush")},m(t,n){p(t,e,n),r.block.m(e,r.anchor=null),r.mount=()=>e,r.anchor=null,i=!0},p(e,[n]){{const i=(t=e).slice();i[1]=i[2]=r.resolved,r.block.p(i,n)}},i(t){i||(G(r.block),i=!0)},o(t){for(let t=0;t<3;t+=1){V(r.blocks[t])}i=!1},d(t){t&&f(e),r.block.d(),r.token=null,r=null}}}function Mh(t){return[dh()]}var Sh=class extends ${constructor(t){super(),Z(this,t,Mh,wh,c,{})}};n(7);function Eh(t){let e,n,i,r,o,s,a,c,l,h,u,_,w,M,S,E;return i=new jl({props:{title:"Activities"}}),o=new uh({}),w=new Sh({}),{c(){e=m("nav"),n=m("div"),q(i.$$.fragment),r=v(),q(o.$$.fragment),s=v(),a=m("div"),c=m("div"),l=g("Zones Data\n      "),h=m("i"),u=v(),_=m("div"),q(w.$$.fragment),x(n,"class","sidebar-top svelte-vl3u22"),x(h,"class","fas"),b(h,"fa-chevron-up",t[0]),b(h,"fa-chevron-down",!t[0]),x(c,"class","sidebar-bottom__button list-group-item d-flex justify-content-between align-items-center svelte-vl3u22"),x(_,"class","sidebar-bottom__collapsable svelte-vl3u22"),b(_,"collapse",t[0]),x(a,"class","sidebar-bottom svelte-vl3u22"),x(e,"class","sidebar svelte-vl3u22")},m(f,m){p(f,e,m),d(e,n),X(i,n,null),d(n,r),X(o,n,null),d(e,s),d(e,a),d(a,c),d(c,l),d(c,h),d(a,u),d(a,_),X(w,_,null),M=!0,S||(E=y(c,"click",t[1]),S=!0)},p(t,[e]){1&e&&b(h,"fa-chevron-up",t[0]),1&e&&b(h,"fa-chevron-down",!t[0]),1&e&&b(_,"collapse",t[0])},i(t){M||(G(i.$$.fragment,t),G(o.$$.fragment,t),G(w.$$.fragment,t),M=!0)},o(t){V(i.$$.fragment,t),V(o.$$.fragment,t),V(w.$$.fragment,t),M=!1},d(t){t&&f(e),Y(i),Y(o),Y(w),S=!1,E()}}}function Th(t,e,n){let i=!0;return[i,()=>{n(0,i=!i)}]}var Ah=class extends ${constructor(t){super(),Z(this,t,Th,Eh,c,{})}};n(8);function Lh(t){let e;return{c(){e=m("main"),x(e,"class","svelte-1qwv5i")},m(n,i){p(n,e,i),t[1](e)},p:i,i:i,o:i,d(n){n&&f(e),t[1](null)}}}function Rh(t,e,n){let i,r;return E(()=>{Pl(i)}),dh().then(t=>Cl(t.heart_rate)),Zl.subscribe(t=>{t&&(r=(async t=>{const e="ACTIVITY_{id}".replace("{id}",t),n=JSON.parse(localStorage.getItem(e));if(n)return n;const i="https://www.strava.com/api/v3/activities/{id}/streams?keys=latlng,velocity_smooth,altitude,heartrate&key_by_type=true".replace("{id}",t),r=await ql(i);return localStorage.setItem(e,JSON.stringify(r)),r})(t),r.then(t=>Nl(t)))}),[i,function(t){A[t?"unshift":"push"](()=>{i=t,n(0,i)})}]}var Ph=class extends ${constructor(t){super(),Z(this,t,Rh,Lh,c,{})}};function Ch(t){let e,n,r,o,s;return n=new Ah({}),o=new Ph({}),{c(){e=m("main"),q(n.$$.fragment),r=v(),q(o.$$.fragment),x(e,"class","row")},m(t,i){p(t,e,i),X(n,e,null),d(e,r),X(o,e,null),s=!0},p:i,i(t){s||(G(n.$$.fragment,t),G(o.$$.fragment,t),s=!0)},o(t){V(n.$$.fragment,t),V(o.$$.fragment,t),s=!1},d(t){t&&f(e),Y(n),Y(o)}}}var Nh=class extends ${constructor(t){super(),Z(this,t,null,Ch,c,{})}};function Oh(t){let e,n;return e=new kl({}),{c(){q(e.$$.fragment)},m(t,i){X(e,t,i),n=!0},i(t){n||(G(e.$$.fragment,t),n=!0)},o(t){V(e.$$.fragment,t),n=!1},d(t){Y(e,t)}}}function Ih(t){let e,n,i,r;return e=new it({}),i=new Nh({}),{c(){q(e.$$.fragment),n=v(),q(i.$$.fragment)},m(t,o){X(e,t,o),p(t,n,o),X(i,t,o),r=!0},i(t){r||(G(e.$$.fragment,t),G(i.$$.fragment,t),r=!0)},o(t){V(e.$$.fragment,t),V(i.$$.fragment,t),r=!1},d(t){Y(e,t),t&&f(n),Y(i,t)}}}function Dh(t){let e,n,i,r;const o=[Ih,Oh],s=[];function a(t,e){return t[0]?0:1}return n=a(t),i=s[n]=o[n](t),{c(){e=m("div"),i.c(),x(e,"class","container-fluid h-100 overflow-hidden")},m(t,i){p(t,e,i),s[n].m(e,null),r=!0},p(t,[r]){let c=n;n=a(t),n!==c&&(F(),V(s[c],1,1,()=>{s[c]=null}),k(),i=s[n],i||(i=s[n]=o[n](t),i.c()),G(i,1),i.m(e,null))},i(t){r||(G(i),r=!0)},o(t){V(i),r=!1},d(t){t&&f(e),s[n].d()}}}function zh(t,e,n){let i;return u(t,tt,t=>n(0,i=t)),[i]}var Uh=class extends ${constructor(t){super(),Z(this,t,zh,Dh,c,{})}};n(9),n(10),n(11);const Bh=new Uh({target:document.body});e.default=Bh}]);